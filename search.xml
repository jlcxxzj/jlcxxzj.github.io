<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FPGA与Flash的交互</title>
      <link href="/2023/10/15/0-xin-de-gong-zuo-lu-cheng/fpga-yu-flash-de-jiao-hu/"/>
      <url>/2023/10/15/0-xin-de-gong-zuo-lu-cheng/fpga-yu-flash-de-jiao-hu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="Flash"><a href="#Flash" class="headerlink" title="Flash"></a>Flash</h2><p>片选信号<br>读使能<br>写使能<br>时钟信号（一般低于最大时钟频率，二分频，四分频）</p><h2 id="FPGA-SPI"><a href="#FPGA-SPI" class="headerlink" title="FPGA SPI"></a>FPGA SPI</h2><p>SPI是总线<br>数据和信号的区别：<strong>数据是持续变化的信号，相对于信号携带的信息更多。</strong><br>数据：在C++的数据类型中，1个字节为char，4个字节为int，8个字节为double。<br>如果选择在时钟的上升沿去采集数据（存数据），则在时钟的下降沿变化数据的时候最稳定，刚好在两个上升沿中间。即在下降沿改变数据，上升沿去采集数据。</p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPGA </tag>
            
            <tag> Flash </tag>
            
            <tag> SPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作之后的一点感想</title>
      <link href="/2023/10/15/0-xin-de-gong-zuo-lu-cheng/gong-zuo-zhi-hou-de-yi-dian-gan-xiang/"/>
      <url>/2023/10/15/0-xin-de-gong-zuo-lu-cheng/gong-zuo-zhi-hou-de-yi-dian-gan-xiang/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="工作之后的一点感想"><a href="#工作之后的一点感想" class="headerlink" title="工作之后的一点感想"></a>工作之后的一点感想</h2><p>好久没有打开个人博客了，之前信誓旦旦一天更新的一次博客的的豪言壮语也像毕业之后越走越远的同学一样，因为现实的工作量而淡出了自己的生活。</p><p>转眼毕业已经四个月，工作也近三个月，学校的生活有纵有不舍，也需要整理行囊步入新的旅程。总结过去三年在上大的日子，最大的成就是敢于直面计算机这个从前望而生畏的领域，磕磕绊绊学了三年的JAVA最后在工作中0.01也用不上，也可以波澜不惊的学习新的技术了。</p><p>工作之后最大的转变是，需要面临更多的选择，机会和挑战时刻并存，选择的结果决定了未来好多年的职业道路和发展机遇。目前所在公司的主流技术是FPGA，而我在拿到offer前并不知道FPGA是什么，在进入公司前，不知道其具体应用领域。因为我的岗位是测试系统集成开发，具体工作内容是对调试测试现场进行数字化改造，虽然岗位和FPGA没有紧密的联系，但是调测的内容很多都是围绕FPGA进行的，学习FPGA就成为了解需求场景，挖掘数字化改造需要的必然要求。这也就是说，我之前可以忽视，甚至有点排斥的硬件领域也得捡起来了，多少有点让人意外。</p><h2 id="未来较短一段时间的工作安排"><a href="#未来较短一段时间的工作安排" class="headerlink" title="未来较短一段时间的工作安排"></a>未来较短一段时间的工作安排</h2><p>6个月的试用期还有三个多月，未来半年到一年的时间需要从数字造改造需求出发，挖掘能落地的自动化测试系统开发。事实上，近一个月一直在试图找到一个短期的改造需求，绞尽脑子也没有合理化的方案。由于有FPGA的学习需要，接下来在学习FPGA的同时，重心是研究硬件方案+软件方案的数字化和自动化的可能性、可行性。</p><h2 id="未来规划"><a href="#未来规划" class="headerlink" title="未来规划"></a>未来规划</h2><p>还没有想清楚</p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作之后的一点感想 </tag>
            
            <tag> 未来较短一段时间的工作安排 </tag>
            
            <tag> 未来规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA与Flash的交互</title>
      <link href="/2023/09/15/fpga-yu-flash-de-jiao-hu/"/>
      <url>/2023/09/15/fpga-yu-flash-de-jiao-hu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="Flash"><a href="#Flash" class="headerlink" title="Flash"></a>Flash</h2><p>片选信号<br>读使能<br>写使能<br>时钟信号（一般低于最大时钟频率，二分频，四分频）</p><h2 id="FPGA-SPI"><a href="#FPGA-SPI" class="headerlink" title="FPGA SPI"></a>FPGA SPI</h2><p>SPI是总线<br>数据和信号的区别：<strong>数据是持续变化的信号，相对于信号携带的信息更多。</strong><br>数据：在C++的数据类型中，1个字节为char，4个字节为int，8个字节为double。<br>如果选择在时钟的上升沿去采集数据（存数据），则在时钟的下降沿变化数据的时候最稳定，刚好在两个上升沿中间。即在下降沿改变数据，上升沿去采集数据。</p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPGA </tag>
            
            <tag> Flash </tag>
            
            <tag> SPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathPix调研</title>
      <link href="/2023/06/15/mathpix-diao-yan/"/>
      <url>/2023/06/15/mathpix-diao-yan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="MathPix"><a href="#MathPix" class="headerlink" title="MathPix"></a>MathPix</h2><p><a href="https://mathpix.com/" target="_blank" rel="noopener">Mathpix: Document cloud for research</a><br><a href="https://blog.csdn.net/zhouchen1998/article/details/103297144#:~:text=%E4%BD%86%E6%98%AF%E5%A4%8D%E6%9D%82%E7%9A%84Latex%E8%AF%AD%E6%B3%95%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E5%86%99%E5%85%AC%E5%BC%8F%E4%BC%BC%E4%B9%8E%E6%9C%89%E4%BA%9B%E5%A4%8D%E6%9D%82%EF%BC%8C%E5%BE%88%E5%A4%9A%E6%97%B6%E5%80%99%E6%88%91%E4%BB%AC%E5%B8%8C%E6%9C%9B%E5%9C%A8%E4%B8%80%E4%BA%9B%E5%85%AC%E5%BC%8F%E7%9A%84%E5%9F%BA%E7%A1%80%E4%B8%8A%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9%EF%BC%8C%E4%BD%86%E6%98%AF%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96%E8%AE%BA%E6%96%87%E6%88%96%E8%80%85%E7%BD%91%E9%A1%B5%E7%9A%84%E5%85%AC%E5%BC%8F%E6%BA%90%E7%A0%81%EF%BC%8C%E7%8E%B0%E5%9C%A8Mathpix%E8%A7%A3%E5%86%B3%E4%BA%86%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8F%AA%E8%A6%81%E6%98%AF%E5%9B%BE%E7%89%87%EF%BC%8C%E6%97%A0%E8%AE%BA%E6%98%AF,%E8%AE%BA%E6%96%87%E6%88%AA%E5%9B%BE%E3%80%81%E7%BD%91%E9%A1%B5%E6%88%AA%E5%9B%BE%E3%80%81%E6%89%8B%E5%86%99%E7%9A%84%E5%85%AC%E5%BC%8F%20%EF%BC%8CMathpix%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%BB%A5%E8%BE%83%E9%AB%98%E7%9A%84%E5%87%86%E7%A1%AE%E7%8E%87%E8%AF%86%E5%88%AB%E5%87%BA%E6%9D%A5%EF%BC%8C%E6%95%B4%E7%90%86%E6%88%90%E5%A4%9A%E7%A7%8D%E6%A0%BC%E5%BC%8F%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%88Latex%E5%85%AC%E5%BC%8F%E3%80%81Markdown%E5%85%AC%E5%BC%8F%EF%BC%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%8F%92%E5%85%A5%E5%88%B0Markdown%E3%80%81Word%E3%80%81Latex%E6%96%87%E6%A1%A3%E4%B8%AD%E3%80%82" target="_blank" rel="noopener">(88条消息) Mathpix教程_周先森爱吃素的博客-CSDN博客</a><br><a href="https://blog.csdn.net/sinat_37574187/article/details/121381293" target="_blank" rel="noopener">(88条消息) 公式识别 – 百面OCR_AI生成曾小健的博客-CSDN博客</a><br><a href="https://zhuanlan.zhihu.com/p/380433944" target="_blank" rel="noopener">神器mathpix收费了？教你轻松调用API获得每个月500次免费识别！ - 知乎 (zhihu.com)</a></p><h2 id="Latex何以这么优秀"><a href="#Latex何以这么优秀" class="headerlink" title="Latex何以这么优秀"></a>Latex何以这么优秀</h2><p><a href="https://zhuanlan.zhihu.com/p/110756681" target="_blank" rel="noopener">LaTeX 公式篇 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公式编辑工具 </tag>
            
            <tag> MathPix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OCR公式img识别为latex模型(im2latex)</title>
      <link href="/2023/06/15/ocr-gong-shi-tu-pian-shi-bie-wei-latex-mo-xing/"/>
      <url>/2023/06/15/ocr-gong-shi-tu-pian-shi-bie-wei-latex-mo-xing/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="模型调试"><a href="#模型调试" class="headerlink" title="模型调试"></a>模型调试</h2><p> 模型仓库：<code>https://github.com/luopeixiang/im2latex</code></p><ol><li><p>克隆下来以后，首先是相关依赖的安装：<br><code>pip install -r requirement.txt</code></p></li><li><p>下载数据集：</p><pre class="line-numbers language-shell"><code class="language-shell"> cd data wget http://lstm.seas.harvard.edu/latex/data/im2latex_validate_filter.lst wget http://lstm.seas.harvard.edu/latex/data/im2latex_train_filter.lst wget http://lstm.seas.harvard.edu/latex/data/im2latex_test_filter.lst wget http://lstm.seas.harvard.edu/latex/data/formula_images_processed.tar.gz wget http://lstm.seas.harvard.edu/latex/data/im2latex_formulas.norm.lst tar -zxvf formula_images_processed.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 下载数据集时发现，使用<code>wget</code>下载数据集时无法解压，包错信息为：</p><pre class="line-numbers language-shell"><code class="language-shell">  gzip: stdin: not in gzip format  tar: Child returned status 1  tar: Error exit delayed from previous errors <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 原因是下载下来压缩包的方式是损坏的，官网上也无法下载源数据了。于是在<code>https://im2markup.yuntiandeng.com/data/</code>上找到了备份的数据集，在<code>windows</code>系统上的<code>Windows PowerShell</code>上使用：<br> <code>tar -zcvf 压缩文件名  .tar.gz 被压缩文件名</code>解压<br> 注：Windows PowerShell是Windows上的Linux环境。</p></li><li><p>处理数据集<br>运行<code>python preprocess.py</code>将原始数据集构建为模型更好处理的<code>pkl</code>格式，<code>pkl</code>可以将python项目过程中用到的一些暂时变量、或者需要提取、暂存的字符串、列表、字典等数据保存起来。<a href="https://blog.csdn.net/Dontla/article/details/103381523" target="_blank" rel="noopener">python pkl是什么类型的文件？</a></p></li><li><p>构建词向量<br>运行<code>python build_vocab.py</code>构建词向量，这是一个NLP模型，需要构建词向量。</p></li><li><p>训练模型</p><pre class="line-numbers language-python"><code class="language-python">  python train<span class="token punctuation">.</span>py \       <span class="token operator">-</span><span class="token operator">-</span>data_path<span class="token operator">=</span><span class="token punctuation">[</span>data dir<span class="token punctuation">]</span> \       <span class="token operator">-</span><span class="token operator">-</span>save_dir<span class="token operator">=</span><span class="token punctuation">[</span>the dir <span class="token keyword">for</span> saving ckpts<span class="token punctuation">]</span> \       <span class="token operator">-</span><span class="token operator">-</span>dropout<span class="token operator">=</span><span class="token number">0.2</span> <span class="token operator">-</span><span class="token operator">-</span>add_position_features \       <span class="token operator">-</span><span class="token operator">-</span>epoches<span class="token operator">=</span><span class="token number">25</span> <span class="token operator">-</span><span class="token operator">-</span>max_len<span class="token operator">=</span><span class="token number">150</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>验证模型</p><pre class="line-numbers language-python"><code class="language-python"> python evaluate<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>split<span class="token operator">=</span>test \      <span class="token operator">-</span><span class="token operator">-</span>model_path<span class="token operator">=</span><span class="token punctuation">[</span>the path to model<span class="token punctuation">]</span> \      <span class="token operator">-</span><span class="token operator">-</span>data_path<span class="token operator">=</span><span class="token punctuation">[</span>data dir<span class="token punctuation">]</span> \      <span class="token operator">-</span><span class="token operator">-</span>batch_size<span class="token operator">=</span><span class="token number">32</span> \      <span class="token operator">-</span><span class="token operator">-</span>ref_path<span class="token operator">=</span><span class="token punctuation">[</span>the file to store reference<span class="token punctuation">]</span> \      <span class="token operator">-</span><span class="token operator">-</span>result_path<span class="token operator">=</span><span class="token punctuation">[</span>the file to store decoding result<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>运行结果</p><pre class="line-numbers language-cmd"><code class="language-cmd"> Loaded 8089 formulas from results\reference.txt beam search result: {'BLEU-4': 56.99906131826565, 'EM': 4.2156014340python VisitApi.py --split=test --model_path=ckpts\ckpt-16-0.3896.pt --data_path=daLoad vocab including 394 words!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> 调整过程中遇到的问题是pytorch报错:<br> <code>BrokenPipeError: [Errno 32] Broken pipe</code><br> 原因是：<code>Windows</code>使用<code>DataLoader</code>时设置<code>num_workers</code>的问题，将<code>num_workers</code>设置为0可解决。</p><h2 id="CUDA-out-of-memory"><a href="#CUDA-out-of-memory" class="headerlink" title="CUDA out of memory"></a>CUDA out of memory</h2><p><a href="https://blog.csdn.net/frigidwinter/article/details/130033162" target="_blank" rel="noopener">(88条消息) 【已解决】探究CUDA out of memory背后原因，如何释放GPU显存？_cuda清理指定gpu内存_Mr.Winter`的博客-CSDN博客</a></p></li><li><p>GPU显存占用率和存入的数据尺寸成正相关，越大的数据占用显存越多</p></li><li><p>只要使用了GPU，就至少会占x xx M的显存，且这部分显存无法被释放</p></li><li><p>当一块内存不再被变量所引用时，这块内存就由激活内存转为失活内存，但它仍然存在于这个数据队列中</p></li><li><p>当数据队列达到某个阈值时，CUDA会触发垃圾回收机制，清理失活内存运行torch.cuda.empty_cache()可以手动清理失活内存</p><h2 id="pytorch版本不对导致出现问题"><a href="#pytorch版本不对导致出现问题" class="headerlink" title="pytorch版本不对导致出现问题"></a>pytorch版本不对导致出现问题</h2><p><a href="https://blog.csdn.net/zhongruizhe/article/details/121059558" target="_blank" rel="noopener">(88条消息) gather_out_cuda(): Expected dtype int64 for index_zhongruizhe的博客-CSDN博客</a><br><a href="https://zhuanlan.zhihu.com/p/114669778" target="_blank" rel="noopener">十分钟读懂Beam Search 1：基础 - 知乎 (zhihu.com)</a><br>解决方法：<br>借鉴<a href="https://blog.csdn.net/zhongruizhe/article/details/121059558" target="_blank" rel="noopener">gather_out_cuda(): Expected dtype int64 for index</a>，给出的方法，将<code>model\beam_search.py</code>文件中219行的</p><pre class="line-numbers language-python"><code class="language-python">backpointer  <span class="token operator">=</span>  restricted_beam_indices  <span class="token operator">/</span>  self<span class="token punctuation">.</span>per_node_beam_size<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为：</p><pre class="line-numbers language-python"><code class="language-python">backpointer  <span class="token operator">=</span>  restricted_beam_indices  <span class="token operator">//</span>  self<span class="token punctuation">.</span>per_node_beam_size<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可解决由于pytorch版本不符导致的<code>gather_out_cuda(): Expected dtype int64 for index</code>问题</p></li></ol><h2 id="图片加载，并提供访问接口"><a href="#图片加载，并提供访问接口" class="headerlink" title="图片加载，并提供访问接口"></a>图片加载，并提供访问接口</h2><p>Image.open<br><a href="https://blog.csdn.net/icamera0/article/details/50666815" target="_blank" rel="noopener">(88条消息) Python图像处理库PIL的Image模块介绍（二）_image.open_icamera0的博客-CSDN博客</a><br><a href="https://blog.csdn.net/qq_41166909/article/details/126528775" target="_blank" rel="noopener">(88条消息) PIL.image保存图片_pil.image.image_andrew P的博客-CSDN博客</a></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#打开图片</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string">"imgs/img1.png"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>img<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/weixin_42213622/article/details/109110140" target="_blank" rel="noopener">(88条消息) 图像读取的Image.open()和cv2.imread()的区别_Carol_小菜鸟的博客-CSDN博客</a></p><h2 id="OCR公式识别材料"><a href="#OCR公式识别材料" class="headerlink" title="OCR公式识别材料"></a>OCR公式识别材料</h2><p><a href="https://zhuanlan.zhihu.com/p/183182208" target="_blank" rel="noopener">基于Seq2Seq的公式识别引擎 - 知乎 (zhihu.com)</a><br><a href="https://github.com/luopeixiang/im2latex">https://github.com/luopeixiang/im2latex</a><br><a href="https://www.runoob.com/note/28603" target="_blank" rel="noopener">Linux 下 *.tar.gz 文件解压缩命令 (runoob.com)</a><br><a href="https://im2markup.yuntiandeng.com/data/" target="_blank" rel="noopener">https://im2markup.yuntiandeng.com/data/</a></p><h2 id="python符号"><a href="#python符号" class="headerlink" title="python符号"></a>python符号</h2><p><a href="https://blog.csdn.net/weixin_38981172/article/details/90176525" target="_blank" rel="noopener">(88条消息) python中的各种符号（欢迎补充）_python符号大全_杉木人的博客-CSDN博客</a><br><a href="https://juejin.cn/post/6995855590769557540" target="_blank" rel="noopener">Pytorch 入门与提高(3)—tensor 的 reshape 操作 - 掘金 (juejin.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公式编辑工具 </tag>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDF及图片公式转可编辑形式的方法调研</title>
      <link href="/2023/06/11/pdf-ji-tu-pian-gong-shi-zhuan-ke-bian-ji-xing-shi-de-fang-fa-diao-yan/"/>
      <url>/2023/06/11/pdf-ji-tu-pian-gong-shi-zhuan-ke-bian-ji-xing-shi-de-fang-fa-diao-yan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>前几天硕士毕业论文答辩正式结束，闲下来的时间帮师兄收集横向项目上的论文材料，由于需要形成word文档，如何将PDF或者扫描版文档中的公式变成一个个可编辑的公式成为了一个头疼的问题。翻阅了一众工具也没有找到合适的，最后只能自己手敲公式完成了，软件技术高度发达的今天、科研人员是较早接触新技术的一批人，为什么没有产生一个这样的简单好用的工具呢？思考了一番觉得问题出现在以下几点：</p><ol><li>PDF转word、word转PDF等等文档转换工具，都是从文档这个相对于公式而言更大的层面来做产品需求分析的，比如考虑文档转换过程中内容的准确性、格式的变化和错位、图片的失真等问题。而可能忽略了公式格式这种更细致化的需求。</li><li>相对于word转PDF时公式的转换，PDF转word时将公式变成可编辑的形式无疑困难的多，这是因为PDF一般无法事先知道使用者需要转化哪种可编辑公式形式，是word自带公式、mathtype还是latex。</li><li>其次从实现角度老说也具有困难，这是因为文档转换工具是一种独立的工具，不涉及到和其他工具的交互，也就无法将转化成的文本信息编辑成相关公式工具格式的内容。</li></ol><p>由此，我突然意识到这是个具有小小成就感的工作，是否能够做这样一款RPA形式的流程自动化科研论文公式转换工具。解决科研工作中的问题。</p><p>在将想法和室友探讨之后，准备花一个月的时间来分析技术可行性和难以程度，成技术上讲文字识别和流程自动化技术都已成熟、没有很大新研。问题是如何选技术路线，使得程序使用更便捷、代码量更小、程序运行更多元，这仍需要调研。</p><h2 id="资料调研"><a href="#资料调研" class="headerlink" title="资料调研"></a>资料调研</h2><h3 id="latexify使用Python生成LaTeX-数学公式"><a href="#latexify使用Python生成LaTeX-数学公式" class="headerlink" title="latexify使用Python生成LaTeX 数学公式"></a><a href="https://link.zhihu.com/?target=https%3A//github.com/google/latexify_py" target="_blank" rel="noopener">latexify</a>使用Python生成LaTeX 数学公式</h3><p><a href="https://zhuanlan.zhihu.com/p/232329600" target="_blank" rel="noopener">使用Python生成LaTeX 数学公式 - 知乎 (zhihu.com)</a></p><h2 id="竞品分析"><a href="#竞品分析" class="headerlink" title="竞品分析"></a>竞品分析</h2><h3 id="主要是对图片的OCR识别"><a href="#主要是对图片的OCR识别" class="headerlink" title="主要是对图片的OCR识别"></a>主要是对图片的OCR识别</h3><p><a href="https://www.simpletex.cn/" target="_blank" rel="noopener">SimpleTex主页——致力于提供先进的公式识别/文档识别解决方案</a><br><a href="https://www.simpletex.cn/" target="_blank" rel="noopener">SimpleTex主页——致力于提供先进的公式识别/文档识别解决方案</a><br><a href="https://zhuanlan.zhihu.com/p/527170537" target="_blank" rel="noopener">免费公式识别（OCR）方法（支持latex和word等多种） - 知乎 (zhihu.com)</a></p><p><a href="https://www.jiqizhixin.com/articles/2021-08-04-4" target="_blank" rel="noopener">https://www.jiqizhixin.com/articles/2021-08-04-4</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/jlcxxzj/QC-Formula">https://github.com/jlcxxzj/QC-Formula</a></p><p><a href="https://github.com/jlcxxzj/LaTeX-OCR">https://github.com/jlcxxzj/LaTeX-OCR</a></p><p><a href="https://devpress.csdn.net/gitcode/6406b019986c660f3cf9138c.html" target="_blank" rel="noopener">https://devpress.csdn.net/gitcode/6406b019986c660f3cf9138c.html</a></p><h2 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h2><p>首先需要明白的一点是，该项目没有技术上不可逾越的障碍，图片公式识别、pdf公式的单独识别都已经很成熟了，但是是否就可以认为没有</p><ol><li>是对图片的识别还是文档的识别</li><li>是流程化插入还是（非本地构建好）打包处理好发给使用者</li><li>是语言模型理解需求还是制定好处理规范（机械、固定）</li><li>&lt;![endif]–&gt;</li></ol><h2 id="方案执行"><a href="#方案执行" class="headerlink" title="方案执行"></a>方案执行</h2><p>两个大方向是：</p><p>模型的选择和训练从而为程序或者web的调用提供API接口；</p><p>另一个大的方向是使用electron或者QT等前端显示页面用于和使用者交互。当然，python可生成窗口用于调用，如果要使用流程自动化工具，还是使用python比较合适；</p><p>基于以上的大方向和框架，首先是调研和Demo的实现，调研的重心是一些PDF转换工具和公式转换工具MATHPIX的实现原理。然后是OCR识别公式模型的调研，在OCR识别上，首先就是对模型的研究，也就是img转latex。</p><p>我们产品的亮点在哪？那就是解决大批量的公式识别的端到端处理，从PDF到word可编辑格式的格式不再需要人工的拖拽、复制、粘贴到word中，这是因为在很多场景中，不是在实际使用格式，而是做项目调研、资料收集、材料整理、如果一个个的转换公式、一遍遍的复制黏贴属实机械和麻木了。</p><p>在Demo实现上，也是两个方向，一个是使用<code>python</code>和<code>electron</code>实现和用户的交互和一些流程化的工作，比如图片拖拽、复制内容、新建word、打开mathtype并在word中插入公式等操作。<a href="https://github.com/Creator-SN/MathFX">Creator-SN/MathFX: Mathpix Electron Client (github.com)</a><br><a href="https://github.com/SanLiWuXun/formular-auto-input-with-python-in-word">SanLiWuXun/formular-auto-input-with-python-in-word: 使用修改后的latexify实现输入python格式的公式后自动转换输入word (github.com)</a></p><p>另一个方向是模型的搭建，如图片识别为latex公式的实现。<br><a href="https://github.com/luopeixiang/im2latex">luopeixiang/im2latex: Pytorch implemention of Deep CNN Encoder + LSTM Decoder with Attention for Image to Latex (github.com)</a><br><a href="https://github.com/jlcxxzj/LaTeX-OCR">jlcxxzj/LaTeX-OCR: pix2tex: Using a ViT to convert images of equations into LaTeX code. (github.com)</a><br><a href="https://zhuanlan.zhihu.com/p/489302135" target="_blank" rel="noopener">公式LaTex识别工具 latex-Ocr 完美替代坑爹MathPix - 知乎 (zhihu.com)</a><br><a href="https://blog.csdn.net/ymzhu385/article/details/128757783" target="_blank" rel="noopener">(88条消息) 【超详细安装教程】LaTeX-OCR 图像识别latex公式（开源免费）_latex图片识别_小猪快跑爱摄影的博客-CSDN博客</a><br><a href="https://www.cnblogs.com/odesey/p/17130131.html" target="_blank" rel="noopener">pix2tex - LaTeX OCR 基于图像的公式识别 实践笔记 - cold_moon - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向科研开发 </tag>
            
            <tag> PDF工具开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDF处理工具</title>
      <link href="/2023/06/11/pdf-chu-li-gong-ju/"/>
      <url>/2023/06/11/pdf-chu-li-gong-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="pdf处理工具"><a href="#pdf处理工具" class="headerlink" title="pdf处理工具"></a>pdf处理工具</h2><p><a href="https://www.ilovepdf.com/zh-cn" target="_blank" rel="noopener">iLovePDF | 为PDF爱好者提供的PDF文件在线处理工具</a><br><a href="https://www.pdf2go.com/zh" target="_blank" rel="noopener">在线 PDF 转换器-编辑，旋转和压缩 PDF 文件 (pdf2go.com)</a></p><h2 id="1-监听键盘敲公式"><a href="#1-监听键盘敲公式" class="headerlink" title="1. 监听键盘敲公式"></a>1. 监听键盘敲公式</h2><p><a href="https://www.bilibili.com/video/BV1Qy4y117Gp/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">使用python自动生成并在word中插入公式_哔哩哔哩_bilibili</a><br><a href="https://github.com/SanLiWuXun/formular-auto-input-with-python-in-word">GitHub - SanLiWuXun/formular-auto-input-with-python-in-word: 使用修改后的latexify实现输入python格式的公式后自动转换输入word</a><br><a href="https://zhuanlan.zhihu.com/p/334639489" target="_blank" rel="noopener">win32com操作大全（含常见错误解决办法） - 知乎 (zhihu.com)</a><br><a href="https://www.jianshu.com/p/a741b063d6da" target="_blank" rel="noopener">自动化办公|Python 使用 win32com 模块报错踩坑分享 - 简书 (jianshu.com)</a></p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p><a href="https://blog.csdn.net/qq_27595745/article/details/128428610" target="_blank" rel="noopener">(88条消息) Python办公自动化之Word文档自动化：全网最全，看这一篇就够了_python word自动化_passionSnail的博客-CSDN博客</a><br><a href="https://blog.csdn.net/gltzlike/article/details/95758808" target="_blank" rel="noopener">https://blog.csdn.net/gltzlike/article/details/95758808</a><br><a href="https://blog.csdn.net/zhangpeterx/article/details/88663052" target="_blank" rel="noopener">(88条消息) 解决Python报错UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0x80 in position 658: illegal multibyte_zhangpeterx的博客-CSDN博客</a><br><code>pip install pypiwin32 -i https://pypi.tuna.tsinghua.edu.cn/simple/</code><br>** 有用，虽然说版本过低，但是不报错了<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/%E5%AE%89%E8%A3%85win32com%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98.PNG" alt><br><a href="https://stackoverflow.com/questions/58612306/how-to-fix-importerror-dll-load-failed-while-importing-win32api" target="_blank" rel="noopener">https://stackoverflow.com/questions/58612306/how-to-fix-importerror-dll-load-failed-while-importing-win32api</a><br><a href="https://www.ilovepdf.com/zh-cn" target="_blank" rel="noopener">iLovePDF | 为PDF爱好者提供的PDF文件在线处理工具</a><br><a href="https://zhuanlan.zhihu.com/p/270596333" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/270596333</a></p><h2 id="库的学习"><a href="#库的学习" class="headerlink" title="库的学习"></a>库的学习</h2><p>win32com 模块主要为 Python 提供调用 windows 底层组件对 word 、Excel、PPT 等进行操作的功能；<br>不过有其局限性，只能在 Windows 环境下使用，并且需要安装 office 相关软件才行（WPS也行）;<br><a href="https://cloud.tencent.com/developer/article/2049810?from=15425&areaSource=102001.3&traceId=DFNolY8xLs2k9Ym0kgSjb" target="_blank" rel="noopener">python自动化系列之使用win32com操作Excel-腾讯云开发者社区-腾讯云 (tencent.com)</a><br>win32gui是python在Windows编程的关键之一，它允许 Python 开发者 控制 和操作Windows操作系统的各种资源。 通过 <strong>win32gui模块</strong> ，开发者可以非常方便地创建并操作Windows应用程序，并实现多种复杂的功能。<br><a href="https://blog.csdn.net/longwsdy/article/details/111152324" target="_blank" rel="noopener">(88条消息) win32gui API总结 常用方法 键盘输入 窗口句柄 发送消息_win32gui 发送按键_大灥山水的博客-CSDN博客</a><br><a href="https://www.cnblogs.com/lingdurebing/p/11602461.html" target="_blank" rel="noopener">python pywin32学习笔记 - 零度热冰 - 博客园 (cnblogs.com)</a><br><a href="https://www.bilibili.com/video/BV1U5411t7tg/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">【学习分享】python使用win32api_哔哩哔哩_bilibili</a><br><a href="https://zhuanlan.zhihu.com/p/264135461" target="_blank" rel="noopener">python:win32 窗口和鼠标操作 - 知乎 (zhihu.com)</a><br><a href="https://www.jianshu.com/p/b3255cf50693" target="_blank" rel="noopener">python win32gui 自动化操作 - 简书 (jianshu.com)</a><br><a href="https://zhuanlan.zhihu.com/p/355878952" target="_blank" rel="noopener">Windows下的程序及热键监视神器——Spy++ - 知乎 (zhihu.com)</a><br>[python在启动PC端窗口时，报无效句柄] - 木棉花的漂泊 - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/mumianhuasayyes/p/12123385.html" target="_blank" rel="noopener">https://www.cnblogs.com/mumianhuasayyes/p/12123385.html</a>)<br><a href="https://learn.microsoft.com/zh-CN/windows/win32/api/winuser/nf-winuser-getforegroundwindow" target="_blank" rel="noopener">GetForegroundWindow 函数 (winuser.h) - Win32 apps | Microsoft Learn</a><br><a href="https://www.jianshu.com/p/bd8eb9efb107" target="_blank" rel="noopener">python获取当前最上层活动窗口的路径 - 简书 (jianshu.com)</a><br>窗口句柄就是一个窗口的编号<br><a href="https://blog.csdn.net/gymaisyl/article/details/85109627" target="_blank" rel="noopener">(88条消息) python中 r’’, b’’, u’’, f’’ 的含义_python u_gymaisyl的博客-CSDN博客</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>1.HTML转PDF<br><a href="https://cloud.tencent.com/developer/article/2188183?from=article.detail.1663591&areaSource=106000.15&traceId=NWIhsf2Zg3rwe3CFYDHef" target="_blank" rel="noopener">卧槽，一行命令实现Html转PDF，强烈推荐！-腾讯云开发者社区-腾讯云 (tencent.com)</a><br><a href="https://github.com/jlcxxzj/wkhtmltopdf">https://github.com/jlcxxzj/wkhtmltopdf</a></p><ol start="2"><li>开源工具<br><a href="https://zh-cn.widsmob.com/resource/open-source-pdf-editor.html" target="_blank" rel="noopener">对适用于 PC 和 Mac 的前 5 名开源 PDF 编辑器的公正评论 (widsmob.com)</a><br><a href="https://zh-cn.widsmob.com/resource/open-source-pdf-editor.html" target="_blank" rel="noopener">https://zh-cn.widsmob.com/resource/open-source-pdf-editor.html</a><br><a href="https://github.com/jlcxxzj/pdfsam">https://github.com/jlcxxzj/pdfsam</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向科研开发 </tag>
            
            <tag> PDF工具开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涡轮泵基础知识！</title>
      <link href="/2023/06/07/wo-lun-beng-ji-chu-zhi-shi/"/>
      <url>/2023/06/07/wo-lun-beng-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="家用离心泵"><a href="#家用离心泵" class="headerlink" title="家用离心泵"></a>家用离心泵</h2><p>一、离心泵的基本构造离心泵的种类有很多，图1—1所示为单级单吸式<a href="http://www.beng-fa.com/LiXinBeng.html" target="_blank" rel="noopener">离心泵</a>的基本构造，主要包括蜗壳形的泵壳、泵轴、叶轮、吸水管、压水管、底阀、控制阀门、灌水漏斗和泵座。<br><a href="http://www.beng-fa.com/LiXinBeng/jishuwenz.html" target="_blank" rel="noopener">离心泵的构造及工作原理 (beng-fa.com)</a><br> <img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/%E7%A6%BB%E5%BF%83%E6%B3%B5.jpg" alt="离心泵"><br>图1—1 单级单吸式<a href="http://www.beng-fa.com/LiXinBeng.html" target="_blank" rel="noopener">离心泵构造</a><br>1一泵壳；2一泵轴；3叶轮；4一吸水管；5一压水管；6一底阎；7控制阀门；8灌水漏斗；9泵座<br>二、<a href="http://www.beng-fa.com/LiXinBeng.html" target="_blank" rel="noopener">离心泵的工作原理</a>:<br>离心泵是利用叶轮旋转而使水产生的离心力来工作的。<a href="http://www.beng-fa.com/LiXinBeng.html" target="_blank" rel="noopener">离心泵</a>在启动前，必须使泵壳和吸水管内充满水，然后启动电机，使泵轴带动叶轮和水做高速旋转运动，水在离心力的作用下，被甩向叶轮外缘，经蜗形泵壳的流道流入水泵的压水管路。水泵叶轮中心处，由于水在离心力的作用下被甩出后形成真空，吸水池中的水便在大气压力的作用下被压进泵壳内，叶轮通过不停地转动，使得水在叶轮的作用下不断流入与流出，达到了输送水的目的。<br>三、<a href="http://www.beng-fa.com/LiXinBeng.html" target="_blank" rel="noopener">离心泵的主要零件</a>:<br>离心泵是由许多零件组成的，根据工作时各部件所处的工作状态，大致可以分成三大类型：转动部件、固定部件和交接部件。<br>1．叶轮<br>叶轮是泵的核心组成部分，它可使水获得动能而产生流动。叶轮由叶片、盖板和轮毂组成，见图l-2。选择叶轮材料时，除了要考虑离心力作用下的机械强度以外，还要考虑材料的耐磨和耐腐蚀性能。目前多数叶轮采用铸铁、铸钢和青铜制成。<br>叶轮一般可分为单吸式叶轮与双吸式叶轮两种。单吸式叶轮如图l-2所示，它是单边吸水，叶轮的前盖板与后盖板呈不对称状。双吸式叶轮如图1—3所示两边吸水，叶轮盖板呈对称状，一般大流量离心泵多数采用双吸式叶轮。</p><h2 id="qt21航天涡轮泵turbopump"><a href="#qt21航天涡轮泵turbopump" class="headerlink" title="qt21航天涡轮泵turbopump"></a>qt21航天涡轮泵turbopump</h2><p><a href="https://www.youtube.com/watch?v=3isXaIQ3Lkk" target="_blank" rel="noopener">Cryogenic Engines | The complete physics - YouTube</a>泵是输送液体或使液体增压的机械。<br>叶轮(Impeller)是一种用来增加流体压力和流量的旋转装置。与此相反的装置是涡轮(Turbine)，涡轮被用来从穿过它的流体中汲取动能。<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/%E6%B6%A1%E8%BD%AE%E5%92%8C%E5%8F%B6%E8%BD%AE.PNG" alt="涡轮和叶轮"></p>]]></content>
      
      
      <categories>
          
          <category> 机械 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机械 </tag>
            
            <tag> 涡轮泵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不借助主题渲染HTML页面</title>
      <link href="/2023/06/03/1-xiang-mu/bo-ke-xiang-mu/bu-jie-zhu-zhu-ti-xuan-ran-html-ye-mian/"/>
      <url>/2023/06/03/1-xiang-mu/bo-ke-xiang-mu/bu-jie-zhu-zhu-ti-xuan-ran-html-ye-mian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="项目文件和渲染效果"><a href="#项目文件和渲染效果" class="headerlink" title="项目文件和渲染效果"></a>项目文件和渲染效果</h2><p>项目地址：<a href="https://github.com/zhheo/HeoWeb">zhheo/HeoWeb: 纯静态多业务展示的个人主页主题 (github.com)</a></p><p><img src="/images/html%E9%A1%B5%E9%9D%A2%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84.PNG" alt="html页面文件路径"></p><p><img src="/images/html%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.PNG" alt="html页面显示效果"></p><p>那要实现这个功能，需要借助<code>live-server</code>配置</p><pre class="line-numbers language-txt"><code class="language-txt">vs code中如何运行html静态文件快捷键 "win + R” 然后输入cmd在cmd中粘贴 npm install -g live-server 安装完成后在vs code右击html文件 打开终端 在终端中输入live-server 执行成功后 就可以在浏览运行文件了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最新博客推荐"><a href="#最新博客推荐" class="headerlink" title="最新博客推荐"></a>最新博客推荐</h2><p>一个使用QT开发的PDF阅读器。</p><p><a href="https://github.com/ahrm/sioyek">ahrm/sioyek: Sioyek is a PDF viewer with a focus on textbooks and research papers (github.com)</a></p><p><a href="https://www.zhihu.com/collection/707552682" target="_blank" rel="noopener">(13 封私信 / 80 条消息) 我的收藏 - 收藏夹 - 知乎 (zhihu.com)</a></p><p><a href="https://jiangsihan.cn/archives/史上最全技术文档" target="_blank" rel="noopener">迄今为止最全的技术文档汇总，编程语言，操作系统，数据结构，设计模式等，赶紧收藏起来！ (jiangsihan.cn)</a></p><p><a href="https://blog.zhheo.com/about/" target="_blank" rel="noopener">关于本站 | 张洪Heo (zhheo.com)</a></p><p><a href="https://meuicat.com/link/" target="_blank" rel="noopener">友情链接 | 爱吃肉的猫 (meuicat.com)</a></p><p><a href="https://shape.kloudy.cn/blog/articles/graph_theory_notes" target="_blank" rel="noopener">图论笔记 - Kloudy Shape</a></p><p><a href="https://xyzbz.cn/" target="_blank" rel="noopener">网友小宋 - 做一个快乐的人，迎接未来的每一天！ (xyzbz.cn)</a></p><p>图像比较与分析工具(ICAT) </p><p>博客访问人数的地图显示</p><p><a href="https://www.revolvermaps.com/" target="_blank" rel="noopener">Welcome to RevolverMaps | RevolverMaps - Free 3D Visitor Maps</a></p><p>配置网站</p><p><a href="https://blog.guole.fun/posts/12857/" target="_blank" rel="noopener">记录一次腾讯云网站 CDN 加速配置异常，网站无法访问的问题 | Guo Le’s Blog</a></p><p><a href="https://blog.guole.fun/page/3/#content-inner" target="_blank" rel="noopener">Guo Le’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> 网页 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> html </tag>
            
            <tag> 网页 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开发一个Electron项目|学习几个好玩的Electron项目</title>
      <link href="/2023/05/30/tu-pian/kai-fa-di-yi-ge-electron-ying-yong/"/>
      <url>/2023/05/30/tu-pian/kai-fa-di-yi-ge-electron-ying-yong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="项目1说明"><a href="#项目1说明" class="headerlink" title="项目1说明"></a>项目1说明</h2><p>提前说明，本项目也是学习项目，非自己开发，项目地址为：<a href="https://github.com/wanglin2/mind-map/tree/electron">wanglin2/mind-map at electron (github.com)</a>，项目中因为作者开发了开源的<code>Web</code>思维导图，由此造成项目不能离线使用，虽然借助<code>showSaveFilePicker</code>等<code>api</code>可以直接操作电脑本地文件，但是还是缺乏一个可以随时使用的本地客户端，虽然<code>QT</code>、<code>.NET</code>都可以开发桌面客户端，<code>Android</code>可以开发移动端的桌面程序，但是要说方便快捷出可上线产品，<code>electron</code>无疑是个不错的选择，当然由于其将谷歌浏览器和本地模块都塞到项目中，导致项目文件过于庞大，对此介意的可以考虑使用<code>tauri</code>来开发。</p><p>项目作者的需求是在原有的在线思维导图项目的基础上，能够在离线的情况下，能够打开和新建本地文件，查看最近编辑过的文件列表，编辑思维导图的页面还是使用<code>web</code>版的页面，于是在<code>electron</code>上只需要新建一个主页即可。</p><p>主页：</p><p><img src="https://pic4.zhimg.com/v2-564f70b64c573f263f038f1efd51a277_r.jpg" alt="img"></p><p>编辑页：</p><p><img src="https://pic4.zhimg.com/v2-edf7d64e12368a656d932e359c97bb6f_b.jpg" alt="img"></p><h2 id="项目2说明"><a href="#项目2说明" class="headerlink" title="项目2说明"></a>项目2说明</h2><p>一个界面简洁清新的桌面音乐平台项目，<a href="https://github.com/GeekLee2012/Less-Player-Desktop">GeekLee2012/Less-Player-Desktop: Less Player, 一款基于Electron + Vue3开发的播放器 ! Less is More ~ All for One, One for All ! (github.com)</a>，B站上的地址：<a href="https://www.bilibili.com/video/BV1Vh4y1J7MV/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">【程序员的执着 - 造轮子】坚持更新了一年的开源播放器，究竟做成啥样啦_哔哩哔哩_bilibili</a></p><p>项目依赖安装：<code>npm install</code>，项目运行：<code>npm run dev</code>。具体情况可在<code>package.json</code>查看命令行信息和传参内容。</p><h2 id="开始从头做一个electron项目"><a href="#开始从头做一个electron项目" class="headerlink" title="开始从头做一个electron项目"></a>开始从头做一个electron项目</h2><p>知乎：<a href="https://www.zhihu.com/collection/707552682" target="_blank" rel="noopener">(12 封私信 / 80 条消息) 我的收藏 - 收藏夹 - 知乎 (zhihu.com)</a></p><ol><li><p>新建一个项目<br> 使用<code>git</code>在<code>D:\Desktop\mind-map-all</code>路径下新建一个文件夹<code>my-mind-app</code>，并通过<code>npm init</code>来初始化一个项目，初始化过程中，需要选择一些信息，如版本号、描述信息、作者、仓库信息等，便于了解项目的信息和后续打包等，初始化后会在项目下生成一个名为<code>package.json</code>的文件，这里是项目的入口，里面需要配置的<code>main</code>则是程序的入口。</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir my-mind-app && cd my-mind-appnpm init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/images/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AAnpm%E9%A1%B9%E7%9B%AE.PNG" alt="初始化一个npm项目"></p><p><code>package.json</code>配置信息如下图，可以发现程序的默认入口为<code>index.js</code>文件。</p><p><img src="/images/package.json%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF.PNG" alt="package.json的配置信息"></p><p>然后安装项目的依赖<code>electron</code>，使用<code>npm install --save-dev electron</code>安装，并将依赖写入到<code>package.json</code>文件中。</p><pre class="line-numbers language-txt"><code class="language-txt">–save 会把依赖包名称添加到 package.json 文件 dependencies 下，–save-dev 则添加到 package.json 文件 devDependencies下 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/aaqingying/article/details/101371352" target="_blank" rel="noopener">(86条消息) npm install 安装依赖包 –save、–save-dev、-S、-D的区别_npm install 存入依赖包_清颖~的博客-CSDN博客</a></p><p>安装后，项目文件的变化如下所示，可以发现新增了<code>node_modules</code>文件夹存放项目下载的各种依赖，目前为止是下载了<code>electron</code>，而在配置文件<code>package.json</code>上，新下载的<code>electron</code>依赖通过<code>–save-dev</code> 会添加到 <code>package.json</code> 文件<code>devDependencies</code>下 ,并且新增<code>package-lock.json</code>文件用于项目依赖的版本控制。</p></li></ol><p><img src="/images/%E5%AE%89%E8%A3%85electron%E4%BE%9D%E8%B5%96%E5%90%8E%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96.PNG" alt="安装electron依赖后项目文件变化"></p><p>  <code>package.json</code>下的<code>&quot;scripts&quot;:</code>，<code>scripts</code>定义了一组可以运行的 node 脚本<a href="https://juejin.cn/post/7216143702124199997" target="_blank" rel="noopener">配置package.json中scripts命令脚本 - 掘金 (juejin.cn)</a>，用于各种执行语句，要运行脚本命令启动<code>electron</code>，需要在<code>scripts</code>中新增：</p><pre class="line-numbers language-json"><code class="language-json">  <span class="token punctuation">{</span>    <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"electron ."</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>启动项目</p><p>完成了上述之后，需要新建一个入口的<code>main.js</code>文件，并将<code>&quot;main:&quot;</code>修改为<code>main.js</code>，然后就可以通过<code>npm start</code>来启动项目了，<code>npm start</code> 是对<code>npm run start</code>的简写。由于此时<code>main.js</code>还是一个空文件，所以不会有任何的显示。</p></li><li><p>新建窗口</p><p>在把页面内容显示在窗口前，需要新建窗口，然后把页面内容加载进应用窗口中。 要新建一个窗口，需要 两个<code>Electron</code>模块：</p><ul><li><a href="https://www.electronjs.org/zh/docs/latest/api/app" target="_blank" rel="noopener"><code>app</code></a> 模块，它控制应用程序的事件生命周期。</li><li><a href="https://www.electronjs.org/zh/docs/latest/api/browser-window" target="_blank" rel="noopener"><code>BrowserWindow</code></a> 模块，它创建和管理应用程序 窗口。</li></ul><p>因为项目启动后主进程运行着 <code>Node.js</code>，在进程的<code>main.js</code>文件头部将两个模块导入，作为 <a href="https://nodejs.org/docs/latest/api/modules.html#modules_modules_commonjs_modules" target="_blank" rel="noopener">CommonJS</a> 模块，即通用模块：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'electron'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入需要的模块后，添加一个<code>createWindow()</code>方法，将页面如<code>index.html</code>加载进一个新建窗口<code>BrowserWindow</code>实例<code>win</code>中，这是个方法需要被调用才能激活运行。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> createWindow <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span>    height<span class="token punctuation">:</span> <span class="token number">600</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  win<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着，通过在<code>app</code>模块调用<code>createWindow()</code>函数（方法）来打开窗口。在 <code>Electron</code> 中，只有在 <code>app</code> 模块的 <a href="https://www.electronjs.org/zh/docs/latest/api/app#event-ready" target="_blank" rel="noopener"><code>ready</code></a> 事件被激发后才能创建浏览器窗口。 可以通过使用 <a href="https://www.electronjs.org/zh/docs/latest/api/app#appwhenready" target="_blank" rel="noopener"><code>app.whenReady()</code></a> API来监听此事件。 在<code>whenReady()</code>成功后调用<code>createWindow()</code>。也就是说，通过<code>app</code> 模块监听事件是否准备好来调用<code>createWindow()</code>并由此新建窗口。</p><pre class="line-numbers language-js"><code class="language-js">app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong>：此时，<code>electron</code>应用程序可以打开并显示<code>index.html</code>页面的窗口，<code>index.html</code>页面内容如下！</p></li><li><p>添加页面</p><p>在项目的更目录下新建<code>index.html</code>文件，即显示在窗口的内容，可以发现是一行欢迎内容。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Security-Policy<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>default-src <span class="token punctuation">'</span>self<span class="token punctuation">'</span>; script-src <span class="token punctuation">'</span>self<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>你好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>你好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    我们正在使用 Node.js <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>node-version<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>,    Chromium <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>chrome-version<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>,    和 Electron <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>electron-version<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图所示，是上述的页面在窗口的显示效果。<br><img src="/images/electron%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BA.PNG" alt="electron页面显示"></p></li><li><p>管理窗口的生命周期</p><p><a href="https://www.electronjs.org/zh/docs/latest/tutorial/quick-start#回顾" target="_blank" rel="noopener">快速入门 | Electron (electronjs.org)</a></p><p><a href="https://www.zhihu.com/collection/707552682" target="_blank" rel="noopener">(12 封私信 / 80 条消息) 我的收藏 - 收藏夹 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/629338445" target="_blank" rel="noopener">我的第一个Electron应用 - 知乎 (zhihu.com)</a></p></li></ol><h2 id="electron前端项目的布局"><a href="#electron前端项目的布局" class="headerlink" title="electron前端项目的布局"></a>electron前端项目的布局</h2><p>[electron项目结构介绍 - 家乐先生 - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/lushichao/p/12731832.html#:~:text=%23项目结构" target="_blank" rel="noopener">https://www.cnblogs.com/lushichao/p/12731832.html#:~:text=%23项目结构</a> my- project ├─.electron - vue（webpack配置文件） │ └─,└─ dev-runner.js（开发环境启动入口） │ └─ webpack.main.config.js（主进程配置文件） │ └─ webpack.renderer.config.js（渲染进程配置文件）)</p>]]></content>
      
      
      <categories>
          
          <category> Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 入门源码 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 脑图项目mind-map </tag>
            
            <tag> 音乐项目Less-Player-Desktop </tag>
            
            <tag> Electron项目入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在picgo项目上的环境配置问题</title>
      <link href="/2023/05/29/tu-pian/zai-picgo-xiang-mu-shang-de-huan-jing-pei-zhi-wen-ti/"/>
      <url>/2023/05/29/tu-pian/zai-picgo-xiang-mu-shang-de-huan-jing-pei-zhi-wen-ti/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>首先从<a href="https://github.com/Molunerfinn/PicGo">项目地址</a>的开发环境配置要求可以看出，该项目也是属于一个前端项目，在开发声明中的要求为：</p><pre class="line-numbers language-txt"><code class="language-txt">目前仅针对 Mac、Windows。Linux 平台并未测试。如果你想要学习、开发、修改或自行构建 PicGo，可以依照下面的指示：如果想学习 Electron-vue 的开发，可以查看我写的系列教程——Electron-vue 开发实战你需要有 Node、Git 环境，了解 npm 的相关知识。git clone https://github.com/Molunerfinn/PicGo.git 并进入项目。yarn 下载依赖。注意如果你没有 yarn，请去 官网 下载安装后再使用。 用 npm install 将导致未知错误！Mac 需要有 Xcode 环境，Windows 需要有 VS 环境。如果需要贡献代码，可以参考贡献指南。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置vue3"><a href="#配置vue3" class="headerlink" title="配置vue3"></a>配置vue3</h3><p>在电脑环境中并没有配置<code>vue</code>于是先配置<code>vue</code>，<a href="https://blog.csdn.net/weixin_43796325/article/details/123407232" target="_blank" rel="noopener">(86条消息) Vue 3 安装及环境配置_vue3环境搭建_CHINOSAMA的博客-CSDN博客</a>，配置时注意是配置成全局变量：</p><pre class="line-numbers language-bash"><code class="language-bash">使用npm或者cnpm安装都可以1. 安装 vue.js<span class="token function">npm</span> <span class="token function">install</span> vue -g2. 验证是否安装成功<span class="token function">npm</span> info vue<span class="token function">npm</span> list vue3. 安装webpack 模块<span class="token function">npm</span> <span class="token function">install</span> webpack -g4. 安装 webpack-cli<span class="token function">npm</span> <span class="token function">install</span> --global webpack-cli5. 安装vue-cli 3.x<span class="token function">npm</span> <span class="token function">install</span> @vue/cli –g6. 创建 vue 3 项目：以管理员身份打开 cmd 控制台，进入想要创建项目的目录，开始创建项目vue create <span class="token punctuation">[</span>项目名称<span class="token punctuation">]</span>7. 运行项目<span class="token function">npm</span> run serve<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装过程中可能出现的问题：<a href="https://blog.csdn.net/weixin_43796325/article/details/123408626" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43796325/article/details/123408626</a></p><h3 id="配置yarn"><a href="#配置yarn" class="headerlink" title="配置yarn"></a>配置yarn</h3><p>在项目中使用yarn来安装所需要的依赖，安装有使用<code>.msi</code>文件安装和<code>npm install -g yarn</code>两种方式来安装，项目中推荐说使用<code>.msi</code>方式安装，但是官网此选项已经无法下载，<a href="https://cloud.tencent.com/developer/section/1477715" target="_blank" rel="noopener">2. Installation（安装） (Getting Started) - Yarn 中文开发手册 - 开发者手册 - 腾讯云开发者社区-腾讯云 (tencent.com)</a>最后在腾讯开发者社区找到了安装的软件，第二种则是目前官网推荐的安装方式。常用命令：[(86条消息) Linux系统和Windows系统Yarn 安装与使用教程_linux 安装yarn_森明帮大于黑虎帮的博客-CSDN博客](<a href="https://blog.csdn.net/qq_44918090/article/details/124135868#:~:text=四、window" target="_blank" rel="noopener">https://blog.csdn.net/qq_44918090/article/details/124135868#:~:text=四、window</a> 系统安装 Yarn 1 1.下载安装包安装,2 2.通过Chocolatey安装 3 3.通过 Scoop 安装)</p><p>在安装完毕以后以管理员身份运行<code>cmd</code>,输入<code>corepack enable</code> 没有报错则是安装<code>yarn</code>成功，但是在<code>vscode</code>中终端输入<code>yarn</code>则报错：这是由于<a href="https://blog.csdn.net/weixin_44259388/article/details/124858756" target="_blank" rel="noopener">(86条消息) VsCode安装yarn：yarn : 无法将“yarn”项识别为 cmdlet、函数、脚本文件或可运行程序的名_原来是小珠呀的博客-CSDN博客</a>，最后解决方案为<a href="https://blog.csdn.net/Shivy_/article/details/120717436" target="_blank" rel="noopener">(86条消息) yarn : 无法加载文件 D:\nodejs\yarn.ps1，因为在此系统上禁止运行脚本。_发呆的薇薇°的博客-CSDN博客</a>，即修改权限信息</p><p><img src="/images/yarn%E5%9C%A8vscode%E4%B8%AD%E4%B8%8D%E5%8F%AF%E7%94%A8.PNG" alt="yarn在vscode中不可用"></p><p><img src="/images/%E5%9C%A8powershell%E4%B8%8A%E4%BF%AE%E6%94%B9%E6%89%A7%E8%A1%8C%E6%9D%83%E9%99%90.PNG" alt="在powershell上修改执行权限"></p><p><img src="/images/%E5%9C%A8powershell%E4%BB%A5%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%90%E8%A1%8C%E4%BF%AE%E6%94%B9%E4%BF%A1%E6%81%AF%E5%90%8Evscodeyarn%E5%8F%AF%E7%94%A8.PNG" alt="在powershell以管理员运行修改信息后vscodeyarn可用"></p><pre class="line-numbers language-cmd"><code class="language-cmd">1.在电脑的开始菜单中，搜索 PowerShell , 然后以管理员身份运行2.以管理员身份运行后，会出现命令窗口，接下来，输入命令 get-ExecutionPolicy 查看权限, 会看到它的返回值是 Restricted , 意思是 当前是禁用的。3.接下来，输入命令 set-ExecutionPolicy ，将权限设置为可用的，即可。关闭窗口，再使用 yarn 命令，就可以发现没有报错了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动项目时的各种报错"><a href="#启动项目时的各种报错" class="headerlink" title="启动项目时的各种报错"></a>启动项目时的各种报错</h3><ol><li>缺少vue3PhotoPreview依赖</li></ol><p>在使用<code>yarn install</code>安装项目所需依赖以后，<code>yarn dev</code>启动项目时报错没有vue3PhotoPreview模块，实际上是有的，使用<code>yarn update vue3PhotoPreview</code>报错解决。项目路径：<code>D:\Desktop\PicGo-2.4.0-beta.1\PicGo</code></p><ol start="2"><li>项目项目时报错：</li></ol><pre class="line-numbers language-cmd"><code class="language-cmd">Module not found: Error: Can't resolve 'spawn-sync' in 'D:\Desktop\PicGo-2.4.0-beta.1\PicGo-2.4.0-beta.1\node_modules\shell-env\node_modules\cross-spawn'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/weixin_42821697/article/details/123281627" target="_blank" rel="noopener">(86条消息) Error: Cannot find module ‘cross-spawn‘_范天缘的博客-CSDN博客</a></p><p><a href="https://imba97.cn/archives/750/?highlight=picgo" target="_blank" rel="noopener">https://imba97.cn/archives/750/?highlight=picgo</a></p><p><a href="https://iswbm.com/328.html" target="_blank" rel="noopener">https://iswbm.com/328.html</a></p><p><a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Core-Doc/zh/guide/</a></p><p><a href="https://molunerfinn.com/" target="_blank" rel="noopener">https://molunerfinn.com/</a></p><p>经过多轮的调试，发现该问题不是致命导致项目无法启动，在小任务栏中已经启动了项目，和之前安装该软件一样，启动后没有明显标识会让人以为项目启动失败了，这可能需要调整一下。在使用<code>yarn build</code>生成可安装的<code>.exe</code>文件。</p><h2 id="项目的梳理"><a href="#项目的梳理" class="headerlink" title="项目的梳理"></a>项目的梳理</h2><p>在之前的爬虫项目中，<code>electron</code>的项目<code>main.js</code>文件作为项目的入口，<a href="https://blog.csdn.net/ForeverCjl/article/details/108151858" target="_blank" rel="noopener">(86条消息) Electron教程-程序目录结构_electron indexdb_foreverpx的博客-CSDN博客</a>，但是在picgo图床项目中，由于是<code>electron+vue</code>项目的程序目录结构发生了变化。[electron_vue项目结构介绍 - 家乐先生 - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/lushichao/p/12731832.html#:~:text=%23项目结构" target="_blank" rel="noopener">https://www.cnblogs.com/lushichao/p/12731832.html#:~:text=%23项目结构</a> my- project ├─.electron - vue（webpack配置文件） │ └─,└─ dev-runner.js（开发环境启动入口） │ └─ webpack.main.config.js（主进程配置文件） │ └─ webpack.renderer.config.js（渲染进程配置文件）)</p><p>此外在项目中的源码多用<code>ts</code>搭建，而之前的爬虫项目多用<code>js</code>。</p><p><a href="https://simulatedgreg.gitbooks.io/electron-vue/content/cn/project_structure.html" target="_blank" rel="noopener">项目结构 · electron-vue (gitbooks.io)</a></p><p><a href="https://blog.csdn.net/qq_44193048/article/details/106891758" target="_blank" rel="noopener">(86条消息) TS和JS的一些区别_js和ts的区别_迷失的风景web的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Picgo上传图床项目 </tag>
            
            <tag> 项目环境配置 </tag>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年Austin项目的一些变化</title>
      <link href="/2023/05/28/1-xiang-mu/java-xiang-mu/austin-xiang-mu/2023-nian-austin-xiang-mu-de-yi-xie-bian-hua/"/>
      <url>/2023/05/28/1-xiang-mu/java-xiang-mu/austin-xiang-mu/2023-nian-austin-xiang-mu-de-yi-xie-bian-hua/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="重启消息推送平台项目出现的问题"><a href="#重启消息推送平台项目出现的问题" class="headerlink" title="重启消息推送平台项目出现的问题"></a>重启消息推送平台项目出现的问题</h2><p>2022年10月份在准备秋招面试的时候准备了一个面试项目，即<a href="https://github.com/ZhongFuCheng3y/austin">Austin</a>，当时由于没有安装如<code>Redis</code>、<code>Kafka</code>等依赖，于是就使用项目作者的依赖，通过远程访问作者的数据库和<code>Kafka</code>，当时修改了自己本地<code>Host</code>文件，建立依赖域名和项目作者服务器<code>IP</code>地址的映射关系。<br>在<code>Windows</code>系统下，修改<code>Host</code>文件方式为<a href="https://developer.aliyun.com/article/706009" target="_blank" rel="noopener">Windows 系统添加和修改 hosts 绑定的方法-阿里云开发者社区 (aliyun.com)</a>：<br>在<code>C:\WINDOWS\system32\drivers\etc</code>路径下打开<code>Host</code>文件<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/Host%E6%96%87%E4%BB%B6%E5%9C%B0%E5%9D%80.PNG" alt><br>如下面所示，是当时添加的<code>IP</code>和域名对应关系，方便项目中和远程服务器建立链接：</p><pre class="line-numbers language-txt"><code class="language-txt"># 5004106.52.3.94 austin.mysql# 6001106.52.3.94 austin.nacos# 9092106.52.3.94 austin.kafka# 5003106.52.3.94 austin.redis# 5001101.34.158.152 austin.apollo.config# 5003101.34.158.152 austin.apollo.admin# 6005101.34.158.152 austin.flink# 9009101.34.158.152 austin.graylog# 6002101.34.158.152 austin.grafana# 6001101.34.158.152 austin.prometheus# 6003101.34.158.152 austin.node# 6004101.34.158.152 austin.cadvisor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是最近重新启动这个项目的时候发现，之前链接的数据库无法在链接上了，前端页面无法请求数据展示，于是开始查找原因，最终发现是作者修改了数据库的请求地址和端口号，于是后端也就无法请求远程依赖的数据了，新的<code>Host</code>信息为：</p><pre class="line-numbers language-txt"><code class="language-txt"># 9009119.91.205.248 austin-graylog# 3000119.91.205.248 austin-grafana# 9090119.91.205.248 austin-prometheus# 9100119.91.205.248 austin-node# 8899119.91.205.248 austin-cadvisor# 8080119.91.205.248 austin-apollo-config# 8070119.91.205.248 austin-apollo-admin############## 3306139.9.66.219 austin-mysql# 6379139.9.66.219 austin-redis# 9092139.9.66.219 austin-kafka# 8848139.9.66.219 austin-nacos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改Host文件信息"><a href="#修改Host文件信息" class="headerlink" title="修改Host文件信息"></a>修改Host文件信息</h2><p>在<code>E:\Austin项目2023\austin</code>路径下，从仓库中拉取项目代码<code>git clone https://github.com/ZhongFuCheng3y/austin.git</code>，在修改完<code>Host</code>文件信息后，重新启动后端和前端，前端又能访问到数据库数据量，相当于前端把需求发给后端，后端从远程服务器拿回的数据。<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/amis%E5%89%8D%E7%AB%AF%E8%AE%BF%E9%97%AE%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE.PNG" alt></p>]]></content>
      
      
      <categories>
          
          <category> Java项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 消息下发队列 </tag>
            
            <tag> Host配置 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建域名-配置图床-连接Typora</title>
      <link href="/2023/05/25/4-tong-yong-pei-zhi/chuang-jian-yu-ming-pei-zhi-tu-chuang-lian-jie-typora/"/>
      <url>/2023/05/25/4-tong-yong-pei-zhi/chuang-jian-yu-ming-pei-zhi-tu-chuang-lian-jie-typora/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p>最近在整理博客的时候发现，很多存储在本地的图片在<code>hexo</code>中不能被显示出来，而通过链接放入的网络图片反而能显示，这是因为其他作者将图片配置在图床上并公开，在自己的博客中也能通过链接访问到。图床即图片云储存工具，能够将用户的图片上传到云端，再通过链接的方式在不同网站或平台访问、分享和获取。</p><p>开始觉得博客图片反正也不多，直接将本地图片打包加载到博客项目的托管仓库：<code>github</code>，也不是什么大问题。问题是<code>hexo</code>博客加载图片的路径和<code>坚果云</code>、<code>typora</code>等<code>md</code>文件编辑器的加载路径还不一致，导致要不项目部署以后图片不显示，要不就是在编辑器上不显示。<br><strong>以下是想将本地图片部署到<code>hexo</code>博客项目上及在markdown编辑器上也能显示预览</strong></p><pre class="line-numbers language-txt"><code class="language-txt">1. 如下面所示的方法，在轻应用或者typora都无法显示，正常来讲hexo生成之后应该会显示的，实际上并未显示。![图片描述](./last-news/n8gbxo.jpg)2. 而通过图片ctrl+cv的方式粘贴到markdown编辑器里，在编辑器里显示，但是hexo也不显示![kandinsky-download-1683547478839](D:\Desktop\kandinsky-download-1683547478839.png)3. 最后通过修改配置文件和安装依赖的方式成功显示图片，但是问题是，书写方式不够一目了然，而且编辑器上也不显示根目录下配置文件`_config.yml` 中有 `post_asset_folder:false改为true`安装依赖 npm install https://github.com/7ym0n/hexo-asset-image save在`md` 文件% asset_img test.jpg This is an test image %来插入图片，并显示在hexo上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是实际效果并不是很理想，安装依赖然后使用<code>% asset_img test.jpg This is an test image %</code>的方式来加载博客图片，和markdown使用<code>![]()</code>来显示图片的语法不一致，并不适合后续的文档迁移。</p><p>因此最后还是决定搞一个完整的图床，七牛云的图床早在2021年就申请过，当时是为了测试微信公众号的图床图片显示效果，后面很长时间没有用了。而七牛云为新注册用户搞的测试域名只有30天有效期，这意味着现在如果没有申请自己的域名，将无法访问到图床的图片。</p><p><strong>于是只能从申请域名和备案开始来配置图床了！！！</strong></p><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>。。。。。。。。。。。。。。。。。。。。。。暂时不搞了</p><h3 id="补上域名和备案"><a href="#补上域名和备案" class="headerlink" title="补上域名和备案"></a>补上域名和备案</h3><h2 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h2><p><a href="https://www.bilibili.com/video/BV16K4y1N7G2/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV16K4y1N7G2/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a></p><p><a href="https://blog.csdn.net/pang_ping/article/details/101279960" target="_blank" rel="noopener">(86条消息) 如何购买阿里云域名教程（域名购买+配置）~_阿里云域名购买_宋峥清的博客-CSDN博客</a></p><p><a href="https://www.bilibili.com/video/BV1NY4y1C7Ng/?spm_id_from=333.880.my_history.page.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">【2022最新版】保姆级Hexo+github搭建个人博客并绑定自己的域名_哔哩哔哩_bilibili</a></p><p><a href="https://blog.csdn.net/pang_ping/article/details/101279960" target="_blank" rel="noopener">(86条消息) 如何购买阿里云域名教程（域名购买+配置）~_阿里云域名购买_宋峥清的博客-CSDN博客</a></p><p>阿里云域名注册分步：</p><ol><li><p>进入阿里云官网，搜索域名注册</p></li><li><p>选择自己想要的域名并查询是否已被注册，没被注册的可加入到清单中，并选择立即购买。</p></li><li><p>在确认订单中，选择个人，并选择实名认证信息模板。没有实名认证模板的先新建模板。</p><p><img src="/images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0.PNG" alt="阿里云域名购买"></p></li><li><p>购买完成并实名注册后，域名已经是自己的，但是在国内还需要备案才能域名合法。</p><p><img src="/images/%E5%9F%9F%E5%90%8D%E5%A4%87%E6%A1%88.PNG" alt="域名备案"></p></li><li><p>域名备案需要在实名认证后2-3天后申请。</p></li></ol><h2 id="域名连接个人博客"><a href="#域名连接个人博客" class="headerlink" title="域名连接个人博客"></a>域名连接个人博客</h2><p><a href="https://developer.aliyun.com/article/998576" target="_blank" rel="noopener">Hexo+github搭建个人博客并绑定个人域名-阿里云开发者社区 (aliyun.com)</a><br><a href="https://www.likecs.com/show-30474.html" target="_blank" rel="noopener">github怎么绑定自己的域名 - 爱码网 (likecs.com)</a></p><hr><h2 id="VPS搭建图床"><a href="#VPS搭建图床" class="headerlink" title="VPS搭建图床"></a>VPS搭建图床</h2><p>在了解<a href="https://cn.aliyun.com/" target="_blank" rel="noopener">阿里云</a>和其他云平台繁琐的域名注册和备案流程之后，我想暂时放弃了用域名注册的方式来配置图床了！！！<br>于是我想起之前有搞过一台VPS，是否可以把硬件资源利用上，用闲置的VPS搭建图床。<br>视频参考<a href="https://www.youtube.com/watch?v=kShgzNkXRak" target="_blank" rel="noopener">搭建漂亮的图床服务</a><br>博客参考<a href="http://xuchunhui.top/2020/10/17/%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9VPS%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/" target="_blank" rel="noopener">如何借助VPS搭建自己的图床 - 面面的徐爷 (xuchunhui.top)</a></p><h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><ol><li>打开<code>shell</code>终端连接工具<a href="https://www.cnblogs.com/dusucyy/p/16537521.html" target="_blank" rel="noopener">Xshell软件</a>，连接配置好的VPS，最近闲置了,先用<code>yum list installed</code>命令看看之前都安装了哪些软件和依赖，还真是一大串，截取了一部分。<pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# yum list installedLoaded plugins: fastestmirrorRepodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fastLoading mirror speeds from cached hostfile* base: opencolo.mm.fcix.net* epel: irltoolkit.mm.fcix.net* extras: repos.lax.layerhost.com* rpmfusion-free-updates: mirror.fcix.net* updates: linux.mirrors.es.netInstalled PackagesNetworkManager-libnm.x86_64                                                     1:1.18.8-2.el7_9                                                          @updates                                            opencore-amr.x86_64                                                             0.1.5-6.el7                                                               @rpmfusion-free-updates          openjpeg2.x86_64                                                                2.3.1-3.el7_7                                                             @base                            openldap.x86_64                                                                 2.4.44-25.el7_9                                                           @updates                                               python.x86_64                                                                   2.7.5-92.el7_9                                                            @updates                         python-IPy.noarch                                                               0.75-6.el7                                                                @base                            python-configobj.noarch                                                         4.7.2-7.el7                                                               @anaconda                        python-decorator.noarch                                                         3.4.0-3.el7                                                               @anaconda                        python-devel.x86_64                                                             2.7.5-92.el7_9                                                            @updates                         python-firewall.noarch                                                          0.6.3-13.el7_9                                                            @updates                         python-gobject-base.x86_64                                                      3.22.0-1.el7_4.1                                                          @anaconda                        python-iniparse.noarch                                                          0.4-9.el7                                                                 @anaconda                        python-javapackages.noarch                                                      3.4.1-11.el7                                                              @base                            python-libs.x86_64                                                              2.7.5-92.el7_9                                                            @updates                                               rpm-python.x86_64                                                               4.11.3-48.el7_9                                                           @updates                         rpmfusion-free-release.noarch                                                   7-4                                                                       @/rpmfusion-free-release-7.noarchrsync.x86_64                                                                    3.1.2-12.el7_9                                                            @updates                         rsyslog.x86_64                                                                  8.24.0-57.el7_9.3                                                         @updates                         satyr.x86_64                                                                    0.13-15.el7                                                               @base                            sed.x86_64                                                                      4.2.2-7.el7                                                               @anaconda                        selinux-policy.noarch                                                           3.13.1-268.el7_9.2                                                        @updates                         selinux-policy-targeted.noarch                                                  3.13.1-268.el7_9.2                                                        @updates                         setools-libs.x86_64                                                             3.3.8-4.el7                                                               @base                            setroubleshoot.x86_64                                                           3.2.30-8.el7                                                              @base                            setroubleshoot-plugins.noarch                                                   3.0.67-4.el7                                                              @base                            setroubleshoot-server.x86_64                                                    3.2.30-8.el7                                                              @base                            setup.noarch                                                                    2.8.71-11.el7                                                             @anaconda                        shadow-utils.x86_64                                                             2:4.6-5.el7                                                               @anaconda                        shared-mime-info.x86_64                                                         1.8-5.el7                                                                 @anaconda                                         thai-scalable-fonts-common.noarch                                               0.5.0-7.el7                                                               @base                            thai-scalable-waree-fonts.noarch                                                0.5.0-7.el7                                                               @base                            tk.x86_64                                                                       1:8.5.13-6.el7                                                            @base                            tk-devel.x86_64                                                                 1:8.5.13-6.el7                                                            @base                            trousers.x86_64                                                                 0.3.14-2.el7                                                              @base                            ttmkfdir.x86_64                                                                 3.0.9-42.el7                                                              @base                            tuned.noarch                                                                    2.11.0-12.el7_9                                                           @updates                         tzdata.noarch                                                                   2023c-1.el7                                                               @updates                         tzdata-java.noarch                                                              2023c-1.el7                                                               @updates                         ucs-miscfixed-fonts.noarch                                                      0.3-11.el7                                                                @base                            unzip.x86_64                                                                    6.0-24.el7_9                                                              @updates                         ustr.x86_64                                                                     1.0.4-16.el7                                                              @anaconda                        util-linux.x86_64                                                               2.23.2-65.el7_9.1                                                         @updates                         uuid.x86_64                                                                     1.6.2-26.el7                                                              @base                            uuid-devel.x86_64                                                               1.6.2-26.el7                                                              @base                            vid.stab.x86_64                                                                 1.1-4.20170830gitafc8ea9.el7                                              @epel                            vim-common.x86_64                                                               2:7.4.629-8.el7_9                                                         @updates                         vim-enhanced.x86_64                                                             2:7.4.629-8.el7_9                                                         @updates                         vim-filesystem.x86_64                                                           2:7.4.629-8.el7_9                                                         @updates                         vim-minimal.x86_64                                                              2:7.4.629-8.el7_9                                                         @updates                         virt-what.x86_64                                                                1.18-4.el7_9.1                                                            @updates                         vlgothic-fonts.noarch                                                           20130607-2.el7                                                            @base                            vo-amrwbenc.x86_64                                                              0.1.3-1.el7                                                               @rpmfusion-free-updates          wayland-devel.x86_64                                                            1.15.0-1.el7                                                              @base                            wget.x86_64                                                                     1.14-18.el7_6.1                                                           @base                            which.x86_64                                                                    2.20-7.el7                                                                @anaconda                        wpa_supplicant.x86_64                                                           1:2.6-12.el7_9.2                                                          @updates                         wqy-microhei-fonts.noarch                                                       0.2.0-0.12.beta.el7                                                       @base                            wqy-zenhei-fonts.noarch                                                         0.9.46-11.el7                                                             @base                            x264-libs.x86_64                                                                0.148-24.20170521gitaaa9aa8.el7                                           @rpmfusion-free-updates          x265-libs.x86_64                                                                2.9-3.el7                                                                 @rpmfusion-free-updates          xdg-utils.noarch                                                                1.1.0-0.17.20120809git.el7                                                @base                            xfsprogs.x86_64                                                                 4.5.0-22.el7                                                              @anaconda                        xkeyboard-config.noarch                                                         2.24-1.el7                                                                @base                            xml-common.noarch                                                               0.6.3-39.el7                                                              @base                            xmlrpc-c.x86_64                                                                 1.32.5-1905.svn2451.el7                                                   @base                            xmlrpc-c-client.x86_64                                                          1.32.5-1905.svn2451.el7                                                   @base                            xorg-x11-font-utils.x86_64                                                      1:7.5-21.el7                                                              @base                            xorg-x11-fonts-Type1.noarch                                                     7.5-9.el7                                                                 @base                            xorg-x11-proto-devel.noarch                                                     2018.4-1.el7                                                              @base                            xvidcore.x86_64                                                                 1.3.4-2.el7                                                               @rpmfusion-free-updates          xz.x86_64                                                                       5.2.2-2.el7_9                                                             @updates                         xz-libs.x86_64                                                                  5.2.2-2.el7_9                                                             @updates                         yum.noarch                                                                      3.4.3-168.el7.centos                                                      @anaconda                        yum-metadata-parser.x86_64                                                      1.1.4-10.el7                                                              @anaconda                        yum-plugin-fastestmirror.noarch                                                 1.1.31-54.el7_8                                                           @anaconda                        zip.x86_64                                                                      3.0-11.el7                                                                @base                            zlib.x86_64                                                                     1.2.7-21.el7_9                                                            @updates                         zlib-devel.x86_64                                                               1.2.7-21.el7_9                                                            @updates                                                  [root@server ~]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>看了一下教程，时间比较久远，安装程序也已经404了，于是卒！</li></ol><h2 id="选择PicGo-Github搭建图床工具"><a href="#选择PicGo-Github搭建图床工具" class="headerlink" title="选择PicGo+Github搭建图床工具"></a>选择PicGo+Github搭建图床工具</h2><p>在一番选择对比后，还是感觉使用github来配置图床最可靠。使用PicGo + GitHub搭建图床，配置简单，界面很符合人体工程学。稳定性和平台性都很好，支持 Windowns，macOS 和 Linux 。关键是博客也是部署在Github上的，便于统一管理。</p><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><ol><li>在Github上新建一个public仓库，我创建的图床仓库名为<code>jlcxxzj/jlcpichub</code></li><li>在Github设置(非项目设置)生成项目的token，用于PicGo配置<a href="https://segmentfault.com/a/1190000041076406" target="_blank" rel="noopener">PicGo + GitHub</a></li><li>在下载和安装PicGo后配置GitHub图床<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E5%8F%88%E6%8B%8D%E4%BA%91" target="_blank" rel="noopener">配置手册 | PicGo</a></li></ol><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>将图片直接拖拽进上传区就能将图片上传到图床中，很方便。</p><h3 id="不要随意卸载node-js"><a href="#不要随意卸载node-js" class="headerlink" title="不要随意卸载node.js"></a>不要随意卸载node.js</h3><p>在安装PicGo时，一直闪退，还以为是<code>node.js</code>的版本过低问题，就随手将<code>node.js</code>从12版本升级到最新的18，后面发现PicGo图标在任务栏中没有显示，而是出现在小任务栏中。等运行<code>hexo</code>发现hexo所需的版本是12，只能重新装12的。</p><h3 id="使用CDN域名访问图床图片"><a href="#使用CDN域名访问图床图片" class="headerlink" title="使用CDN域名访问图床图片"></a>使用CDN域名访问图床图片</h3><p>格式如下所示：<br><code>https://cdn.jsdelivr.net/gh/YourGithubName/RepoName</code><br>在PicGo设置为：<br><code>https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub</code><br>配置完成后终于可以实现<code>md</code>文件编辑器和博客同时能访问到并加载出图片了。<br>参考链接：</p><blockquote><p><a href="https://mdnice.com/writing/d708920b484b49b1ac9d90ec4374f031" target="_blank" rel="noopener">用GitHub+PicGo搭建图床，给你的图片找个家 - mdnice 墨滴</a><br><a href="https://segmentfault.com/a/1190000041076406" target="_blank" rel="noopener">一劳永逸，使用 PicGo + GitHub 搭建个人图床工具 - AlwaysBeta - SegmentFault 思否</a><br><a href="https://www.itaru.xyz/blogs/e7630f6f.html#%E6%96%B9%E6%B3%95%E4%BA%8C-%E4%BD%BF%E7%94%A8jsdelivr" target="_blank" rel="noopener">GitHub图床无法访问的解决方案 | 木漏れ日 (itaru.xyz)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 配置图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> Typora </tag>
            
            <tag> 域名 </tag>
            
            <tag> 七牛云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客matery主题配置教程| 以开发的角度来说明！</title>
      <link href="/2023/05/23/zhi-shi-ju/hexo-zhu-ti-pei-zhi-jiao-cheng/"/>
      <url>/2023/05/23/zhi-shi-ju/hexo-zhu-ti-pei-zhi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-hexo和前端框架具有相似性"><a href="#1-hexo和前端框架具有相似性" class="headerlink" title="1. hexo和前端框架具有相似性"></a>1. hexo和前端框架具有相似性</h2><p>如果小伙伴之前接触过前端框架的化，对hexo个人博客的搭建是挺好理解的，在node.js的js运行环境中，<code>package.json</code>是作为项目配置文件的入口而存在的，<code>package-lock.json</code>则是对依赖的版本控制，也就是说在其他环境中，以该文件安装各种依赖，能保证项目的成功运行。<br><a href="https://juejin.cn/post/7145759868010364959" target="_blank" rel="noopener">package.json 配置完全解读 - 掘金 (juejin.cn)</a></p><h3 id="electron项目"><a href="#electron项目" class="headerlink" title="electron项目"></a>electron项目</h3><p>hexo和electron依赖于前端部署环境node.js的桌面式应用开发一样，也是在node.js的基础上开发的前端框架，也依赖于各种本地模块，所不同的是electron依赖于chromium而hexo依赖于GitHub。<br><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/11/1733cad1af15b700~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.image" alt="img1.jpg"></p><h2 id="2-hexo运行时是如何调用各种文件的"><a href="#2-hexo运行时是如何调用各种文件的" class="headerlink" title="2. hexo运行时是如何调用各种文件的"></a>2. hexo运行时是如何调用各种文件的</h2><p><a href="https://blog.avdancedu.com/2ef51851/" target="_blank" rel="noopener">hexo博客系统的实现原理与搭建 | 音视跳动科技 (avdancedu.com)</a><br>hexo项目会在根目录的配置目录上配置全局的信息，如看板娘、title、主题、部署位置等。<br>而在主题的配置文件中,通过如下的菜单栏来进行站内的页面显示效果，在站内点击相应的位置会跳转到相应的路径，根据路径中的<code>md</code>文件配置加载出相应的文档，如标签页加载出文档中的标签属性相关材料。特别需要注意的是，在根目录下的<code>_data</code>文件夹中的<code>json</code>文件也会根据描述被同步到站点内，如同<code>_posts</code>目录下的文档被解析为<code>json</code>然后被同步一样。<br>其他如图片、音乐、视频、樱花效果、评论等也都在主题内被设置。</p><pre class="line-numbers language-yml"><code class="language-yml"># main menu navigation url and icon  # 配置菜单导航的名称、路径和图标icon.  menu:    Index:      url: /      icon: fas fa-home    Tags:      url: /tags      icon: fas fa-tags    Categories:      url: /categories      icon: fas fa-bookmark    Archives:      url: /archives      icon: fas fa-archive    About:      url: /about      icon: fas fa-user-circle    Contact:      url: /contact      icon: fas fa-comments    Friends:      url: /friends      icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-项目上传一直报超时错误"><a href="#3-项目上传一直报超时错误" class="headerlink" title="3. 项目上传一直报超时错误"></a>3. 项目上传一直报超时错误</h2><pre class="line-numbers language-git"><code class="language-git">git config --global http.lowSpeedLimit 1000git config --global http.lowSpeedTime 600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上配置后，只有十分钟（600秒）传输速率都低于 1KB/s 的话才会 timeout，但是设置完发现和github的连接断了，则可以取消http或者https代理：</p><pre class="line-numbers language-git"><code class="language-git">//取消http代理git config --global --unset http.proxy//取消https代理 git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/good_good_xiu/article/details/118567249" target="_blank" rel="noopener">(86条消息) git提交或克隆报错fatal: unable to access ‘https://github.com/tata20191003/autowrite.git/‘: Failed to connec_good_good_xiu的博客-CSDN博客</a></p><h2 id="4-matery主题搭建"><a href="#4-matery主题搭建" class="headerlink" title="4. matery主题搭建"></a>4. matery主题搭建</h2><p><a href="https://zhuanlan.zhihu.com/p/104336960" target="_blank" rel="noopener">基于Hexo的matery主题搭建博客并深度优化 - 知乎 (zhihu.com)</a><br><a href="https://www.cnblogs.com/guixinchn/p/13542439.html" target="_blank" rel="noopener">Hexo-Matery主题美化 - 咕咕星 - 博客园 (cnblogs.com)</a></p><h2 id="5-站点信息显示不全"><a href="#5-站点信息显示不全" class="headerlink" title="5. 站点信息显示不全"></a>5. 站点信息显示不全</h2><p><a href="https://muyuuuu.github.io/2019/11/22/busuanzi-notdisplay/" target="_blank" rel="noopener">https://muyuuuu.github.io/2019/11/22/busuanzi-notdisplay/</a><br><a href="https://blog.csdn.net/qq_45738810/article/details/105973779" target="_blank" rel="noopener">(86条消息) 解决hexo 博客无法加载不蒜子不显示计数_不蒜子bad request_OY..的博客-CSDN博客</a><br><a href="https://blog.bluesky01st.eu.org/posts/d76019f8.html" target="_blank" rel="noopener">https://blog.bluesky01st.eu.org/posts/d76019f8.html</a><br><a href="https://open.toutiao.com/a6992456857474449934/?label=related_news&utm_campaign=open&utm_medium=webview&utm_source=o_llq_api&req_id=20210910150332010212144152258FAA7C&dt=PCHM10&crypt=7885&a_t=4016015322681658398093835278b7ea&gy=80e68a24aaed3c3404e6ea179fdddbffdb40d4f3e221e9f9dfaf803c85566c4757384263aebae182943b9519469443b1762dd3dd5ba1194ef20a44357d653f82651132a818b38ee7ee45077da0183fc235fb0e8f6bccd6a0c17b7f6ea99efdf1fc2a7bc6a0ec05d5bad97b7b7d42b23f7f336c2a628439bff384f63f2767f6f519405b2b6c86e08c795ba4203ac1da64&item_id=6992456857474449934&__docId__=6845224069135073796&__barStyle__=1_1&__statParams__=sourceMedia&__fromId__=__all__&__source__=toutiao&sourceMedia=toutiao&__cmtCnt__=3&__styleType__=1&__publisher_id__=3951869867&openv=&__pf__=detail&fr=normal&from_gid=6958742410356703781&channel_id=88805669586&oppo_anchor=" target="_blank" rel="noopener">Hexo+Github: 个人博客网站搭建完全教程(看这篇就够了) (toutiao.com)</a></p><h2 id="6-为matery增加评论模块"><a href="#6-为matery增加评论模块" class="headerlink" title="6. 为matery增加评论模块"></a>6. 为matery增加评论模块</h2><p><a href="https://blog.csdn.net/slow_sparrow/article/details/117753100" target="_blank" rel="noopener">(86条消息) 为使用matery主题的hexo增加Valine评论系统_howyoung525的博客-CSDN博客</a><br><a href="https://blog.csdn.net/slow_sparrow/article/details/117753100" target="_blank" rel="noopener">https://blog.csdn.net/slow_sparrow/article/details/117753100</a><br><a href="https://console.leancloud.cn/apps/eS18aVskMBwtTucX2DXka8Gx-gzGzoHsz/storage/data/Comment" target="_blank" rel="noopener">Comment · 数据存储 · blog (leancloud.cn)</a></p><h2 id="7-为matery主题增加音乐播放器"><a href="#7-为matery主题增加音乐播放器" class="headerlink" title="7. 为matery主题增加音乐播放器"></a>7. 为matery主题增加音乐播放器</h2><p><a href="https://zhuanlan.zhihu.com/p/259665807" target="_blank" rel="noopener">hexo-matery主题美化(三)-音乐播放器 - 知乎 (zhihu.com)</a><br><a href="https://www.hconan.com/posts/228cb782.html" target="_blank" rel="noopener">0003-关于hexo-theme-matery主题音乐播放器不显示问题 | HConan - 前端ＣＶ师</a></p><h2 id="8-为matery主题下修改文件，可实时看到预览效果"><a href="#8-为matery主题下修改文件，可实时看到预览效果" class="headerlink" title="8. 为matery主题下修改文件，可实时看到预览效果"></a>8. 为matery主题下修改文件，可实时看到预览效果</h2><p>每次修改文件内容的时候，在本地服务器运行时，会时时更新，不用重复生成项目。但是修改文件名时，就需要启动项目了。</p><h2 id="9-matery主题图片不显示的原因"><a href="#9-matery主题图片不显示的原因" class="headerlink" title="9. matery主题图片不显示的原因"></a>9. matery主题图片不显示的原因</h2><p><a href="https://www.suyuanblog.xyz/2021/10/14/%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/" target="_blank" rel="noopener">解决Hexo文章图片无法显示问题 | 夙渊 (suyuanblog.xyz)</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档 | Hexo</a><br>在按教程安装依赖和修改配置以后，仍然无法显示图片的原因<br>是因为安装依赖之后读取路径变为<br><strong></strong><br>脉络：</p><pre class="line-numbers language-txt"><code class="language-txt">1. 如下面所示的方法，在轻应用或者typora都无法显示，正常来讲hexo生成之后应该会显示的，实际上并未显示。![图片描述](./last-news/n8gbxo.jpg)2. 而通过图片ctrl+cv的方式粘贴到markdown编辑器里，在编辑器里显示，但是hexo也不显示![kandinsky-download-1683547478839](D:\Desktop\kandinsky-download-1683547478839.png)3. 最后通过修改配置文件和安装依赖的方式成功显示图片，但是问题是，书写方式不够一目了然，而且编辑器上也不显示根目录下配置文件`_config.yml` 中有 `post_asset_folder:false改为true`安装依赖 npm install https://github.com/7ym0n/hexo-asset-image save在`md` 文件% asset_img test.jpg This is an test image %来插入图片，并显示在hexo上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>建议:还是配置图床吧</p><h2 id="10-解决hexo主题本地图片显示"><a href="#10-解决hexo主题本地图片显示" class="headerlink" title="10. 解决hexo主题本地图片显示"></a>10. 解决hexo主题本地图片显示</h2><p><a href="https://blog.csdn.net/weixin_42030522/article/details/123075824" target="_blank" rel="noopener">(86条消息) 解决Hexo无法显示图片的几种方案_hexo 图片-CSDN博客</a><br>可在<code>source</code>文件夹下新建<code>images</code>文件夹，通过<code>/images/image.png</code>的方式实现图片的加载。</p><h2 id="11-解决hexo主题公式不显示的问题"><a href="#11-解决hexo主题公式不显示的问题" class="headerlink" title="11. 解决hexo主题公式不显示的问题"></a>11. 解决hexo主题公式不显示的问题</h2><p>修改本主题的配置文件公式信息</p><h2 id="12-解决hexo主题C-代码不高亮的问题"><a href="#12-解决hexo主题C-代码不高亮的问题" class="headerlink" title="12. 解决hexo主题C++代码不高亮的问题"></a>12. 解决hexo主题C++代码不高亮的问题</h2><p>将</p><pre class="line-numbers language-c++"><code class="language-c++">C++代码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-c"><code class="language-c">C<span class="token operator">++</span>代码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后台项目地址：<a href="https://gitee.com/yorickromantic/yorick_disk" target="_blank" rel="noopener">https://gitee.com/yorickromantic/yorick_disk</a> 前端项目地址：<a href="https://gitee.com/yorickromantic/yorick_disk_web" target="_blank" rel="noopener">https://gitee.com/yorickromantic/yorick_disk_web</a> 我的Gitee：主页<a href="https://gitee.com/yorickromantic" target="_blank" rel="noopener">https://gitee.com/yorickromantic</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> 前端UI框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java语言的序列化和反序列化 | 深入理解</title>
      <link href="/2023/05/20/2-diao-yan-xue-xi-si-kao/java-yu-yan-de-xu-lie-hua-he-fan-xu-lie-hua/"/>
      <url>/2023/05/20/2-diao-yan-xue-xi-si-kao/java-yu-yan-de-xu-lie-hua-he-fan-xu-lie-hua/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="序列化和反序列化概念"><a href="#序列化和反序列化概念" class="headerlink" title="序列化和反序列化概念"></a>序列化和反序列化概念</h1><p>Serialization（序列化）是一种将对象以一连串的字节描述的过程；<br>反序列化deserialization是一种将这些字节重建成一个对象的过程。将程序中的对象，放入文件中保存就是序列化，将文件中的字节码重新转成对象就是反序列化。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 数据序列化和反序列化  </span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span> <span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> data <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"John"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> String  jsonData  <span class="token operator">=</span>  <span class="token keyword">new</span>  <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将Map对象转换为JSON字符串 </span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> parsedData <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将JSON字符串解析为Map对象  </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/m0_58559010/article/details/117925076" target="_blank" rel="noopener">(85条消息) Java 中序列化与反序列化，看这篇就够了！_秃头大魔王_的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 序列化和反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见编程语言语法特性和库方法对比 | CHATGPT问答</title>
      <link href="/2023/05/20/2-diao-yan-xue-xi-si-kao/bu-tong-bian-cheng-yu-yan-yu-fa-te-xing-he-ku-dui-bi/"/>
      <url>/2023/05/20/2-diao-yan-xue-xi-si-kao/bu-tong-bian-cheng-yu-yan-yu-fa-te-xing-he-ku-dui-bi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="1-目前有哪些主流的编程语言？"><a href="#1-目前有哪些主流的编程语言？" class="headerlink" title="1. 目前有哪些主流的编程语言？"></a>1. 目前有哪些主流的编程语言？</h1><p>目前有许多主流的编程语言，以下是其中一些常见的编程语言：</p><ol><li><p>Java：Java 是一种广泛应用的高级编程语言，适用于构建跨平台的企业级应用、Android 应用和大型系统。</p></li><li><p>Python：Python 是一种易学易用的通用编程语言，具有简洁的语法和强大的生态系统，广泛用于数据科学、机器学习、网络开发等领域。</p></li><li><p>JavaScript：JavaScript 是一种用于前端开发和构建交互式网页的脚本语言，也可用于服务器端开发（Node.js）。</p></li><li><p>C++：C++ 是一种通用编程语言，具有高性能和底层控制能力，广泛应用于游戏开发、嵌入式系统和科学计算等领域。</p></li><li><p>C#：C# 是一种面向对象的编程语言，由微软开发，主要用于 Windows 平台开发，尤其是.NET 框架和游戏开发。</p></li><li><p>Ruby：Ruby 是一种优雅简洁的动态编程语言，强调开发者的幸福感，常用于 Web 开发和脚本编写。</p></li><li><p>Swift：Swift 是苹果开发的编程语言，专门用于 iOS、macOS、watchOS 和 tvOS 应用程序开发，具有安全性和高效性。</p></li><li><p>Go：Go 是由 Google 开发的编程语言，注重效率和简洁性，适合构建高性能的分布式系统和网络服务。</p></li></ol><p>这只是其中一些主流的编程语言，每种编程语言都有其特点和适用领域，选择适合自己需求的编程语言通常取决于具体的项目和目标。</p><h1 id="2-对每种编程语言的hello-world写法并展开说明"><a href="#2-对每种编程语言的hello-world写法并展开说明" class="headerlink" title="2. 对每种编程语言的hello world写法并展开说明"></a>2. 对每种编程语言的hello world写法并展开说明</h1><p>当然，我可以为你提供每种编程语言的 “Hello, World!” 示例代码，并对其进行一些简要的说明。请注意，以下示例代码可能不包含完整的程序结构，仅用于演示目的。</p><ol><li><p>Java:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java 是一种面向对象的编程语言，它强调类和对象的概念。在上述示例中，我们定义了一个名为 HelloWorld 的类，并在其内部定义了一个名为 <code>main</code> 的方法。<code>main</code> 方法是 Java 程序的入口点，它会在程序运行时被自动调用。在 <code>main</code> 方法中，使用 <code>System.out.println</code> 函数打印出 “Hello, World!”。</p></li><li><p>Python:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Python 是一种简洁、易学的编程语言，它不需要显式地定义类或方法。在上述示例中，我们使用 <code>print</code> 函数直接打印出 “Hello, World!”。</p></li><li><p>JavaScript:</p><pre class="line-numbers language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>JavaScript 是一种广泛用于网页开发的脚本语言。在上述示例中，我们使用 <code>console.log</code> 函数将 “Hello, World!” 打印到浏览器的控制台。</p></li><li><p>C++:</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C++ 是一种通用的编程语言，它支持面向对象和底层编程。在上述示例中，我们使用 <code>iostream</code> 标准库中的 <code>cout</code> 对象输出 “Hello, World!”。<code>std::endl</code> 用于插入换行符，<code>return 0</code> 表示程序成功结束。</p></li><li><p>C#:</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C# 是一种面向对象的编程语言，由微软开发。在上述示例中，我们定义了一个名为 HelloWorld 的类，并在其内部定义了一个名为 <code>Main</code> 的方法。<code>Main</code> 方法是 C# 程序的入口点，使用 <code>Console.WriteLine</code> 函数打印出 “Hello, World!”。</p></li><li><p>Ruby:</p><pre class="line-numbers language-ruby"><code class="language-ruby">puts <span class="token string">"Hello, World!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Ruby 是一种简洁、灵活的脚本语言。在上述示例中，我们使用 <code>puts</code> 方法打印出 “Hello, World!”。</p></li><li><p>Swift:</p><pre class="line-numbers language-swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">Swift</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Swift 是苹果开发的编程语言，用于 iOS、macOS、watchOS 和 tvOS 应用程序开发。在上述示例中，我们使用 <code>print</code> 函数打印出 “Hello, World!”。</p></li><li><p>Go:</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Go 是由 Google 开发的编程语言，注重效率和简洁性。在上述示例中，我们定义了一个名为 <code>main</code> 的函数，使用 <code>fmt.Println</code> 函数打印出 “Hello, World!”。</p></li></ol><p>以上是各种编程语言的 “Hello, World!” 示例代码和简要说明。这些示例代码只是入门级的示例，每种语言都有更复杂和丰富的语法和功能，可以用于解决各种问题和开发各种应用程序。</p><h1 id="3-请展开每种编程语言的语法特性"><a href="#3-请展开每种编程语言的语法特性" class="headerlink" title="3. 请展开每种编程语言的语法特性"></a>3. 请展开每种编程语言的语法特性</h1><p>当提及编程语言的语法结构时，以下是对每种编程语言的更详细说明：</p><ol><li><p>Java:</p><ul><li>Java 是一种面向对象的语言，基于类和对象的概念。</li><li>程序由一个或多个类组成，每个类包含成员变量（属性）和成员方法（函数）。</li><li>主要的程序入口是 <code>main</code> 方法，它是 Java 程序的起点。</li><li>Java 语法强调语句结束使用分号（;）。</li><li>Java 使用花括号（{ }）来定义代码块和控制结构。</li></ul></li><li><p>Python:</p><ul><li>Python 是一种简洁、易学的语言，强调代码的可读性和简洁性。</li><li>Python 使用缩进来表示代码块，而不是花括号。</li><li>程序通常由一个或多个函数组成，函数定义使用关键字 <code>def</code>。</li><li>Python 不需要在语句结束时使用分号，但在同一行上编写多条语句时需要使用分号分隔。</li><li>Python 有丰富的内置数据类型和函数库。</li></ul></li><li><p>JavaScript:</p><ul><li>JavaScript 是一种脚本语言，主要用于网页前端开发。</li><li>JavaScript 可以直接嵌入在 HTML 中，也可以作为独立的脚本文件使用。</li><li>JavaScript 语法类似于 Java，但更灵活和动态。</li><li>JavaScript 使用花括号来定义代码块和控制结构，语句结束时通常使用分号。</li><li>JavaScript 支持对象、函数、闭包等高级特性。</li></ul></li><li><p>C++:</p><ul><li>C++ 是一种通用的编程语言，支持面向对象和底层编程。</li><li>C++ 程序由一个或多个函数组成，其中 <code>main</code> 函数是程序的入口点。</li><li>C++ 语法强调语句结束使用分号，和大括号定义代码块。</li><li>C++ 提供了丰富的数据类型、指针、引用等底层特性。</li><li>C++ 支持类、继承、多态等面向对象编程的概念。</li></ul></li><li><p>C#:</p><ul><li>C# 是一种面向对象的语言，由微软开发。</li><li>C# 程序由一个或多个类组成，其中 <code>Main</code> 方法是程序的入口点。</li><li>C# 使用花括号定义代码块和控制结构，语句结束时通常使用分号。</li><li>C# 支持属性、委托、事件等高级特性，以及.NET 框架和相关库。</li></ul></li><li><p>Ruby:</p><ul><li>Ruby 是一种动态、灵活的脚本语言，强调简洁性和可读性。</li><li>Ruby 程序由表达式和语句组成，它使用缩进来表示代码块。</li></ul></li></ol><ul><li>Ruby 的语法简洁，没有显式的类型声明，具有强大的元编程能力。<ul><li>Ruby 有丰富的内置方法和类，支持混入（mixin）和块（block）等特性。</li></ul></li></ul><ol start="7"><li><p>Swift:</p><ul><li>Swift 是苹果开发的语言，用于 iOS、macOS、watchOS 和 tvOS 应用程序开发。</li><li>Swift 是一种类型安全的语言，支持面向对象和函数式编程。</li><li>Swift 使用花括号定义代码块和控制结构，语句结束时通常使用分号。</li><li>Swift 语法清晰，具有可选类型、模式匹配、闭包等现代编程特性。</li></ul></li><li><p>Go:</p><ul><li>Go 是由 Google 开发的语言，注重效率和简洁性。</li><li>Go 程序由函数组成，其中 <code>main</code> 函数是程序的入口点。</li><li>Go 语法简洁，使用花括号定义代码块和控制结构，语句结束时不需要分号。</li><li>Go 提供了并发编程的原生支持，以及内置的切片（slice）、映射（map）等数据结构。</li></ul></li></ol><p>以上是对每种编程语言的语法结构的简要说明。每种语言都有其独特的语法规则和特性，理解语法结构是学习和使用编程语言的重要一步。具体的语法细节可以通过官方文档、教程和实践中进一步学习和掌握。</p><h1 id="4-为每种语言写一段最符合其特性的代码实例，并展开说明"><a href="#4-为每种语言写一段最符合其特性的代码实例，并展开说明" class="headerlink" title="4. 为每种语言写一段最符合其特性的代码实例，并展开说明"></a>4. 为每种语言写一段最符合其特性的代码实例，并展开说明</h1><p>当然！我将为每种编程语言提供一个更符合其特性的代码示例，并解释其背后的特点。以下是每种语言的示例代码和详细说明：</p><ol><li>Java:</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Student</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">displayInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Name: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Age: "</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"John"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">displayInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java 示例代码展示了面向对象编程的特点。我们创建了一个名为 <code>Student</code> 的类，该类具有私有的姓名（name）和年龄（age）属性。构造函数用于初始化对象的属性。<code>displayInfo</code> 方法用于打印学生的信息。在 <code>main</code> 方法中，我们创建了一个 <code>Student</code> 对象，并调用了 <code>displayInfo</code> 方法。</p><ol start="2"><li>Python:</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Rectangle</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> length<span class="token punctuation">,</span> width<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>length <span class="token operator">=</span> length        self<span class="token punctuation">.</span>width <span class="token operator">=</span> width    <span class="token keyword">def</span> <span class="token function">calculate_area</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>length <span class="token operator">*</span> self<span class="token punctuation">.</span>width    <span class="token keyword">def</span> <span class="token function">calculate_perimeter</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>length <span class="token operator">+</span> self<span class="token punctuation">.</span>width<span class="token punctuation">)</span>rectangle <span class="token operator">=</span> Rectangle<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>area <span class="token operator">=</span> rectangle<span class="token punctuation">.</span>calculate_area<span class="token punctuation">(</span><span class="token punctuation">)</span>perimeter <span class="token operator">=</span> rectangle<span class="token punctuation">.</span>calculate_perimeter<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Area:"</span><span class="token punctuation">,</span> area<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Perimeter:"</span><span class="token punctuation">,</span> perimeter<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Python 示例展示了类的定义和方法的使用。我们创建了一个名为 <code>Rectangle</code> 的类，使用构造函数 <code>__init__</code> 初始化对象的属性。<code>calculate_area</code> 方法用于计算矩形的面积，<code>calculate_perimeter</code> 方法用于计算矩形的周长。在主程序中，我们创建了一个 <code>Rectangle</code> 对象，并调用了其方法来计算面积和周长。</p><ol start="3"><li>JavaScript:</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>radius<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>radius <span class="token operator">=</span> radius<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">calculateArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>radius <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>radius<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">calculateCircumference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>radius<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> area <span class="token operator">=</span> circle<span class="token punctuation">.</span><span class="token function">calculateArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> circumference <span class="token operator">=</span> circle<span class="token punctuation">.</span><span class="token function">calculateCircumference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Area:"</span><span class="token punctuation">,</span> area<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Circumference:"</span><span class="token punctuation">,</span> circumference<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JavaScript 示例展示了使用类的方式创建对象。我们定义了一个名为 <code>Circle</code> 的类，使用构造函数 <code>constructor</code> 初始化对象的属性。<code>calculateArea</code> 方法用于计算圆的面积，<code>calculateCircumference</code> 方法用于计算圆的周长。在主程序中，我们创建了一个 <code>Circle</code> 对象，并调用了其方法来计算面积和周长。</p><ol start="4"><li>C++:</li></ol><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Even numbers:"</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> number <span class="token operator">:</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> number<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C++ 示例展示了使用标准库和循环的特点。我们创建了一个名为 <code>numbers</code> 的整数向量，并初始化其中的元素。然后，我们使用 <code>for</code> 循环遍历向量中的元素，并判断是否为偶数，如果是，则打印该数字。最后，我们使用 <code>std::endl</code> 结束行并返回程序的执行结果。</p><ol start="5"><li>C#:</li></ol><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Program</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">string</span> name <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"Hello, "</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C# 示例展示了控制台输入和字符串操作的特点。我们使用 <code>Console.ReadLine()</code> 方法读取用户输入的名称，并将其存储在 <code>name</code> 变量中。然后，我们使用字符串拼接的方式打印出问候语。在控制台应用程序中，<code>Main</code> 方法是程序的入口点。</p><ol start="6"><li>Ruby:</li></ol><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token keyword">class</span> <span class="token class-name">Animal</span>  <span class="token keyword">def</span> speak    <span class="token keyword">raise</span> <span class="token constant">NotImplementedError</span><span class="token punctuation">,</span> <span class="token string">"Subclasses must implement the 'speak' method."</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token operator">&lt;</span> <span class="token constant">Animal</span>  <span class="token keyword">def</span> speak    puts <span class="token string">"Woof!"</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token operator">&lt;</span> <span class="token constant">Animal</span>  <span class="token keyword">def</span> speak    puts <span class="token string">"Meow!"</span>  <span class="token keyword">end</span><span class="token keyword">end</span>dog <span class="token operator">=</span> <span class="token constant">Dog</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token class-name">cat</span> <span class="token operator">=</span> <span class="token constant">Cat</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token class-name">dog<span class="token punctuation">.</span>speak</span>cat<span class="token punctuation">.</span>speak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Ruby 示例展示了多态性和异常处理的特点。我们创建了一个名为 <code>Animal</code> 的基类，其中定义了一个抽象方法 <code>speak</code>。然后，我们创建了两个子类 <code>Dog</code> 和 <code>Cat</code>，并分别实现了它们自己的 <code>speak</code> 方法。在主程序中，我们创建了一个 <code>Dog</code> 和一个 <code>Cat</code> 对象，并调用了它们的 <code>speak</code> 方法，分别输出 “Woof!” 和 “Meow!”。</p><p>以上是每种编程语言的示例代码，它们更突出了各自语言的特点和用法。这些示例代码只是展示了语言的一小部分功能，每种语言都有更广泛和深入的用法和特性。你可以通过进一步学习和实践来探索和应用这些语言的更多功能。</p><h1 id="5-代码的角度来示例说明构建项目时代码规范的优缺点"><a href="#5-代码的角度来示例说明构建项目时代码规范的优缺点" class="headerlink" title="5. 代码的角度来示例说明构建项目时代码规范的优缺点"></a>5. 代码的角度来示例说明构建项目时代码规范的优缺点</h1><p>当我们从代码的角度来说明其优缺点时，下面是一些具体的示例来展示代码的优点和缺点：</p><p>优点：</p><ol><li>可读性示例：</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// Good readability</span><span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">>=</span> <span class="token number">18</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"You are eligible for voting."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了良好的可读性。条件语句使用清晰的逻辑操作符和合适的命名，使得代码易于理解。</p><ol start="2"><li>可维护性示例：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Good maintainability</span><span class="token keyword">def</span> <span class="token function">calculate_average</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span>    total <span class="token operator">=</span> sum<span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>    count <span class="token operator">=</span> len<span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>    <span class="token keyword">return</span> total <span class="token operator">/</span> count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了良好的可维护性。函数具有明确的功能和清晰的命名，使得其他开发人员能够轻松理解和修改代码。</p><ol start="3"><li>可扩展性示例：</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Good scalability</span><span class="token keyword">class</span> <span class="token class-name">ShoppingCart</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ... other code ...</span>    <span class="token function">calculateTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ... calculation logic ...</span>    <span class="token punctuation">}</span>    <span class="token function">applyDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ... discount logic ...</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ... other methods ...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了良好的可扩展性。类的方法被分别定义，并具有清晰的单一职责，使得在添加新功能时不会影响现有的代码。</p><ol start="4"><li>可测试性示例：</li></ol><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// Good testability</span><span class="token keyword">bool</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>string str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    string reversed <span class="token operator">=</span> <span class="token function">reverseString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> str <span class="token operator">==</span> reversed<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了良好的可测试性。函数具有明确的输入和输出，并且不依赖于外部状态，使得编写测试用例和验证函数行为变得简单。</p><p>缺点：</p><ol><li>复杂性示例：</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// Complexity</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processOrder</span><span class="token punctuation">(</span>Order order<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ... complex logic ...</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> order<span class="token punctuation">.</span><span class="token function">getCustomer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEligible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ... more complex logic ...</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了代码的复杂性。复杂的逻辑和条件语句使得代码难以理解和维护，可能导致错误的引入和困难的调试。</p><ol start="2"><li>冗余和重复示例：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Redundancy and repetition</span><span class="token keyword">def</span> <span class="token function">calculateCircleArea</span><span class="token punctuation">(</span>radius<span class="token punctuation">)</span><span class="token punctuation">:</span>    pi <span class="token operator">=</span> <span class="token number">3.14159</span>    <span class="token keyword">return</span> pi <span class="token operator">*</span> radius <span class="token operator">*</span> radius<span class="token keyword">def</span> <span class="token function">calculateCircleCircumference</span><span class="token punctuation">(</span>radius<span class="token punctuation">)</span><span class="token punctuation">:</span>    pi <span class="token operator">=</span> <span class="token number">3.14159</span>    <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> pi <span class="token operator">*</span> radius<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了冗余和重复的代码。相同的常量和计算逻辑在不同的函数中重复出现，增加了维护的工作量并且容易引入错误。</p><ol start="3"><li>耦合性示例：</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// High coupling</span><span class="token keyword">function</span> <span class="token function">calculateDiscount</span><span class="token punctuation">(</span>totalAmount<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ... discount calculation ...</span>    <span class="token keyword">return</span> <span class="token function">applyDiscount</span><span class="token punctuation">(</span>totalAmount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了高耦合性的代码。函数依赖于外部的 <code>applyDiscount</code> 函数，使</p><p>得修改一个函数可能会影响到其他函数的行为。</p><ol start="4"><li>不一致性示例：</li></ol><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true"># Inconsistency</span><span class="token keyword">def</span> <span class="token function">getUserDetails</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ... implementation ...</span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token function">getUserName</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ... implementation ...</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例展示了不一致的命名风格。两个函数具有不一致的命名，使得阅读和理解代码变得困难。</p><p>综上所述，优秀的代码应具备良好的可读性、可维护性、可扩展性和可测试性。相反，复杂性、冗余和重复、耦合性和不一致性是需要避免的问题。通过使用清晰的命名、模块化和解耦、封装和复用等技术，可以提高代码的质量和效率。</p><h1 id="6-从和底层交互的角度来说明每种编程语言的优势和不足，用代码说明"><a href="#6-从和底层交互的角度来说明每种编程语言的优势和不足，用代码说明" class="headerlink" title="6. 从和底层交互的角度来说明每种编程语言的优势和不足，用代码说明"></a>6. 从和底层交互的角度来说明每种编程语言的优势和不足，用代码说明</h1><p>从和底层交互的角度来考虑每种编程语言的优势和不足，下面是一些示例代码来说明：</p><ol><li>C语言：</li></ol><p>优势：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C语言是一种底层语言，可以直接访问内存和硬件。这使得它在嵌入式系统和操作系统开发等领域非常有用。它提供了强大的指针和内存管理功能，可以直接操作底层数据结构和硬件寄存器。</p><p>不足：</p><ul><li>C语言相对较低级，编写和维护代码可能更加困难。</li><li>C语言没有现代编程语言的高级抽象和库支持，可能需要手动处理更多的底层细节。</li></ul><ol start="2"><li>C++语言：</li></ol><p>优势：</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C++是在C语言基础上发展而来，具备了面向对象编程的能力。它提供了类、继承、多态等高级特性，并且可以直接访问底层硬件。C++还拥有丰富的标准库和第三方库，使得开发更加高效和便捷。</p><p>不足：</p><ul><li>C++语言的语法和概念相对复杂，需要更多的学习和理解。</li><li>C++的底层访问能力和指针操作也可能导致安全问题和内存泄漏等风险。</li></ul><ol start="3"><li>Java语言：</li></ol><p>优势：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java是一种面向对象的高级语言，它提供了自动内存管理和垃圾回收机制，使得开发者可以专注于业务逻辑而不必过多关注底层内存管理。Java具备平台无关性，可以在不同操作系统上运行。它还有丰富的库和框架支持，提供了丰富的功能和工具。</p><p>不足：</p><ul><li>Java相对于C和C++在底层访问和性能方面可能略有不足，因为它侧重于安全性和可移植性。</li><li>Java的内存管理机制可能导致运行时开销较大，对于某些低延迟和高性能的应用可能不太适合。</li></ul><ol start="4"><li>Python语言：</li></ol><p>优势：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Python是一种解释型语言，具有简洁的语法和丰富的库。它的底层</p><p>交互能力相对较弱，但在快速开发和高效编写脚本方面表现出色。Python拥有广泛的第三方库支持，适合数据科学、机器学习和Web开发等领域。</p><p>不足：</p><ul><li>Python的解释型执行导致相对较慢的运行速度，对于对性能要求较高的场景可能不太适合。</li><li>Python对底层硬件的直接访问能力有限，需要通过C/C++扩展来提高性能和底层交互能力。</li></ul><p>综上所述，每种编程语言在与底层交互的优势和不足方面有所不同。C和C++具备强大的底层访问能力，但需要更多的底层细节处理。Java提供了平台无关性和自动内存管理，适合开发跨平台应用。Python在快速开发和脚本编写方面表现出色，但相对较慢且对底层硬件访问能力有限。选择适合的编程语言取决于具体的应用场景和需求。</p><h1 id="7-那说说每种语言自带的库和其功能吧"><a href="#7-那说说每种语言自带的库和其功能吧" class="headerlink" title="7. 那说说每种语言自带的库和其功能吧"></a>7. 那说说每种语言自带的库和其功能吧</h1><p>当谈到每种编程语言自带的库和功能时，以下是每种语言的一些主要库和功能的简要概述：</p><ol><li><p>C语言自带库：</p><ul><li><code>&lt;stdio.h&gt;</code>：提供输入输出功能，包括读写文件、控制台输入输出等。</li><li><code>&lt;stdlib.h&gt;</code>：提供内存管理、类型转换、随机数生成等功能。</li><li><code>&lt;math.h&gt;</code>：提供数学运算函数，如三角函数、指数函数、对数函数等。</li><li><code>&lt;string.h&gt;</code>：提供字符串处理函数，如复制、连接、比较等。</li><li><code>&lt;time.h&gt;</code>：提供时间和日期相关的函数和结构。</li></ul></li><li><p>C++标准库：</p><ul><li><code>&lt;iostream&gt;</code>：提供输入输出流，用于控制台输入输出。</li><li><code>&lt;vector&gt;</code>：提供动态数组容器，支持动态大小调整和高效的元素访问。</li><li><code>&lt;string&gt;</code>：提供字符串操作，包括连接、查找、替换等功能。</li><li><code>&lt;algorithm&gt;</code>：提供各种常用算法，如排序、查找、堆操作等。</li><li><code>&lt;fstream&gt;</code>：提供文件输入输出流，用于读写文件。</li></ul></li><li><p>Python标准库：</p><ul><li><code>os</code>：提供与操作系统交互的功能，如文件和目录操作、进程管理等。</li><li><code>sys</code>：提供对Python解释器和系统相关的功能，如命令行参数、退出程序等。</li><li><code>math</code>：提供数学函数，包括三角函数、指数函数、对数函数等。</li><li><code>random</code>：提供随机数生成功能。</li><li><code>datetime</code>：提供日期和时间处理功能，如日期计算、格式化等。</li></ul></li><li><p>Java标准库：</p><ul><li><code>java.lang</code>：提供Java语言的核心类和基本功能，如基本数据类型、字符串处理等。</li><li><code>java.util</code>：提供常用的数据结构和算法，如集合、队列、堆、排序等。</li><li><code>java.io</code>：提供输入输出功能，包括文件读写、网络通信等。</li><li><code>java.net</code>：提供网络编程相关的功能，如Socket通信、URL操作等。</li><li><code>java.time</code>：提供日期和时间处理功能，如日期计算、格式化等。</li></ul></li></ol><p>需要注意的是，除了这些标准库外，各种编程语言还有丰富的第三方库和框架可供使用。这些库和框架提供了更多的功能和扩展性，用于各种不同的开发需求，如Web开发、数据科学、机器学习等。开发者可以根据具体的应用领域选择适合的第三方库来增强编程语言的功能。</p><h1 id="8-再展开说第三方库和框架"><a href="#8-再展开说第三方库和框架" class="headerlink" title="8. 再展开说第三方库和框架"></a>8. 再展开说第三方库和框架</h1><p>第三方库和框架是由社区或个人开发者创建的，用于扩展编程语言功能和提供特定领域的解决方案。它们丰富了编程语言的生态系统，为开发者提供了更多的选择和便利。以下是一些常见的第三方库和框架的展开说明：</p><ol><li><p>Python第三方库和框架：</p><ul><li>NumPy：提供高性能的数值计算和多维数组操作，适用于科学计算和数据分析。</li><li>Pandas：提供数据处理和分析工具，用于处理结构化数据，如表格和时间序列。</li><li>Matplotlib：用于绘制各种类型的图表和可视化数据。</li><li>TensorFlow和PyTorch：是深度学习框架，提供了构建和训练神经网络的功能。</li><li>Django和Flask：是Web开发框架，提供了快速构建和部署Web应用程序的功能。</li></ul></li><li><p>JavaScript第三方库和框架：</p><ul><li>React：是一个用于构建用户界面的JavaScript库，提供了组件化和虚拟DOM的概念。</li><li>Vue.js：是一个渐进式JavaScript框架，用于构建交互式的Web界面。</li><li>Express.js：是一个基于Node.js的Web应用程序框架，提供了简洁灵活的路由和中间件功能。</li><li>Lodash：提供了一组实用的JavaScript工具函数，用于简化开发任务。</li><li>D3.js：是一个用于数据可视化的JavaScript库，提供了强大的绘图和数据操作功能。</li></ul></li><li><p>Java第三方库和框架：</p><ul><li>Spring框架：提供了全面的企业级应用开发解决方案，包括依赖注入、AOP、Web开发等。</li><li>Hibernate：是一个对象关系映射（ORM）框架，用于简化数据库操作和持久化。</li><li>Apache Kafka：是一个分布式流处理平台，用于高吞吐量的消息传递和处理。</li><li>Apache Spark：是一个快速通用的大数据处理引擎，支持批处理、流处理和机器学习。</li><li>Guava：是Google开发的Java核心库扩展，提供了许多实用的功能和集合类型。</li></ul></li></ol><p>这些是仅仅列举的一些常见的第三方库和框架，实际上每种编程语言都有成千上万的第三方库和框架可供使用。开发者可以根据项目需求和领域选择合适的第三方库，以加快开发速度、提高代码质量并解决特定的问题。</p><h1 id="9-为每种编程语言的标准库每种方法提供示例代码"><a href="#9-为每种编程语言的标准库每种方法提供示例代码" class="headerlink" title="9. 为每种编程语言的标准库每种方法提供示例代码"></a>9. 为每种编程语言的标准库每种方法提供示例代码</h1><p>好的，我将为每种编程语言的标准库提供一些常用方法的示例代码。</p><ol><li>Python标准库示例：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 操作文件和目录</span><span class="token keyword">import</span> osos<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">"new_directory"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建新目录</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 检查文件是否存在</span><span class="token comment" spellcheck="true"># 时间和日期</span><span class="token keyword">import</span> datetimecurrent_time <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 获取当前时间</span>formatted_time <span class="token operator">=</span> current_time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 格式化时间为字符串</span><span class="token comment" spellcheck="true"># 数据序列化和反序列化</span><span class="token keyword">import</span> jsondata <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span>json_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将字典对象转换为JSON字符串</span>parsed_data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_data<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将JSON字符串解析为Python对象</span><span class="token comment" spellcheck="true"># 网络请求</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestresponse <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"https://www.example.com"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 发送HTTP请求</span>html <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 读取响应内容并解码为字符串</span><span class="token comment" spellcheck="true"># 多线程编程</span><span class="token keyword">import</span> threading<span class="token keyword">def</span> <span class="token function">print_numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>print_numbers<span class="token punctuation">)</span>thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 启动新线程执行任务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>JavaScript标准库示例：</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 操作数组</span><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 在数组末尾添加元素</span>array<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 移除数组末尾的元素</span><span class="token comment" spellcheck="true">// 字符串处理</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"Hello, world!"</span><span class="token punctuation">;</span><span class="token keyword">let</span> length <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 获取字符串长度</span><span class="token keyword">let</span> upperCase <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将字符串转换为大写</span><span class="token comment" spellcheck="true">// 时间和日期</span><span class="token keyword">let</span> currentDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> year <span class="token operator">=</span> currentDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 获取当前年份</span><span class="token keyword">let</span> formattedDate <span class="token operator">=</span> currentDate<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 格式化日期为字符串</span><span class="token comment" spellcheck="true">// 正则表达式</span><span class="token keyword">let</span> regex <span class="token operator">=</span> <span class="token regex">/pattern/</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">"string"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 检测字符串是否匹配模式</span><span class="token comment" spellcheck="true">// 网络请求</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://www.example.com"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 发送HTTP请求并打印响应数据</span><span class="token comment" spellcheck="true">// 异步编程</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://www.example.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>Java标准库示例：</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 操作文件和目录</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span>File directory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"new_directory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>directory<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 创建新目录</span><span class="token keyword">boolean</span> fileExists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 检查文件是否存在</span><span class="token comment" spellcheck="true">// 时间和日期</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDateTime<span class="token punctuation">;</span>LocalDateTime currentTime <span class="token operator">=</span> LocalDateTime<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 获取当前时间</span>String formattedTime <span class="token operator">=</span> currentTime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>DateTimeFormatter<span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 格式化时间为字符串</span><span class="token comment" spellcheck="true">// 数据序列化和反序列化</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"John"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>String jsonData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将Map对象转换为JSON字符串</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> parsedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将JSON字符串解析为Map对象</span><span class="token comment" spellcheck="true">// 网络请求</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URL<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span>URL url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"https://www.example.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BufferedReader reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">openStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>String line<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 逐行读取响应内容并打印</span><span class="token comment" spellcheck="true">// 多线程编程</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ExecutorService<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>Executors<span class="token punctuation">;</span>ExecutorService executor <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>executor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 关闭线程池</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些示例展示了每种编程语言的标准库中一些常用方法的用法。请注意，这只是每种语言的标准库的一小部分，这些库提供了丰富的功能和方法，供开发者在实际项目中使用。</p><h1 id="10-写的挺好的，能不能写更多的示例"><a href="#10-写的挺好的，能不能写更多的示例" class="headerlink" title="10. 写的挺好的，能不能写更多的示例"></a>10. 写的挺好的，能不能写更多的示例</h1><p>当然！我很乐意提供更多示例代码来展示每种编程语言的标准库功能。请注意，以下示例只是为了演示目的，可能并不具有实际应用的完整性。</p><ol><li>Python标准库示例：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 文件读写</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'file.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>    file<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'file.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>    content <span class="token operator">=</span> file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 输出: Hello, World!</span><span class="token comment" spellcheck="true"># 多线程并发</span><span class="token keyword">import</span> threading<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Worker thread"</span><span class="token punctuation">)</span>thread1 <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">)</span>thread2 <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">)</span>thread1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>thread2<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 数据处理</span><span class="token keyword">import</span> math<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 输出: 5.0</span><span class="token comment" spellcheck="true"># 网络服务</span><span class="token keyword">import</span> http<span class="token punctuation">.</span>server<span class="token keyword">import</span> socketserverhandler <span class="token operator">=</span> http<span class="token punctuation">.</span>server<span class="token punctuation">.</span>SimpleHTTPRequestHandler<span class="token keyword">with</span> socketserver<span class="token punctuation">.</span>TCPServer<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token keyword">as</span> server<span class="token punctuation">:</span>    server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>JavaScript标准库示例：</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 文件读写</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">'file.txt'</span><span class="token punctuation">,</span> <span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'file.txt'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 输出: Hello, World!</span><span class="token comment" spellcheck="true">// 多线程并发</span><span class="token keyword">function</span> <span class="token function">worker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Worker thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> <span class="token punctuation">{</span> Worker <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'worker_threads'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> worker1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> worker2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">;</span>worker1<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>worker2<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 数据处理</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 输出: 5</span><span class="token comment" spellcheck="true">// 网络服务</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'text/plain'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Server running at http://localhost:8000/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>Java标准库示例：</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 文件读写</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Files<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Paths<span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span>    Files<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>Paths<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Hello, World!"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String content <span class="token operator">=</span> Files<span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span>Paths<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 输出: Hello, World!</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 多线程并发</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ExecutorService<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>Executors<span class="token punctuation">;</span>ExecutorService executor <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Worker thread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Worker thread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>executor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 数据处理</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Math<span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 输出: 5.0</span><span class="token comment" spellcheck="true">// 网络服务</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ServerSocket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Socket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">(</span>ServerSocket serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Socket clientSocket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 处理客户端连接</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些示例提供了更多关于每种编程语言的标准库的方法用法示例。这些标准库提供了广泛的功能，从文件操作和多线程并发到数据处理和网络服务。你可以根据具体的需求进一步探索每种语言的标准库文档和示例代码，以充分利用这些功能。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> python </tag>
            
            <tag> c++ </tag>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron爬虫项目 | node.js环境搭建</title>
      <link href="/2023/05/20/1-xiang-mu/easyspider-pa-chong-xiang-mu/guan-yu-electron-de-yi-xie-an-zhuang-yi-ji-xiang-mu-pei-zhi-wen-ti/"/>
      <url>/2023/05/20/1-xiang-mu/easyspider-pa-chong-xiang-mu/guan-yu-electron-de-yi-xie-an-zhuang-yi-ji-xiang-mu-pei-zhi-wen-ti/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="一、项目介绍及electron安装"><a href="#一、项目介绍及electron安装" class="headerlink" title="一、项目介绍及electron安装"></a>一、项目介绍及electron安装</h1><h2 id="1-electron爬虫项目介绍"><a href="#1-electron爬虫项目介绍" class="headerlink" title="1. electron爬虫项目介绍"></a>1. electron爬虫项目介绍</h2><p>该项目是浙大学长的研究生毕业论文内容，实现了完全开源，通过对爬虫逻辑的可视化流程设计来实现复杂的需求，通过electron的桌面应用化在能在本地运行，将爬虫文件通过<code>excel</code>和<code>word</code>的形式保存在本地。因为完全开源，便于二次开发，项目地址为：<a href="https://github.com/NaiboWang/EasySpider">GitHub - NaiboWang/EasySpider: A visual no-code/code-free web crawler/spider一个可视化爬虫软件，可以无代码图形化设计和执行的爬虫任务</a></p><h2 id="2-安装electron并启动项目"><a href="#2-安装electron并启动项目" class="headerlink" title="2. 安装electron并启动项目"></a>2. 安装electron并启动项目</h2><p>electron需要在<code>node.js</code>和<code>npm</code>的环境下安装，检查电脑中配置的<code>node.js</code>和<code>npm</code>版本是否满足要求，最好是在12.0版本以后的<code>node.js</code>中安装electron。在下载了最新的<code>node.js</code>和<code>npm</code>后，安装electron的时候又出现卡着不动直到失败的问题，这是因为使用<code>npm install electron --save-dev</code>需请求国外资源的原因，可配置国内镜像下载：<br>先运行</p><pre class="line-numbers language-node.js"><code class="language-node.js">npm install -g cnpm --registry=https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再运行</p><pre class="line-numbers language-node.js"><code class="language-node.js">cnpm install --save-dev electron<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可安装。<br><strong>推荐使用<code>cnmp install -g electron</code>命令来安装全局配置，全局配置会将依赖配置在<code>D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules</code>，而本地配置会将依赖存在项目路径中:<code>D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules</code></strong></p><p>安装好electron就可以去项目地址克隆或者下载源代码，进入充满挑战和惊喜的调试了：</p><ol><li>克隆或者去electron官方地址<a href="https://github.com/electron/electron-quick-start">GitHub - electron/electron-quick-start: Clone to try a simple Electron app</a>去克隆初始项目，在这里的爬虫项目地址还是之前的地址<a href="https://github.com/NaiboWang/EasySpider">爬虫</a></li><li>进入项目根目录</li><li>安装依赖 npm install</li><li>启动项目 npm start</li></ol><blockquote><p>参考：<br><a href="https://zhuanlan.zhihu.com/p/562217675" target="_blank" rel="noopener">解决npm安装electron总失败的问题 - 知乎 (zhihu.com)</a><br><a href="https://blog.csdn.net/qq_46178473/article/details/122515725" target="_blank" rel="noopener">(86条消息) 使用npm install安装依赖报错_npm proj4_泪梦心空的博客-CSDN博客</a><br><a href="https://blog.csdn.net/hongc93/article/details/123268031" target="_blank" rel="noopener">第二节 创建electron项目并启动_electron 启动-CSDN博客</a></p></blockquote><h2 id="3-node-js、npm和electron的关系"><a href="#3-node-js、npm和electron的关系" class="headerlink" title="3. node.js、npm和electron的关系"></a>3. node.js、npm和electron的关系</h2><p>node.js是javascript的运行环境，npm是node.js的包管理工具，electron是打包运行客户端桌面应用工具，这三者都是前端的技术栈。</p><p>事实上，在electron的官方文档中<a href="https://www.electronjs.org/zh/docs/latest/tutorial/tutorial-prerequisites" target="_blank" rel="noopener">基本要求 | Electron (electronjs.org)</a>提示，项目的运行不依赖安装的<code>node.js</code>，只是安装electron的时候使用，项目运行时使用electron自带的<code>node.js</code>环境：</p><blockquote><p>虽然您需要在开发环境安装 Node.js 才能编写 Electron 项目，但是 Electron <strong>不使用您系统的 Node.js 环境来运行它的代码</strong>。 相反地，它使用它内置的 Node.js 运行时。 这意味着您的终端用户不需要 Node.js 环境也可以运行您的应用。</p></blockquote><blockquote><p>参考<br><a href="https://blog.csdn.net/bai2010bingbing/article/details/93210258" target="_blank" rel="noopener">(86条消息) Node.js和Electron安装教程_electron和nodejs_BaiPeter的博客-CSDN博客</a><br><a href="https://blog.csdn.net/qq_39124701/article/details/128364258#:~:text=%E6%AD%A3%E7%A1%AE%E5%AE%89%E8%A3%85Electron%E3%80%81Electron-quick-start%E5%92%8CElectron" target="_blank" rel="noopener">(86条消息) 正确安装Electron、Electron-quick-start和Electron Forge_三巧的博客-CSDN博客</a></p></blockquote><h1 id="二、运行爬虫项目"><a href="#二、运行爬虫项目" class="headerlink" title="二、运行爬虫项目"></a>二、运行爬虫项目</h1><p>在通过<code>npm install</code>命令安装完本地项目依赖之后，相关的依赖文件在项目子路径<code>node_modules</code>下保存，<code>注：实际上此时并没有完全安装成功所有依赖</code>，通过<code>npm start</code>来启动项目，报错说找不到<code>chromedriver</code>，连接不到浏览器。因为electron项目依赖于<code>chrome</code>浏览器的，而爬虫通过<code>python selenium</code>模块也需要浏览器来获取web数据。</p><h2 id="1-连接浏览器报错"><a href="#1-连接浏览器报错" class="headerlink" title="1. 连接浏览器报错"></a>1. 连接浏览器报错</h2><p>开始以为是<code>chrome</code>没有配置<code>chromedriver</code>导致的<code>selenium</code>连接浏览器失败，然后就去配置<code>chromedriver</code></p><blockquote><p><strong>selenium</strong>操作chrome浏览器需要有ChromeDriver驱动来协助。<br>什么是ChromeDriver？<br>ChromeDriver是Chromium team开发维护的，它是实现WebDriver有线协议的一个单独的服务。ChromeDriver通过chrome的自动代理框架控制浏览器，ChromeDriver只与12.0.712.0以上版本的chrome浏览器兼容。</p></blockquote><blockquote><p>chromedriver版本及使用问题<br>chromedriver没有合适的win64版本？64位系统安装win32位也可以，64位操作系统兼容32的。下载与你chrome对应的版本至你的chrome.exe同目录，如笔者chrome版本,80.0.3987.149（正式版本） （64 位）下载80.0.3987.16 win32版本。)</p></blockquote><p>但是在配置ChromeDriver之后却仍然报错，仔细阅读之后是发现项目找不到浏览器路径导致的，而且是因为在代码中写死了，只在项目的子路径中找浏览器，那配置到环境变量的浏览器也没有办法使用了，最后在作者的发行版中看到项目中直接把浏览器配置到项目里了，于是乎将发行版的谷歌浏览器相关文件夹移到源代码路径中，才解决问题。</p><p>不过这也导致electron项目很大，各种依赖和环境全部打包到项目中，跨平台性是好了，但是项目文件是真大。</p><blockquote><p>参考<br><a href="https://blog.csdn.net/weixin_45109684/article/details/117650036" target="_blank" rel="noopener">Chromedriver安装教程（简洁版）_始终是个小白的博客-CSDN博客</a><br><a href="https://blog.csdn.net/zhoukeguai/article/details/113247342" target="_blank" rel="noopener">(86条消息) chromedriver下载与安装方法，亲测可用_zhoukeguai的博客-CSDN博客</a></p></blockquote><h2 id="2-用npm-install安装依赖隐藏的bug出来了"><a href="#2-用npm-install安装依赖隐藏的bug出来了" class="headerlink" title="2. 用npm install安装依赖隐藏的bug出来了"></a>2. 用<code>npm install</code>安装依赖隐藏的bug出来了</h2><p>在之前<code>npm install</code>安装项目依赖的时候，有一个项目需要的模块<code>node-window-manager</code>并没有配置成功，由于<code>npm start</code>能成功运行项目，想着是个无关紧要的依赖，而且安装此依赖还要配置python和visual studio，就说放一放，然后就是各种问题来回调。</p><blockquote><p><a href="https://blog.csdn.net/qq_34707272/article/details/118015209" target="_blank" rel="noopener">(86条消息) npm install gyp ERR 错误_爱宇阳的博客-CSDN博客</a></p></blockquote><p>首先察觉到有问题是是在爬虫过程中，浏览器窗口闪退或者没有反应的问题，调试的时候报错模块缺失，在安装electron的时候多是网络的问题，于是就往网络方面的原因着手，都没有用，其实就是需要配置python和visual studio，在配置完这两项以后终于成功安装了缺失的依赖了。<br>中间使用过如下方法都没有解决：</p><ol><li><p>清除C盘用户文件夹下的缓存</p><blockquote><p>1.先清除缓存 npm cache clean –force<br>2.删除项目中的node_modules文件夹<br>3.安装淘宝镜像cnpm，用cnpm来安装依赖 npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br>4.最后再执行 cnpm install</p></blockquote></li><li><p>重新安装<code>node.js</code>和electron</p></li><li><p>将项目依赖转为全局依赖</p></li></ol><h2 id="3-项目周边知识"><a href="#3-项目周边知识" class="headerlink" title="3. 项目周边知识"></a>3. 项目周边知识</h2><ol><li><p><code>Electron-forge</code> 是一个帮你从项目初始化到打包发布全流程管理的脚手架工具，可整合React、Vue、Webpack、TS等，配置简单统一，容易上手。</p><blockquote><p><a href="https://blog.csdn.net/wanzheng_96/article/details/118223970" target="_blank" rel="noopener">(86条消息) Electron脚手架 - ElectronForge使用文档_electron-forge_wanzheng_96的博客-CSDN博客</a></p></blockquote></li><li><p>项目中使用到了<code>selenium</code>,使用python代码，并通过<code>pyinstaller</code>打包，命令格式为：</p><pre class="line-numbers language-cmd"><code class="language-cmd">pyinstaller [options] script [script …] | specfile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><a href="https://blog.csdn.net/weixin_44858471/article/details/104283174" target="_blank" rel="noopener">(86条消息) pyinstaller使用指南(官方手册中文翻译)-python导出exe_pyinstaller使用教程_·····ᗦ的博客-CSDN博客</a></p></blockquote></li><li><p>npm项目启动命令的区别<br><code>npm start</code>和<code>npm run start</code>没有区别，<code>npm start</code>是对<code>npm run start</code>的省略，而运行<code>vue</code>项目时：</p><pre class="line-numbers language-text"><code class="language-text">npm run dev 是vue-cli2.0版本使用的 npm run serve 是vue-cli3.0版本使用的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>而<code>npm run dev</code>和<code>npm run start</code>的作用是一样的，也没有什么区别。</p><blockquote><p><a href="https://blog.csdn.net/yexudengzhidao/article/details/123706192" target="_blank" rel="noopener">(86条消息) npm start 和 npm run start的关系以及npm run start传递参数_. . . . .的博客-CSDN博客</a><br><a href="https://blog.csdn.net/boyit0/article/details/119643218" target="_blank" rel="noopener">(86条消息) vue让你理解npm run dev 和 npm run serve_夏末_阳光依然耀眼的博客-CSDN博客</a><br><a href="https://www.jianshu.com/p/f3230c16e75e" target="_blank" rel="noopener">vue中npm run dev命令和npm run start命令的区别、作用 - 简书 (jianshu.com)</a></p></blockquote></li></ol><h1 id="三、调试的心路历程，总算成功了"><a href="#三、调试的心路历程，总算成功了" class="headerlink" title="三、调试的心路历程，总算成功了"></a>三、调试的心路历程，总算成功了</h1><h2 id="1-漫长的调试过程"><a href="#1-漫长的调试过程" class="headerlink" title="1. 漫长的调试过程"></a>1. 漫长的调试过程</h2><p>昨晚8点多偶让刷到一个使用electron做的爬虫项目，真的是完全开源，作者经历，项目过程，连毕设都放在项目上了。这是大佬的研究生毕设项目，刚好最近在辨析各种各种前端框架的优缺点，而且爬虫项目呢比较能看得出效果，于是就想那就花点时间调试一下吧，没想到入了个大坑。从昨晚debug到下午1点40，中途实在是想放弃了，但是又觉得花了那么多时间，卡在一个好像很快能解决，实际上bug越调越乱。来回删库建库，环境搭建又删，删了又充搭，折腾死人了。不过总算是调通了，来总结和反省一下搭环境时走的弯路吧，这次的经历仿佛又回到了之前搞深度学习库的时候，真是让人记忆犹新。</p><p>总结这次出现的问题，归根结底还是对node.js环境和npm的不熟悉导致的，如不清楚全局node依赖和项目依赖的区分，在下载依赖包时全局依赖和项目依赖混用。二是担心产生各种C盘的垃圾文件，来回清盘重启，耽误时间；三是如<code>chromedriver_win64</code>调用浏览器路径缺失的问题。这些问题在解决之后感觉也就那么回事，但是debug过程中各种可能的选择，纠错时归零的方法，很花时间。</p><p>在拉取项目源代码之后，<code>ElectronJS</code>是项目运行的文件夹，其他是大佬提供的辅助材料，如项目论文、案例截图、发行版本等，与本项目的代码运行并无直接关系。然后是：</p><p>先运行</p><pre class="line-numbers language-node.js"><code class="language-node.js">npm install -g cnpm --registry=https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再运行</p><pre class="line-numbers language-node.js"><code class="language-node.js">cnpm install -g electron<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将安装依赖换成国内镜像，并将electron安装成全局依赖，此时<code>C:\Users\Admin\AppData\Roaming\npm</code>路径下就有<code>cnpm</code>和<code>electron</code>两个全局作用域包。而将<code>npm</code>加入到环境变量中时项目能够使用,在环境变量中添加路径<code>C:\Users\Admin\AppData\Roaming\npm</code>。</p><p>完成这些之后，cmd切换到在项目路径上，安装项目依赖的库，而折腾了一晚上的原因就在这，使用<code>cnpm install</code>来配置项目依赖时，由于该项目涉及的库较多和杂，很容易出现各种干涉和版本不匹配导致的安装失败，开始的时候侥幸，通过<code>cnpm install</code>之后，在部分依赖并为安装成功的状况下，直接<code>npm start</code>，还该死的启动成功项目了，当然bug并没有因此而逃掉。</p><pre class="line-numbers language-cmd"><code class="language-cmd">D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm start> easy-spider@0.3.0 start> electron-forge start√ Checking your system√ Locating application√ Loading configuration√ Preparing native dependencies [0.1s]√ Running generateAssets hook<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然没有报错，项目启动了，但是<code>Preparing native dependencies</code>这里需要的依赖是不够的，但是这是后话了，启动之后在项目里找不到调试浏览器的路径，即无法驱动<code>chromedriver</code>，虽然在谷歌中下载了，但是项目中的搜索路径是<code>EasySpider\ElectronJS\chrome_win64\chrome.exe</code>也就是在相对路径下找，而大佬的源码里并没有配置，可能是文件太大的原因，反而在安装版本上作者配置了<code>chromedriver</code>，直接复制到搜索路径即可。</p><p>解决了这个问题，能在启动的electron界面中跳转到浏览器页面了，这个时候之前埋下的依赖包不完整的雷就炸了，由于中间<code>electron-forge</code>和<code>node-window-manager</code>相互干涉导致连node.js都呈现安装了，但是仍然没有解决，先是缺<code>node-window-manager</code>依赖导致设计流程页面不跳转和electron程序闪退，然后着手去安装<code>node-window-manager</code>的时候，<code>electron-forge</code>又不能用了，从而项目都不能运行。换各种方法都不行，因为中间一直怕麻烦，觉得装node的依赖和python以及visual studio没有什么关系，所以即使提示报错需要这两项仍然想的从其他方法解决，但是事实发现，既然提示错误是啥，就老老实实解决。</p><pre class="line-numbers language-cmd"><code class="language-cmd"># 缺node-window-manager依赖报错D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm lsnpm ERR! code ELSPROBLEMSnpm ERR! missing: node-window-manager@^2.2.4, required by easy-spider@0.3.0easy-spider@0.3.0 D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS+-- @electron-forge/cli@6.1.1 -> .\node_modules\.store\@electron-forge+cli@6.1.1\node_modules\@electron-forge\cli+-- @electron-forge/maker-deb@6.1.1 -> .\node_modules\.store\@electron-forge+maker-deb@6.1.1\node_modules\@electron-forge\maker-deb+-- @electron-forge/maker-rpm@6.1.1 -> .\node_modules\.store\@electron-forge+maker-rpm@6.1.1\node_modules\@electron-forge\maker-rpm+-- @electron-forge/maker-squirrel@6.1.1 -> .\node_modules\.store\@electron-forge+maker-squirrel@6.1.1\node_modules\@electron-forge\maker-squirrel+-- @electron-forge/maker-zip@6.1.1 -> .\node_modules\.store\@electron-forge+maker-zip@6.1.1\node_modules\@electron-forge\maker-zip+-- argv@0.0.3 -> .\node_modules\.store\argv@0.0.3\node_modules\argv+-- electron-squirrel-startup@1.0.0 -> .\node_modules\.store\electron-squirrel-startup@1.0.0\node_modules\electron-squirrel-startup+-- electron@20.3.12 -> .\node_modules\.store\electron@20.3.12\node_modules\electron+-- http@0.0.1-security -> .\node_modules\.store\http@0.0.1-security\node_modules\http+-- UNMET DEPENDENCY node-window-manager@^2.2.4+-- selenium-webdriver@4.9.2 -> .\node_modules\.store\selenium-webdriver@4.9.2\node_modules\selenium-webdriver`-- ws@8.13.0 -> .\node_modules\.store\ws@8.13.0\node_modules\ws<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后全装这项依赖的时候，又报错：</p><pre class="line-numbers language-cmd"><code class="language-cmd"># 这项依赖的安装又依赖于python以及visual studioD:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm installnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fsnpm WARN deprecated asar@3.2.0: Please use @electron/asar moving forward.  There is no API change, just a package name changenpm WARN deprecated argv@0.0.3: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.npm WARN cleanup Failed to remove some directories [npm WARN cleanup   [npm WARN cleanup     'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\extract-file-icon',npm WARN cleanup     [Error: EBUSY: resource busy or locked, rmdir 'D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\extract-file-icon'] {npm WARN cleanup       errno: -4082,npm WARN cleanup       code: 'EBUSY',npm WARN cleanup       syscall: 'rmdir',npm WARN cleanup       path: 'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\extract-file-icon'npm WARN cleanup     }npm WARN cleanup   ],npm WARN cleanup   [npm WARN cleanup     'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\@electron',npm WARN cleanup     [Error: EPERM: operation not permitted, rmdir 'D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\@electron\universal'] {npm WARN cleanup       errno: -4048,npm WARN cleanup       code: 'EPERM',npm WARN cleanup       syscall: 'rmdir',npm WARN cleanup       path: 'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\@electron\\universal'npm WARN cleanup     }npm WARN cleanup   ]npm WARN cleanup ]npm ERR! code 1npm ERR! path D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-window-managernpm ERR! command failednpm ERR! command C:\Windows\system32\cmd.exe /d /s /c npm run rebuildnpm ERR! > node-window-manager@2.2.4 rebuildnpm ERR! > node-gyp rebuildnpm ERR! gyp info it worked if it ends with oknpm ERR! gyp info using node-gyp@9.3.1npm ERR! gyp info using node@14.21.3 | win32 | x64npm ERR! gyp info find Python using Python version 3.10.9 found at "C:\Users\Admin\AppData\Local\Programs\Python\Python310\python.exe"npm ERR! gyp ERR! find VSnpm ERR! gyp ERR! find VS msvs_version not set from command line or npm confignpm ERR! gyp ERR! find VS VCINSTALLDIR not set, not running in VS Command Promptnpm ERR! gyp ERR! find VS checking VS2022 (17.6.33712.159) found at:npm ERR! gyp ERR! find VS "D:\visualstudio\IDE"npm ERR! gyp ERR! find VS - found "Visual Studio C++ core features"npm ERR! gyp ERR! find VS - missing any VC++ toolsetnpm ERR! gyp ERR! find VS could not find a version of Visual Studio 2017 or newer to usenpm ERR! gyp ERR! find VS looking for Visual Studio 2015npm ERR! gyp ERR! find VS - not foundnpm ERR! gyp ERR! find VS not looking for VS2013 as it is only supported up to Node.js 8npm ERR! gyp ERR! find VSnpm ERR! gyp ERR! find VS **************************************************************npm ERR! gyp ERR! find VS You need to install the latest version of Visual Studionpm ERR! gyp ERR! find VS including the "Desktop development with C++" workload.npm ERR! gyp ERR! find VS For more information consult the documentation at:npm ERR! gyp ERR! find VS https://github.com/nodejs/node-gyp#on-windowsnpm ERR! gyp ERR! find VS **************************************************************npm ERR! gyp ERR! find VSnpm ERR! gyp ERR! configure errornpm ERR! gyp ERR! stack Error: Could not find any Visual Studio installation to usenpm ERR! gyp ERR! stack     at VisualStudioFinder.fail (D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\find-visualstudio.js:122:47)npm ERR! gyp ERR! stack     at D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\find-visualstudio.js:75:16npm ERR! gyp ERR! stack     at VisualStudioFinder.findVisualStudio2013 (D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\find-visualstudio.js:369:14)npm ERR! gyp ERR! stack     at D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\find-visualstudio.js:71:14npm ERR! gyp ERR! stack     at D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\find-visualstudio.js:390:16npm ERR! gyp ERR! stack     at D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\util.js:54:7npm ERR! gyp ERR! stack     at D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-gyp\lib\util.js:33:16npm ERR! gyp ERR! stack     at ChildProcess.exithandler (child_process.js:390:5)npm ERR! gyp ERR! stack     at ChildProcess.emit (events.js:400:28)npm ERR! gyp ERR! stack     at maybeClose (internal/child_process.js:1088:16)npm ERR! gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:296:5)npm ERR! gyp ERR! System Windows_NT 10.0.19045npm ERR! gyp ERR! command "D:\\node\\node.exe" "D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\node-gyp\\bin\\node-gyp.js" "rebuild"npm ERR! gyp ERR! cwd D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\node-window-managernpm ERR! gyp ERR! node -v v14.21.3npm ERR! gyp ERR! node-gyp -v v9.3.1npm ERR! gyp ERR! not oknpm ERR! A complete log of this run can be found in:npm ERR!     C:\Users\Admin\AppData\Local\npm-cache\_logs\2023-05-21T05_19_02_951Z-debug-0.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开始一直觉得安装依赖不需要这个，另一方面是觉得浪费时间。在安装完python和visualstudio后，并将程序路径其加入到环境变量中后，所有依赖可以配配置安装了：</p><pre class="line-numbers language-cmd"><code class="language-cmd">Server has started.Project\electron_project\EasySpider\ElectronJS>npm startserver_address: http://localhost:8074x64asy-spider@0.3.0 startD:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\chrome_win64\chromedriver_win64.exe D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\chrome_win64\chrome.exe D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\chrome_win64\execute.batwin32D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm installnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fsnpm WARN deprecated argv@0.0.3: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.npm WARN deprecated asar@3.2.0: Please use @electron/asar moving forward.  There is no API change, just a package name changenpm WARN cleanup Failed to remove some directories [npm WARN cleanup   [npm WARN cleanup     'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\electron-installer-redhat',npm WARN cleanup     [Error: EPERM: operation not permitted, rmdir 'D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\electron-installer-redhat\node_modules\fs-extra'] {npm WARN cleanup       errno: -4048,npm WARN cleanup       code: 'EPERM',npm WARN cleanup       syscall: 'rmdir',npm WARN cleanup       path: 'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\electron-installer-redhat\\node_modules\\fs-extra'npm WARN cleanup     }npm WARN cleanup   ],npm WARN cleanup   [npm WARN cleanup     'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\electron-installer-debian\\node_modules\\@malept\\cross-spawn-promise',npm WARN cleanup     [Error: EPERM: operation not permitted, rmdir 'D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS\node_modules\electron-installer-debian\node_modules\@malept\cross-spawn-promise'] {npm WARN cleanup       errno: -4048,npm WARN cleanup       code: 'EPERM',npm WARN cleanup       syscall: 'rmdir',npm WARN cleanup       path: 'D:\\Desktop\\ElectronProject\\electron_project\\EasySpider\\ElectronJS\\node_modules\\electron-installer-debian\\node_modules\\@malept\\cross-spawn-promise'npm WARN cleanup     }npm WARN cleanup   ]npm WARN cleanup ]added 442 packages, changed 11 packages, and audited 456 packages in 14s63 packages are looking for funding  run `npm fund` for details3 moderate severity vulnerabilitiesTo address all issues (including breaking changes), run:  npm audit fix --forceRun `npm audit` for details.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后再<code>npm start</code>运行程序的时候,项目所依赖的库都有了，之前出现的闪退和流程不加载的问题也就不再出现了：</p><pre class="line-numbers language-cmd"><code class="language-cmd">> D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm start> easy-spider@0.3.0 start> electron-forge start√ Checking your system√ Locating application√ Locating application√ Locating application√ Loading configuration√ Preparing native dependencies: 2 / 2 [10s]√ Running generateAssets hook<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次最大的心得是对不熟悉的方面不要先入为主，先去了解背景，以及简单的搭建流程，如electron项目是按什么流程搭建的，其次是出现问题不要畏难和想当然，还是要多看看问题的症结所在。</p><h2 id="2-问题又来了"><a href="#2-问题又来了" class="headerlink" title="2. 问题又来了"></a>2. 问题又来了</h2><p>学编程如翻大山，当志得意满的翻越了一道山梁，撞怀的大多是更多更高的绵延山川。</p><p>当自从依赖库的方面解决了之前对node.js环境和electron开发的不熟悉导致的程序的闪退和缺失，甚至运行失败的问题。回归这个项目的核心，是各种便捷化的网页爬虫，通过流程图的方式可视化逻辑设计，是这个项目的一大亮点。在实际的运行环境中，又出现了作者 了解较少的一个编程环境，<code>cmd</code>，虽然了解的少，但其实在Windows系统中我们经常再用与对操作系统的维护和设计，而在编程方面却较少了解，当脱离之前的IDEA、Pycharm、VScode等IDE环境，使用CMD来运行代码或者打包项目，还是容易出现各种问题。这其中最关键的是中文CMD下的编码默认是<code>gbk</code>,而在项目代码层面，用的更多的是<code>UTF-8</code>编码方式，两种不同编码方式出现不好DEBUG的错误，就比如在cmd下使用<code>pyinstaller -F --icon=favicon.ico easyspider_executestage.py</code>来打包<code>python selenium</code>的爬虫程序，然后electron调用生成的<code>.exe</code>程序，爬虫下来的网页数据通过字典的形式储存，查询键值对的时候，键值明明都存在，就是死活不能查找，改键的编码方式、网页数据的编码方式都不行。在不保证可能出现的CMD环境下的重启导致的问题解决，那就可以确定是打包和项目运行环境的问题导致的，于是在重启之后使用<code>Windows PowerShell</code>来运行项目，在vscode的<code>UTF-8</code>环境下对<code>.py</code>代码打包，问题成功解决了。</p><blockquote><p>PowerShell和cmd的区别<br>PowerShell是跨平台的，cmd是Windows专用的。<br>PowerShell有面向对象的管道。<br>PowerShell能够调用.NET的很多功能。</p></blockquote><p>所以这也解释了为什么项目部署喜欢在linux系统下，windows系统面向的是对程序不太熟悉的用户，主打一个容易操作，将很多东西都封装好了，对于需要调试代码的程序员，就成为了debug黑洞。</p><h1 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h1><p>我不停的看书，看文学历史，不停地走，看山川大地。尽管这些书，这些路，可能与我的未来无关，但他们教会了我思考。未来我可能一无是处，或许莫名其妙的死了，又或许莫名其妙的活着。但这些都不重要，重要的是我要知道自己成为一个什么的人，与钱财无关，与他人无关。人不应该是一张白纸，只写着酒色财气，功名利禄的，潦草的一张纸。</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> node.js </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 桌面应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用规范 | 平时使用的一些小细节</title>
      <link href="/2023/05/18/2-diao-yan-xue-xi-si-kao/linux-shi-yong-gui-fan/"/>
      <url>/2023/05/18/2-diao-yan-xue-xi-si-kao/linux-shi-yong-gui-fan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="linux根目录-和用户目录"><a href="#linux根目录-和用户目录" class="headerlink" title="linux根目录/和用户目录~"></a>linux根目录/和用户目录~</h2><h3 id="linux下根目录-和用户目录-主目录：-的区别"><a href="#linux下根目录-和用户目录-主目录：-的区别" class="headerlink" title="linux下根目录(/)和用户目录(主目录：~)的区别"></a>linux下根目录(/)和用户目录(主目录：~)的区别</h3><p><strong>根目录</strong>：／是树状形式目录的根，只有一个。</p><p><strong>用户目录</strong>：主目录是用户的HOME目录，是在添加用户的时候指定的,对于不同用户，主目录不同。<br>一般情况下表示当前目录，即当开终端的时候，都是在用户名目录下面的，所以这个就是用户名目录里面的东西</p><p>例如，对于用户名为cyj的用户，缺省的HOME目录是/home/cyj，root用户例外，它的缺省HOME目录是/root。</p><h2 id="Linux文件颜色"><a href="#Linux文件颜色" class="headerlink" title="Linux文件颜色"></a>Linux文件颜色</h2><blockquote><p><a href="https://www.cnblogs.com/laojie4321/archive/2012/03/28/2421383.html" target="_blank" rel="noopener">ls下文件的颜色</a></p></blockquote><pre class="line-numbers language-txt"><code class="language-txt">白色：表示普通文件蓝色：表示目录绿色：表示可执行文件红色：表示压缩文件浅蓝色：链接文件红色闪烁：表示链接的文件有问题黄色：表示设备文件灰色：表示其他文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是linux系统约定的默认颜色，可在环境变量中修改。</p><pre class="line-numbers language-linux"><code class="language-linux">在环境变量$LS_COLORS上修改就行，想永久保存就在～/.bashrc里改默认的是：echo $LS_COLORSrs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分号前是字的底色，分号后是字的颜色</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>临近毕业，得整理一下电脑了</title>
      <link href="/2023/05/18/zhi-shi-ju/lin-jin-bi-ye-de-zheng-li-yi-xia-dian-nao-liao/"/>
      <url>/2023/05/18/zhi-shi-ju/lin-jin-bi-ye-de-zheng-li-yi-xia-dian-nao-liao/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="临近毕业，得整理一下电脑了"><a href="#临近毕业，得整理一下电脑了" class="headerlink" title="临近毕业，得整理一下电脑了"></a>临近毕业，得整理一下电脑了</h2><p>时间一久，配置再好的电脑也会被各种文件压的不堪重负！</p><p>手上的这台R7000P和我并肩作战两年半了，程序及其库、论文、代码以及生活中产生的各种文件，将电脑自带的三星PM981A的512G固态和另加的250G三星970EVO PLUS固态给塞的满满当当，正好趁着送盲的时间将这些文件好好整理一番，将部分文件迁移到新电脑中去。<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/%E7%A1%AC%E7%9B%98%E4%BF%A1%E6%81%AF.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑 </tag>
            
            <tag> 整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Vscode上搭建C和C++的环境|实现hello world</title>
      <link href="/2023/05/18/zhi-shi-ju/zai-vscode-shang-da-jian-c-he-c-de-huan-jing/"/>
      <url>/2023/05/18/zhi-shi-ju/zai-vscode-shang-da-jian-c-he-c-de-huan-jing/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-安装教程"><a href="#1-安装教程" class="headerlink" title="1.安装教程"></a>1.安装教程</h2><p><a href="https://www.cnblogs.com/BNTang/articles/16139662.html" target="_blank" rel="noopener">VSCode搭建C与C++语言运行环境 - BNTang - 博客园 (cnblogs.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/610895870" target="_blank" rel="noopener">用vscode优雅配置c/c++环境！ - 知乎 (zhihu.com)</a></p><p>从教程中可以看出，VScode是代码的编辑器，对于C和C++这样的编译型语言来说，还需要编译器才能运行代码。</p><p>目前主流的C/C++编译器，Linux平台有 <code>gcc</code> ，Windows平台有 <code>msvc</code> ，MacOS平台有 <code>clang</code> ，但是还是首选 <code>gcc</code> 作为编译器。</p><p>使用<code>gcc</code>，需要用到<code>MinGW-w64</code> ，全名<code>Minimalist GNU for Windows</code>，是Linux平台上的一套开发工具，移植到Windows平台。这之中，就有我们需要的<code>gcc</code>。</p><h2 id="2-编译器环境配置"><a href="#2-编译器环境配置" class="headerlink" title="2. 编译器环境配置"></a>2. 编译器环境配置</h2><p><a href="https://zhuanlan.zhihu.com/p/76613134" target="_blank" rel="noopener">MinGW-w64安装教程——著名C/C++编译器GCC的Windows版本 - 知乎 (zhihu.com)</a></p><h2 id="3-在vscode下helloworld"><a href="#3-在vscode下helloworld" class="headerlink" title="3. 在vscode下helloworld"></a>3. 在vscode下helloworld</h2><p>在VScode下配置三个配置文件</p><p>[VSCode配置C-C++环境 - NcPhoton - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/ncphoton/p/16950695.html#:~:text=配置VScode插件" target="_blank" rel="noopener">https://www.cnblogs.com/ncphoton/p/16950695.html#:~:text=配置VScode插件</a> 打开VScode安装插件 Chinese 和,C%2FC%2B%2B ，等待安装完毕后重启VScode 切换C%2FC%2B%2B插件至 1.8.4 版本（非必要，不过对于小白来说更方便，此版本运行即自动配置）)</p><p><a href="https://blog.csdn.net/weixin_55644008/article/details/125820835" target="_blank" rel="noopener">(85条消息) VScode（C/C++）无法自动生成launch.json文件解决办法_vscode没有launch.json_戴维南诺的博客-CSDN博客</a></p><p><code>.vscode</code> 文件夹下的 <code>task.json</code> 和 <code>launch.json</code> 用来控制程序的运行和调试</p><p><a href="https://www.cnblogs.com/stu-jyj3621/p/12815080.html" target="_blank" rel="noopener">VSCode中解决终端的中文乱码问题 - 我等着你 - 博客园 (cnblogs.com)</a>VSCode终端其实调用的是cmd.exe</p><p><a href="https://www.bilibili.com/video/BV1Cu411y7vT/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">【教程】VScode中配置C语言/C++运行环境_哔哩哔哩_bilibili</a></p><h2 id="4-C-简单练手项目"><a href="#4-C-简单练手项目" class="headerlink" title="4. C++简单练手项目"></a>4. C++简单练手项目</h2><p><a href="https://zhuanlan.zhihu.com/p/499342875" target="_blank" rel="noopener">C++跑酷小游戏 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> VScode </tag>
            
            <tag> 搭建基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio Code安装和环境配置</title>
      <link href="/2023/05/16/zhi-shi-ju/visual-studio-code-shi-yong-zi-shi/"/>
      <url>/2023/05/16/zhi-shi-ju/visual-studio-code-shi-yong-zi-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="Visual-Studio-Code安装和环境配置"><a href="#Visual-Studio-Code安装和环境配置" class="headerlink" title="Visual Studio Code安装和环境配置"></a>Visual Studio Code安装和环境配置</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h3><p>官网下载</p><p><a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">Download Visual Studio Code - Mac, Linux, Windows</a></p><h3 id="2-修改语言"><a href="#2-修改语言" class="headerlink" title="2. 修改语言"></a>2. 修改语言</h3><p>左下角设置/命令面板/language/Config Display Language/想要设置的语言</p><h3 id="3-快捷键"><a href="#3-快捷键" class="headerlink" title="3. 快捷键"></a>3. 快捷键</h3><p><a href="https://zhuanlan.zhihu.com/p/44044896" target="_blank" rel="noopener">VS Code 的常用快捷键 - 知乎 (zhihu.com)</a></p><h2 id="vscode使用指南"><a href="#vscode使用指南" class="headerlink" title="vscode使用指南"></a>vscode使用指南</h2><p><a href="https://www.php.cn/tool/vscode/441696.html" target="_blank" rel="noopener">23个常用的VSCode快捷键（动图演示）-VSCode-PHP中文网</a></p><h2 id="vscode中开发qt项目"><a href="#vscode中开发qt项目" class="headerlink" title="vscode中开发qt项目"></a>vscode中开发qt项目</h2><p><a href="https://www.bilibili.com/video/BV1ta411s76a/?share_source=copy_web&vd_source=bb69432b1cceeddc88fe392e68d6069b" target="_blank" rel="noopener">Qt使用漂亮的Material组件风格库（基于QtWidgets）_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1TZ4y1t7eq/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">使用VScode开发构建Qt项目_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> Visual Studio Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Visual Studio Code </tag>
            
            <tag> 编程环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows系统探究</title>
      <link href="/2023/05/14/zhi-shi-ju/windows-xi-tong-tan-jiu/"/>
      <url>/2023/05/14/zhi-shi-ju/windows-xi-tong-tan-jiu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-windows系统探究"><a href="#1-windows系统探究" class="headerlink" title="1. windows系统探究"></a>1. windows系统探究</h2><p>相信大多数人使用电脑拥有的第一套操作系统都是Windows系统，可是用了这么久，对这个熟悉又陌生的环境大家都理清楚了这个系统里<code>设置和控制面板的区别</code>、<code>为什么程序都想把自己安装在C盘上</code>、<code>C盘上的那些问价夹都有啥用，哪些该删，哪些是绝对不能删的</code>、<code>安装一些重要程序的时候为什么要设置环境变量</code>、<code>Windows自带的程序都有哪些</code>了吗？</p><p>相信很多人都和作者一样，用了这么久的电脑，对于电脑上文件如何管理、程序如何运行都是现查现用，需要做什么、出现了什么问题直接找教程，直接方便快捷；</p><p>可是作者这边还是想说，我们真的有必要了解Windows操作系统的运行逻辑，那可能有人要问了，平时这样够用了啊，有必要了解这么多吗？其实，有必要，下次再清除C盘的文件的时候，你就知道哪些该删哪些不该删了，安装的程序哪些配套的文件夹放在哪个位置合适也都了然于胸；</p><p>对于天天在用的工具，大家肯定有一探究竟的欲望，只是对于非计算机科班的同学来说这确实有点困难，能不能把这个系统运行的逻辑简单清晰的呈现出来呢，因为在作者学习计算机的时候，就没有遇到过这样的科普知识，应该是有这样的分享内容的，只是作者在偷懒的时间里也没有接触到，今天，自己也做一回知识的传播者，用更总体和简单的方式将如今人人必用的设备运行机制捋一捋。</p><h3 id="控制面板和设置"><a href="#控制面板和设置" class="headerlink" title="控制面板和设置"></a>控制面板和设置</h3><p>为什么Windows 10同时配备『设置』和『控制面板』两套控制系统？他们俩不是分开。而是要合并的，可能因为底层代码等原因没有完全分开。粗略看了看，设置还是界面但最终控制权还在控制面板。也就像是设置它就是一个壳。</p><p>他们俩不是分开。而是要合并的，可能因为底层代码等原因没有完全分开。我粗略看了看，设置还是界面但最终控制权还在控制面板。也就像是设置它就是一个壳。</p><h3 id="C盘文件"><a href="#C盘文件" class="headerlink" title="C盘文件"></a>C盘文件</h3><p><strong>1、用户(User) 或者 Documents and Settings</strong><br>Windows7中的“用户”文件夹其实就是XP中的Documents and Settings文件夹，这里储存了用户的设置，包括用户文档，上网浏览信息，配置文件等数据。可以按需清理不要的文件，如用户自己存的：图片、音乐、视频等。<br><strong>2、Downloads</strong><br>这通常是下载软件的默认下载路径，建议修改软件设置改到其他硬盘分区。文件夹里面的数据都可以删除，重要的下载资源记得备份。<br><strong>3、Drivers 或者 MyDrivers</strong><br>部分驱动程序的文件夹。别删除！<br><strong>4、Favorites</strong><br>收藏夹。里面的内容可以清空删除，不过你电脑的收藏夹就空了！<br><strong>5、Program Files</strong><br>应用程序文件夹，一般软件默认都安装在这里，也有一些系统自带的应用程序。文件内的内容不要删除，如果想卸载某个软件，在控制面板里卸载或者使用软件管家卸载，不要直接删除安装目录。<br><strong>6、Program Files（X86）</strong><br>在Windows 7系统中，64位用户会多出一个Program Files（X86）文件夹，这是系统中32位软件的安装目录。<br><strong>7、Program Data</strong><br>Windows 7 的系统文件夹，放置程序的使用数据，设置等文件，不建议删除。<br><strong>8、Windows</strong><br>存放操作系统的主要文件，<strong>非常重要，不能删除，误删将造成系统奔溃。</strong><br><strong>9、Temp</strong><br>存放系统或者其他软件的临时文件，需经常清理。</p><h2 id="2-C盘下面用户文件夹的各种隐藏文件夹"><a href="#2-C盘下面用户文件夹的各种隐藏文件夹" class="headerlink" title="2. C盘下面用户文件夹的各种隐藏文件夹"></a>2. C盘下面用户文件夹的各种隐藏文件夹</h2><p>如<code>.m2</code>、<code>.conda</code>、<code>.matplotlib</code>等文件夹，这些问价夹是软件的本地仓库，如<code>.m2</code>文件夹是Maven的本地仓库，本地仓库是远程仓库的一个缓冲和子集，当你构建Maven项目的时候，首先会从本地仓库查找资源，如果没有，那么Maven会从远程仓库下载到你本地仓库。这样在你下次使用的时候就不需要从远程下载了。</p><h2 id="3-环境变量"><a href="#3-环境变量" class="headerlink" title="3. 环境变量"></a>3. 环境变量</h2><p>上面所说的 PATH 变量其实就是环境变量，和他的名字一样，环境变量是<strong>描述环境的变量</strong>，是指在操作系统中用来指定操作系统运行环境的变量。它包含了一个或者多个应用程序所将使用到的信息。</p><p>例如 Windows 和 DOS 操作系统中的 PATH 环境变量，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到 PATH 中指定的路径去找。用户通过设置环境变量，来更好的运行进程。</p><p><a href="https://zhuanlan.zhihu.com/p/276634464" target="_blank" rel="noopener">什么是环境变量？ - 知乎 (zhihu.com)</a></p><h2 id="4-windows系统间通信和传输文件"><a href="#4-windows系统间通信和传输文件" class="headerlink" title="4. windows系统间通信和传输文件"></a>4. windows系统间通信和传输文件</h2><p>笔记本和台式机传输文件通过聊天软件太麻烦了，硬盘同理，有必要找一款连接工具传输设备信息，而笔记本使用的是Windows10家庭版的操作系统，无法建立微软自带的远程桌面连接。那只能求助于连接传输工具了，暂时先看中了<code>易我电脑迁移</code><a href="https://www.bilibili.com/read/cv22619246/" target="_blank" rel="noopener">两台电脑之间如何传文件？快来学习这几种方法 - 哔哩哔哩 (bilibili.com)</a>,安装破解发现使用<code>Keygen</code>注册机已经无法破解，不能离线注册，只能在线注册机也无法使用了</p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows系统 </tag>
            
            <tag> 电脑 </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写技术文档的的注意点 | 方法记录</title>
      <link href="/2023/05/14/zhi-shi-ju/xie-ji-zhu-wen-dang-de-zhu-yi-fang-fa-ru-he-rang-ren-you-xing-qu-du-xia-qu/"/>
      <url>/2023/05/14/zhi-shi-ju/xie-ji-zhu-wen-dang-de-zhu-yi-fang-fa-ru-he-rang-ren-you-xing-qu-du-xia-qu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="写技术文档的的注意方法，如何让人有兴趣读下去"><a href="#写技术文档的的注意方法，如何让人有兴趣读下去" class="headerlink" title="写技术文档的的注意方法，如何让人有兴趣读下去"></a>写技术文档的的注意方法，如何让人有兴趣读下去</h2><p>过去一段时间，写的技术博客总结也挺多了，在书写上有些问题还是需要总结和注意的：</p><ol><li>很多文章还是停留在对相关内容的记流水账上，这么写的原因是便于自己回头看，从概念、应用、总结、网址的方式来铺陈，这种方法是否喜闻乐见还需要多看看看大佬的写作风格。</li><li>一篇文章的内容量把握度不够，一篇博客用多久的时间阅读完也是一个重要方面。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 内容 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
            <tag> 文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录的一些好网站 | 参观学习！</title>
      <link href="/2023/05/14/zhi-shi-ju/bo-ke-wang-zhan-di-zhi/"/>
      <url>/2023/05/14/zhi-shi-ju/bo-ke-wang-zhan-di-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-网站推荐"><a href="#1-网站推荐" class="headerlink" title="1. 网站推荐"></a>1. 网站推荐</h2><p><a href="https://wpxz.org/" target="_blank" rel="noopener">网盘小站-阿里云盘资源共享第一站 (wpxz.org)</a></p><p><a href="https://bbs.z7zz.cn/links" target="_blank" rel="noopener">网址导航 – 竹子综合 (z7zz.cn)</a></p><p><a href="https://rainchan.win/link/" target="_blank" rel="noopener">友情链接 | RainChan的小博客</a></p><p><a href="https://aimerneige.com/en/friends/" target="_blank" rel="noopener">Friends 🧑‍🤝‍🧑 | Aimer’s Blog (aimerneige.com)</a></p><p><a href="https://www.xuthus.cc/" target="_blank" rel="noopener">我的学习分享 (xuthus.cc)</a></p><p><a href="https://blog.fissssssh.com/posts/recommended-software/" target="_blank" rel="noopener">软件推荐 | fissssssh</a>、</p><p><a href="https://ipaper.today/" target="_blank" rel="noopener">进步屋 (ipaper.today)</a></p><p><a href="https://geekhe-p.github.io/" target="_blank" rel="noopener">🔨のblog (geekhe-p.github.io)</a></p><p><a href="https://convertio.co/zh/" target="_blank" rel="noopener">Convertio — 文件转换器</a></p><p><a href="https://www.holk.tech/2019/12/06/VSCode编写C-C-的基础入门教程/" target="_blank" rel="noopener">win下使用VSCode编写C/C++的基础入门教程 - holk’s blog</a></p><p><a href="https://blog.dreace.top/" target="_blank" rel="noopener">DreaceのBlog</a></p><p><a href="https://blog.dreace.top/2022/Calling-C-C-Shared-Library-Libraries-in-Python/" target="_blank" rel="noopener">在 Python 中调用 C/C++ 共享库 - DreaceのBlog</a></p><p><a href="https://ying1ying.github.io/" target="_blank" rel="noopener">Hexo (ying1ying.github.io)</a></p><p><a href="https://hanbings.io/" target="_blank" rel="noopener">Hanbings – Cat On Cloud</a></p><p><a href="https://blog.krysztal.dev/2021/08/02/在树莓派上编译OpenCV/" target="_blank" rel="noopener">在树莓派上编译 OpenCV - Krysztal的小柜子</a></p><p><a href="http://blog.dazecake.moe/2022/03/28/使用VSCode和sdcc进行现代化单片机开发/" target="_blank" rel="noopener">使用VSCode和sdcc进行现代化单片机开发 | DazeCake的工坊</a></p><p><a href="https://www.hackerchai.com/" target="_blank" rel="noopener">Hackerchai</a></p><p><a href="https://lylelove.top/2022/08/14/我用过的笔记软件汇总/" target="_blank" rel="noopener">我用过的笔记软件汇总 – 竟何 (lylelove.top)</a></p><p><a href="https://widcard.win/" target="_blank" rel="noopener">widcardw</a></p><p><a href="https://matheart.github.io/matheart-note/" target="_blank" rel="noopener">Welcome to Matheart’s Note ! - Matheart’s Note</a></p><p>** <a href="https://newabug.top/" target="_blank" rel="noopener">UnLessのBlog - 个人练习Bug时长两年半 (newabug.top)</a></p><p><a href="https://zxblog.eu.org/" target="_blank" rel="noopener">知行博客 - zxblog.eu.org | 电脑浏览,体验拉满</a></p><p><a href="https://zxblog.eu.org/posts/97f1/" target="_blank" rel="noopener">变相裁员的8种手段，提前了解清楚，这5招教你如何应对！ | 知行博客 (zxblog.eu.org)</a></p><p><a href="https://www.auriel.top/" target="_blank" rel="noopener">Aurielの主页</a></p><p><a href="https://www.cxl2020mc.top/" target="_blank" rel="noopener">陈鑫磊的博客 (cxl2020mc.top)</a></p><p><a href="https://www.cxl2020mc.top/post/更新Hexo及插件版本/" target="_blank" rel="noopener">更新Hexo及插件版本 | 陈鑫磊的博客 (cxl2020mc.top)</a></p><p><a href="https://www.longtao.fun/" target="_blank" rel="noopener">LongTao - LongTao</a></p><p><a href="https://zhangshuqiao.org/" target="_blank" rel="noopener">米米的博客 (zhangshuqiao.org)</a></p><p><a href="https://zhangshuqiao.org/friends/" target="_blank" rel="noopener">朋友们 | 米米的博客 (zhangshuqiao.org)</a></p><p><a href="https://geminiplanet.cn/" target="_blank" rel="noopener">GeminiPlanet | Hello，My Little Prince !</a></p><p><a href="https://kenvix.com/categories/树莓派/" target="_blank" rel="noopener">类别: 树莓派 | Kenvix’s Blog</a></p><p><a href="https://kenvix.com/post/rpi-monitor/" target="_blank" rel="noopener">使用树莓派实现定时拍照监控并发送邮件到邮箱 | Kenvix’s Blog</a></p><p><a href="https://hexo.io/zh-tw/" target="_blank" rel="noopener">Hexo</a></p><p><a href="https://longtao.fun/metaverse/cpu/" target="_blank" rel="noopener">CPU简介 | LongTao</a></p><p><a href="https://longtao.fun/metaverse/computerprinciples/" target="_blank" rel="noopener">计算机基本组成 | LongTao</a></p><p><a href="https://www.rickylss.site/others/2022/03/18/about-interview/#" target="_blank" rel="noopener">快回来哦~~ (rickylss.site)</a></p><p><a href="https://www.golangroadmap.com/" target="_blank" rel="noopener">GOLANG ROADMAP</a></p><p><a href="https://jianger.space/" target="_blank" rel="noopener">Jianger’s Blog</a></p><p><a href="https://jianger.space/java-collections-part-two/" target="_blank" rel="noopener">读懂Java集合（二） | Jianger’s Blog</a></p><p><a href="https://www.sitstars.com/archives/121/" target="_blank" rel="noopener">打算捡起博客 - Shu’s Garden (sitstars.com)</a></p><p><a href="https://www.addesp.com/archives/5603" target="_blank" rel="noopener">为什么需要 “API 网关”？ | 寂静花园 (addesp.com)</a></p><p><a href="https://www.jdeal.cn/409.html" target="_blank" rel="noopener">改装一台旧笔记本电脑 - Jdeal | Life is like a Design.</a></p><p>** <a href="https://www.iszy.cc/links/" target="_blank" rel="noopener">友情链接 | 随遇而安 (iszy.cc)</a></p><p>** <a href="https://pengrl.com/link/" target="_blank" rel="noopener">友链 | yoko blog (pengrl.com)</a></p><p><a href="https://xargin.com/complete-deah-for-middleplatform/" target="_blank" rel="noopener">中台 2023 (xargin.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/138470455" target="_blank" rel="noopener">什么是中台？看完你就知道了？ - 知乎 (zhihu.com)</a></p><p><a href="https://xargin.com/diagram-tools-intro/" target="_blank" rel="noopener">那些画图工具们 (xargin.com)</a></p><p>** <a href="https://xargin.com/notes-on-logic-writing/" target="_blank" rel="noopener">《写作的逻辑》简单读书笔记 (xargin.com)</a></p><p><a href="https://xargin.com/blog-upgraded/" target="_blank" rel="noopener">blog 升级了。。 (xargin.com)</a></p><p><a href="https://xargin.com/about-ofo/" target="_blank" rel="noopener">关于 ofo (xargin.com)</a></p><p><a href="https://xargin.com/rookie-programmer-faults/" target="_blank" rel="noopener">初级程序员常犯错误一览 (xargin.com)</a></p><p><a href="https://xargin.com/about-microservice-1/" target="_blank" rel="noopener">漫谈服务化、微服务(一) (xargin.com)</a></p><p><a href="https://coolshell.cn/" target="_blank" rel="noopener">酷壳 – CoolShell.cn</a></p><p><a href="https://coolshell.cn/articles/20977.html" target="_blank" rel="noopener">程序员如何把控自己的职业 | 酷 壳 - CoolShell</a></p><p><a href="https://coolshell.cn/articles/20793.html" target="_blank" rel="noopener">与程序员相关的CPU缓存知识 | 酷 壳 - CoolShell</a></p><p><a href="https://coolshell.cn/page/4" target="_blank" rel="noopener">酷壳 – CoolShell.cn - Part 4</a></p><p><a href="https://coolshell.cn/articles/19840.html" target="_blank" rel="noopener">HTTP的前世今生 | 酷 壳 - CoolShell</a></p><p><a href="https://blog.codingnow.com/2023/05/debug.html#more" target="_blank" rel="noopener">云风的 BLOG: 记一次艰难的 debug 历程 (codingnow.com)</a></p><p><strong><strong><strong><strong><strong>****</strong></strong></strong></strong></strong><a href="https://pengrl.com/link/" target="_blank" rel="noopener">友链 | yoko blog (pengrl.com)</a></p><h2 id="2-什么是程序员的业务能力"><a href="#2-什么是程序员的业务能力" class="headerlink" title="2. 什么是程序员的业务能力"></a>2. 什么是程序员的业务能力</h2><p>开发的程序总是服务于某种业务：供应链、支付、金融、物流、交易、电商，对业务的理解就是业务能力。而技术能力是服务于业务的，业务能力是一种推理能力，是长期的，而技术是在不断更新换代的。</p><p>真正牛逼的程序员是写代码/架构代码/设计的脉络的，项目和管理都是可以外包出去的；</p><p><a href="https://xargin.com/value-of-platform/" target="_blank" rel="noopener">平台到底有什么价值 (xargin.com)</a></p><p><a href="https://xargin.com/how-to-learn/" target="_blank" rel="noopener">工程师应该怎么学习 (xargin.com)</a></p><p><a href="https://coolshell.cn/articles/21672.html" target="_blank" rel="noopener">我做系统架构的一些原则 | 酷 壳 - CoolShell</a></p><h2 id="3-能力"><a href="#3-能力" class="headerlink" title="3. 能力"></a>3. 能力</h2><p>人这一辈子，最重要的是能把路越走越宽。对于工程师来说，能够锻炼软技能的场合其实不是很多，但也不代表完全没有。即使没有也可以自己创造机会，例如组内、组间、部门内的技术分享都是不错的机会。</p><p>更大规模的技术分享可能因为主办方“势力眼”，在你级别不高或者影响力不大的时候，不提供给你这样的机会，但是作为一个向上的人，迟早会有走到这一步的一天。你所要做的是提前做好准备，在那一天到来的时候，在聚光灯下旁征博引，谈笑风生。</p><p><a href="https://coolshell.cn/articles/19085.html" target="_blank" rel="noopener">谈谈我的“三观” | 酷 壳 - CoolShell</a></p><h2 id="4-写作技巧"><a href="#4-写作技巧" class="headerlink" title="4. 写作技巧"></a>4. 写作技巧</h2><p>** *<a href="https://xargin.com/every-arch-will-finally-become-shit/" target="_blank" rel="noopener">架构的腐化是必然的 (xargin.com)</a></p><p><a href="https://coolshell.cn/articles/21589.html" target="_blank" rel="noopener">如何做一个有质量的技术分享 | 酷 壳 - CoolShell</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>儒家思想| 是不是糟粕？</title>
      <link href="/2023/05/13/zhi-shi-ju/ru-jia-wei-shi-me-shi-zao-po/"/>
      <url>/2023/05/13/zhi-shi-ju/ru-jia-wei-shi-me-shi-zao-po/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><blockquote><p>作者：solar yy<br>链接：<a href="https://www.zhihu.com/question/339769014/answer/2616481087" target="_blank" rel="noopener">https://www.zhihu.com/question/339769014/answer/2616481087</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><p>我看了一圈，说白了，你们可能所有人，用各种角度喷儒家，但其实都没有意识到他们真正不适合时代的点在哪里。</p><p>也正因为如此，其实<a href="https://www.zhihu.com/search?q=儒家思想&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">儒家思想</a>一直都盘根错节存在于我们的思维中，我们现在很多行为，会不自觉的体现为儒家的方式。你可以感受他，可以厌弃他，但就是无法离开他。</p><p>世界上一切政治思想，说白了，就是怎么凝聚更多的人。</p><p>具体方法，就要在统治者和被统治者之间，构筑一个中间阶层，用什么方法把这三者串在国家/社会这一根绳子上，用这根绳子，再去吊，啊不对，去凝聚更多的人。谁能凝聚更多的人，谁能更久让这一串东西不散，谁就是更好的政治制度。</p><p>而儒家的用的办法归纳归纳，就是四个字：家国一体。这词儿听起来瞬间就星辰大海了吧？</p><p>但如果你真的把这四个字仔细看呢？</p><p>国就是扩大的家，家就是缩小的国。</p><p>说难听点，就是处理家庭事务，泛政治化。处理国家事务，又家长化。</p><p>国君就是爷爷，掌握最高的家族地位。官僚就是爸爸，负责具体的操作。百姓就是孙子，好好读书努力工作，孝顺长辈。</p><p>好了经过这一番打磨，一切都通了。</p><p>既然是家庭，爷爷当然是要宠爱孙子的，谁欺负咱孙子，爷爷可就要生气了。</p><p>这就是仁。</p><p>所谓的孔子的中心思想是个仁，仁者爱人balbalbal，但你有没有想过，仁这玩意儿永远是单向的。</p><p>君王可以仁百姓，你见过百姓仁君王么？所谓的为富不仁，富你才可以仁或者不仁，你是穷人你特么仁谁去？</p><p>所以嘛，无论怎么宠，爷爷永远是爷爷，孙子永远是孙子。</p><p>孙子哪天惹爷爷不高兴了，都不劳爷爷动手，老爹第一个跳出来把孙子揍个半死。</p><p>让你长长记性，懂这个家里的规矩，免得你以后犯更大错误，这也是仁。</p><p>所以雷霆雨露，倶是天恩。我打你也是为你好。</p><p>熟悉吗？</p><p>插播一下，这里头有一个小bug，如果是爸爸欺负孙子呢？</p><p>所以这个系统有个小补丁。</p><p>首先第一，孙子永远是孙子。所以虽然爸爸欺负孙子有错在先，但如果儿子反抗爸爸，也是孙子的错。</p><p>其次，别人欺负孙子呢，爷爷也会心疼。</p><p>所以正确做法是，等爷爷发现爸爸的恶行，让爷爷惩罚爸爸。（至于孙子能不能主动去告爸爸的状呢，这个要看具体情况，比如朱元璋是觉得是ok的，乾隆是觉得不行的，不可一概而论）</p><p>至于孙子亲自动手揍爸爸，那是万万不行的。</p><p>为什么呢？这不言而喻嘛！在非洲，孩子听爸妈的话也是天经地义吧？在美国，也没听说过孩子可以揍爷爷的吧！</p><p>一旦用家庭关系捆绑了<a href="https://www.zhihu.com/search?q=社会组织关系&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">社会组织关系</a>，你就没法再在政治角度深入讨论了。</p><p>因为只要把政治身份和家庭身份一绑定，就有天然的正义性了。难道你回去和你爸说平等？和你爷爷签契约？你还是人么！</p><p><strong>这也就是为什么孝在中国，是仅次于忠的第二大伟大品格。</strong></p><p>一旦谁是爷爷谁是爸爸谁是孙子定下来，后面的也就好处理了。</p><p>每个人都在各自的层级守本分就可以。</p><p>如果你和你爸爸有矛盾，不用说，先治你一个目无尊长之罪。</p><p>但如果你和你二表弟有矛盾呢？</p><p>肯定是这一套，好好好，大家都是亲戚，抬头不见低头见，打断骨头连着筋balbalbalbalblabla。</p><p>你非要纠结谁对谁错，那大多数时候，我只能告诉你，谁对谁错，其实是随着不同情况变化的。</p><p>比如，谁更得爷爷的欢心啊，谁更能在爷爷面前哭鼻子啊，谁等等等等。</p><p>如果你觉得受了委屈，把小鼻涕一抹，生气得大喊：爷爷不公平，爷爷偏心，爷爷坏！</p><p>那好了，甭管谁对谁错，爸爸的一顿板子肯定是朝你招呼过来了。</p><p>说白了，爷爷不在乎谁对谁错，爷爷在乎的是一大家子在爷爷的领导下和和美美，这就是所谓的和谐。</p><p>所以儒家的和谐，是有圈层的。二环之内，形成和谐。三环之内，和谐。。。以此类推。</p><p>但二环和三环之间，是各尽本分，各不打扰的。</p><p>这个世界和涟漪一样一层层扩散，互相影响，又层次分明。</p><p>但如果你想二环和三环之内和谐，那对不起，我就得把你和谐了。。。</p><p>然后这一层层的涟漪，又可以拆分成很多细项，比如爸爸对爷爷应该怎么做，儿子对爸爸应该怎么做。对大伯和二舅应该怎么做，弟弟对哥哥应该怎么做。。。。都是有特殊的讲究来约束的。儒家穷尽心里搞出那么多纷繁复杂的仪轨，就是为了确立在不同关系下的双方的处理事情的原则，这就是所谓的礼。</p><p>你从生到死，从吃饭到工作，无不在这一套涟漪之中轻微震荡。</p><p>这一切的一切，无非就是四个字：长幼尊卑。。。然后在这个基础上建立起全套秩序。</p><p>爷爷为什么不在乎谁对谁错呢？</p><p>因为很多事情没法往深里想，你假如非要搞清楚谁对谁错，很容易想到这一层：</p><p>爷爷为什么不公平？爷爷是不是也不是永远正确的？</p><p>然后再进一步，不正确的爷爷还有资格当爷爷么？</p><p>然后再进一步，为什么要爷爷来判断谁对谁错？我特么不要爷爷不也能过得好好的？。。。。</p><p>所以给我趁早打！住！</p><p>所谓的家丑不可外扬，也同样是这个逻辑下的产物。</p><p>爷爷和爸爸多辛苦啊，就算他做错了，那也是爷爷和爸爸啊！！你怎么忍心隔壁王叔叔嘲笑你爷爷，殴打你爸爸呢？？</p><p>爸爸怎么打你，也是你爸爸啊！！隔壁王叔叔怎么宠你，那也是隔壁啊！！</p><p>我顺嘴再插播一下，到这里你也很容易发现，为什么传统中国，是没有什么<a href="https://www.zhihu.com/search?q=法治精神&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">法治精神</a>的。</p><p>因为一旦走上爷爷孙子这条路，很多事情就不容易弄得很清楚。</p><p>很多人会说，不对啊，大秦就是法治社会啊！有法必依，执法必严啊~~</p><p>我只能爱怜地抚摸着你的小脑袋，对你说。。。啊呸！</p><p>我是皇帝，我出台一条法令，明天开始大家都跳着走，谁迈着步出门谁砍头。</p><p><a href="https://www.zhihu.com/search?q=王二狗&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">王二狗</a>就是不服出门迈腿，被逮着当场就咔嚓了。你看看这不是活该么，法律早就说了要跳着走啊。这就叫<a href="https://www.zhihu.com/search?q=执法必严&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">执法必严</a>。</p><p>这是法制社会？这是人间地狱好不好啊！！！！</p><p>这就是为什么大秦统一后没多久就崩了。把国家拧成一股绳爆发出巨大战斗力，儒家确实不如法家，但说维护稳定长治久安，那法家这一套，给儒家提鞋都不配。</p><p>说白了，法家到死都没搞出中间阶层来。法家搞的是1+0.5+n的模式。</p><p>把皇帝的权威打造到近乎于神，然后自己成为皇帝和天下之间的那0.5。</p><p>整个国家变成一台巨大的榨汁机，由0.5摁下电源键，就源源不断向那个至高无上的1提供养料。</p><p>剩下什么王公贵族<a href="https://www.zhihu.com/search?q=百官群臣&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">百官群臣</a>，在这个体系下，谁也没有尊严，谁也没有安全感，1.5下命令，你照着做就行了。无论你顺从还是违逆，榨汁机都一直运转到榨干为止。1.5让你们明天跳着出门，就算你贵为王子，迈步都得死。</p><p>然而你这个0.5的一切，完完全全仰仗前面那个1。</p><p>1在的时候你呼风唤雨得罪光了天下所有的n，那个1一倒下，乌泱泱的n还不弄死你？</p><p>这也就是为什么法家大佬基本都没有好下场。就因为1+0.5+n的模式，随着前头那个1一死，势必要大乱一次。</p><p>而皇帝，总要死的。</p><p>所以儒家高明就高明在这，他们通过家国一体的方式，打造出了一个稳定的中间阶层。</p><p>爷爷你就高高在上，下面的事儿由爸爸来做就行啦。虽然有的时候爸爸也胡闹，但没有了爸爸，爷爷自己不得累死？</p><p>这就编织了一个绵绵密密的囚笼，貌似出卖了自己，其实也捆住了皇帝。最终，把爷爷和孙子，永远的隔开。</p><p>虽然从春秋，到明清，君权不断被加强，但反过来你也要看到，君王固然可以轻易一言就废黜甚至杀掉某个士大夫的个体，但士大夫这个群体，至少在皇权社会之下，再也休想根除了。</p><p>要看法家的去这里</p><p>诸子百家、法家是真正意义上最先进的吗？ - solar yy的回答 - 知乎 <a href="https://www.zhihu.com/question/446322758/answer/2671982416" target="_blank" rel="noopener">https://www.zhihu.com/question/446322758/answer/2671982416</a></p><p>严格来说，其实完全离开法家谈后世的儒家是不合适的。这俩注定是要合流共谋的。但这里不展开，废话已经够多了。</p><p>到这里，你也可以发现，儒家既然选择了维持稳定这条路，就注定了，在做大蛋糕方面，他们是不擅长的。</p><p>因为相对于孙子吃不饱，爷爷其实更怕孙子翅膀硬了不把自己当爷爷。</p><p>而我们所知道的，所有通往新世界的路，什么<a href="https://www.zhihu.com/search?q=大航海时代&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">大航海时代</a>啊，科技革命啊什么什么，注定是一群野孩子的探险。</p><p>你问苹果为什么往下落，全知全能的爷爷没办法告诉你为什么。</p><p>身处波涛汹涌的大西洋该往哪个方向航行，至公至善的爷爷的最高指示也鞭长莫及。</p><p><a href="https://www.zhihu.com/search?q=新世界&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">新世界</a>有什么好？咱就窝这里，挺好。 </p><p>在爷爷身边什么都有。你为什么还想着去外面？</p><p>外面真那么好？你看看去新世界一路上，死多少人。外头多可怕啊。。</p><p>我们国家什么没有？！你要去稀罕洋鬼子的东西~~？？？！！</p><p>熟悉吗？</p><p>因为当你物质不再依赖爷爷的时候，精神很快也就不再依赖爷爷了。。。物质和精神都独立的你，还需要爷爷么？</p><p>在爷爷的温暖的臂弯保护下，大家安安心心过小日子吧。</p><p>所以，<strong>俭，是再次于忠孝的品德</strong>。</p><p>因为要预防蛋糕不够大，分蛋糕的人又特别多啊。所以无论是爷爷还是孙子，都要节俭。都要省着用。</p><p>当然爷爷可以多吃点，孙子就该少吃点。</p><p>至于如果你问为什么爷爷不能和孙子吃的一样，甚至比孙子吃的更少，我看你这孙子三天没打，又皮痒了是不是？</p><p>所以看到了这里，基本儒家这一套的逻辑也就完全捣鼓完了。</p><p>这一套在维护稳定上，有无可比拟的效果。</p><p>因为他是把一起切关系都捆绑在家庭这个人类历史上最古老的组织上。</p><p>很多地方还在用地缘，用血缘，用神棍组织个万把来人就了不起的时候，儒家早就用模拟家庭的方式，管理起百万甚至千万人的生产生活了。</p><p>但与此同时，他的缺点也就伴生着而来了。</p><p>他看亲疏，而不看是非。</p><p>他能维护，但不能开拓。</p><p>这两者相辅相成。</p><p>正因为他看亲疏，所以不能开拓。</p><p>也因为他不能开拓，所以更加肆无忌惮的只看亲疏。</p><p>所以啊，你别看什么天子一言九鼎君无戏言啊。而哪些资本主义奸商恨不得每一个毛孔都散发着狡诈的市侩气质。</p><p>但事实上，资本主义的政府信用远远远远高于靠<a href="https://www.zhihu.com/search?q=仁义礼智信&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">仁义礼智信</a>武装起来的古代中国政府。</p><p>道理也很简单。</p><p>你爸爸妈妈给你保管压岁钱，需要征得你同意么？</p><p>你跟他压根就不是对等关系，他犯得着和你讲信用？</p><p>我对你早上一套晚上换一套，怎么啦？你不服么？你和你爸妈瞪什么眼睛？？小崽子你想造反啊！？</p><p>我这一切都是为！你！好！！！！</p><p>熟悉吗？</p><p>再插播一下，慈禧那个宁与友邦，不予家奴。现代人听得要气炸肚子。</p><p>但其实在慈禧那个时代，其实很容易理解啊。</p><p>我慈禧，和英国女王，<a href="https://www.zhihu.com/search?q=日本天皇&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">日本天皇</a>那一拨是一辈的。都是爷爷奶奶。</p><p>爷爷们说话，哪有你们孙子插嘴的份儿？</p><p>你们孙子要做的，就是咬咬牙，把<a href="https://www.zhihu.com/search?q=老佛爷&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">老佛爷</a>的面子撑起来，别让老佛爷在别的爷爷奶奶面前丢了大家族脸。</p><p>老佛爷的脸面丢了，大清的脸面也就丢了，大清的脸丢到外国去了！！</p><p>你们以后在洋鬼子面前再也抬不起头来了！！！</p><p>熟悉吗？</p><p>你和小朋友打架，给老师叫家长。你爸见了老师第一句话就是，这小子我回去好好管教！</p><p>甭管你有理没理，先打一顿再说。</p><p>究其原因，无非就是你在老师面前丢爸爸的脸了！</p><p>熟悉嘛？</p><p>都是一个逻辑下的产物嘛。。。两千年了哪有什么新鲜事。</p><p>但说一千道一万，儒家那一套，其实藏着两个小bug。</p><p>第一，凭什么你是爷爷，咱是孙子？而且世世代代都是孙子？</p><p>只要稍微往深了想一想，历代陈胜吴广们，都能站在这一层。</p><p>但这一层的厉害之处就在于，哪个孙子掀翻了爷爷，他也就成为了新的爷爷。<br>这个体系，是绝不会动摇的。</p><p>第二个，就触及核心了。凭什么咱之间，是爷爷和孙子的关系？</p><p>爷爷和孙子，是永远单向的关系。</p><p>所以说什么<a href="https://www.zhihu.com/search?q=君轻民贵&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a2616481087}" target="_blank" rel="noopener">君轻民贵</a>，什么仁者爱人，是现代民本思想，就是瞎扯淡。</p><p>现代社会的逻辑，恰恰不和你玩这套。</p><p>我既不贵，也不贱。你不是我爷爷，我也不是你爷爷。</p><p>咱各论各的的。</p><p>为什么有人老爱黑儒家呢？因为我们我们现在活在一个全新的逻辑组织下的社会。</p><p>人类进入工业社会以后，以家庭为单位的社会组织就开始迅速解体。</p><p>在农业化时代，任何人离开宗族，很可能是无法独立生存的。所以逐出族谱，是天大的惩戒。</p><p>在这个基础上，每个人不需要也不允许有独立的生活、财产、意志。大家族负责运营一切。</p><p>但在工业化时代，每个人都以个体和社会缔结契约。小镇少年背上背包到城市，也能扎下根来（房价和落户问题不在这里讨论）。</p><p>哪怕是996的打工仔，只要关上出租房的门，自己就是生活的主宰。</p><p>在农业化时代，耕作的经验是最重要的知识。所以一个宗族的老人见识的事情多，就能在面对比如灾年啊什么什么的情况下，比年轻的愣头青拥有更多的应对策略。</p><p>而在工业化时代，后人必胜前人，这几乎是不言而喻的事情。年轻人一定会比老人有更多的见识，创造更多的财富，那自然而然的，会要求更多的话语权。</p><p>说到这里，你可能也就明白了，其他答案说的，儒家不能发展科技啊，不会打胜仗啊，不尊重女性啊blabalblabla啊，也许都对，又也许都不对。</p><p><strong>儒家真正的问题就在于，工业社会把儒家家族制这个根基给刨了。</strong></p><p>在这个基础上，传统社会爷爷打下江山，让爸爸来操盘管孙子的政治逻辑也面临着天翻地覆的变化。</p><p>现在的政治逻辑是刚好反过来的</p><p>国家是由人民组成的，每一个人民，都是这个国家的主人。</p><p>为了更好的实现全国人民的福祉，人民才组织成立了政府。</p><p>政府是经过人民的授权，和人民签订契约的组织。</p><p>政府是国家的运营者，而不是所有者。</p><p>政府存在的意义，就是最大程度为本国人民谋福利。</p><p>好了不展开了。</p><p>接下来是娱乐时间。</p><p>给大家看个快乐的图，在我其他答案下看过这个的别嫌烦。</p><p>什么叫传统和现代的碰撞，大家体会下。</p><p><img src="https://pic2.zhimg.com/80/v2-6986a8723e79b6bedb233d290c9b8009_720w.webp" alt="img"></p><p>按照我上面的理论，很容易推出，一个企业里头，董事长是爷爷，部门经理是爸爸，你们呢，还是孙子。</p><p>说到这里你也就明白了，你为什么越来越不耐烦领导的颐指气使啊，父母的追逼啊，亲戚的唠叨啊，其实都源自于，我们已经是工业时代的人，而农业时代家族思维的解体需要一个漫长的过程。</p><p>所以到现在，你明白为什么儒家会被各种无脑黑了吗？</p><p><strong>这哪里是黑儒家，而是年轻人意识到，他们可以，而且必然可以比老一辈的人拥有更多知识，创造更多财富后，向老一辈要话语权啊<del>~</del></strong></p><p>如果你还想不明白儒家为什么会被各种黑，再回去看看上面那张图。</p><p>你如果去美国和一个苹果公司员工说，乔布斯是咱的老祖宗，蒂姆库克是我们的亲爷爷<del>~</del>估计太平洋那头的海螺听到都直摇头。。。</p><p>你是旧时代的残党，新时代没有能承载你的船。</p><p>但你挡着新时代船的道了。。。</p><p>回到之前的话题，我们如此近乎敏感的要求所谓的家丑不可外扬，</p><p>爷爷和爸爸多辛苦啊，就算他做错了，那也是爷爷和爸爸啊！！你怎么忍心隔壁王叔叔嘲笑你爷爷，殴打你爸爸呢？？</p><p>爸爸怎么打你，也是你爸爸啊！！隔壁王叔叔怎么宠你，那也是隔壁啊！！</p><p>你就该挺直了了腰杆和他们说，我不是他爸爸，他也不是我爸爸，咱俩没这交情。</p><p>如果我妈妈大热天给我烧了一碗菜，为了做菜还切伤了手指头。</p><p>虽然这碗菜巨难吃，但我看着她满脸的汗水和包着创可贴的手指头，我如果还到处嚷嚷，我妈妈做的什么菜啊，巨难吃啊。。。</p><p>我真的就不是人。</p><p>但如果我去餐厅吃了一碗巨难吃的菜。</p><p>我不但要和厨子还有大堂经理说，你这烧的什么玩意儿。</p><p>还要发朋友圈，上大众点评恨不得让大家都知道你们这碗菜难吃。</p><p>我管你厨子累不累，手指头受没受伤呢。</p><p>我一个人治不了你，就让大家联合起来治你。</p><p>这是两个完全不同的思维套路。</p><p>我们现在是那一种情况，你们自己想。</p><p>我从来都不把古典时代中国的落后怪罪于儒家。因为只要放长远的历史来看，这是这片土地的最朴素的选择，而且我们现在依然也生活在这种思维之下。</p><p>而我现在更倾向于，承认儒家在个人道德领域的价值，在社会组织上，有很高的博物馆价值，但也止于此了。因为儒家的这个根基，现在已经逐渐崩塌了。</p><p>如果还固执得拿着那张旧船票，可能就真的再也登不上新时代的船了。</p><p>最后再唠叨一下</p><p>我之前说的，处理家庭事务，泛政治化。处理国家事务，又家长化。</p><p>我个人估计，中国人可能是世界上最关心政治的一群人了。。。饭桌上出租车上恨不得谁都知道国家方针政要秘史。</p><p>还有所谓的小姑娘用三国比喻政治关系惊呆外国人什么什么的。</p><p>但事实上</p><p>这都不是政治。</p><p>政治是小区装电梯，你去筹集装电梯的资金，去说服不想装的住户。</p><p>政治是有大家觉得加班的时候，去团结更多的人一起找老板谈判。</p><p>而不是有的人跳出来干了哪些事后，在后面点评他们，然后总结出所谓的人生感悟。</p><p>哪些感悟对你未来的人生，其实屁用没有。</p><p>因为哪怕有下一次，一样是别人跳出来。</p><p>如果他们成功了，凭什么要在乎你的感受呢？</p>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思想 </tag>
            
            <tag> 政治 </tag>
            
            <tag> 历史 </tag>
            
            <tag> 文化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哲库裁员记| 时也！</title>
      <link href="/2023/05/12/zhi-shi-ju/zhe-ku-cai-yuan-ji/"/>
      <url>/2023/05/12/zhi-shi-ju/zhe-ku-cai-yuan-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p>天下大势，浩浩汤汤。互联网和芯片行业双双暴雷，曾经疯狂的IC、IT大战也终于还是落下了时代的帷幕，多少让身处其中的我们神伤。</p><p>5.12号哲库的关停，或者说集体裁员，虽然朋友圈还可以看到捞人信息，但是这个行业是否能够容得下这么多人仍然是问题。</p><p><img src="//github.com/jlcxxzj/blog.github.io/2023/05/12/zhi-shi-ju/zhe-ku-cai-yuan-ji/1e4f3ca0-f92c-11ed-a571-4573e0b71daf.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2023/05/12/zhi-shi-ju/zhe-ku-cai-yuan-ji/27682f90-f92c-11ed-a571-4573e0b71daf.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2023/05/12/zhi-shi-ju/zhe-ku-cai-yuan-ji/2b6bdd80-f92c-11ed-a571-4573e0b71daf.jpeg?v=1&type=image" alt></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大环境 </tag>
            
            <tag> 裁员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文件书写 | Typora和轻应用的区别</title>
      <link href="/2023/05/09/zhi-shi-ju/markdown-wen-jian-typora-shu-xie/"/>
      <url>/2023/05/09/zhi-shi-ju/markdown-wen-jian-typora-shu-xie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前一直使用轻应用来编写Makdown文件，功能还是略显单一，Typora的页面元素更丰富，得上手安排，依然选择了破解版软件</p><blockquote><p><a href="https://www.cnblogs.com/HeiDaotu/p/17227557.html" target="_blank" rel="noopener">Typora破解1.5.8 - HeiDaotu - 博客园 (cnblogs.com)</a></p></blockquote><h2 id="MarkDown语法小技巧"><a href="#MarkDown语法小技巧" class="headerlink" title="MarkDown语法小技巧"></a>MarkDown语法小技巧</h2><p>代码块对不支持语言也可以具有突出效果，如cmd的报错信息记录。但是需要注意的是，有时包括在代码块的文本会出现没有突出或者错误突出的问题，这时候需要在代码块的上面的```中写明被突出的语言，如cmd中的信息就写cmd。</p><pre class="line-numbers language-cmd"><code class="language-cmd">D:\Desktop\ElectronProject\electron_project\EasySpider\ElectronJS>npm start> easy-spider@0.3.0 start> electron-forge start√ Checking your system√ Locating application√ Loading configuration√ Preparing native dependencies [0.1s]√ Running generateAssets hook<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 内容 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
            <tag> 轻应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调整C盘分区 | 使用两个新工具</title>
      <link href="/2023/05/05/2-diao-yan-xue-xi-si-kao/dian-nao-zhuang-ji-zhi-shi/diao-zheng-c-pan-fen-qu/"/>
      <url>/2023/05/05/2-diao-yan-xue-xi-si-kao/dian-nao-zhuang-ji-zhi-shi/diao-zheng-c-pan-fen-qu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近显卡和固态降价了，等等党这一次及时下手配置了一台。不得不说商家还是很给力，一天就到货，开箱即用。虽然少了自己DIY组装的快乐，却少了很多额外的配置工作。之前的联想R7000P的C盘分配了100个G，两年过去已经经常报警了。这次商家分配的150G/400G/400G的固态分配C盘还是少了。有必要调整一下C盘的容量。</p><h2 id="调整C盘大小"><a href="#调整C盘大小" class="headerlink" title="调整C盘大小"></a>调整C盘大小</h2><ol><li>首先是按WIN+R输入<code>diskmgmt.msc</code>进入<code>磁盘管理</code>；一般C盘和D盘用的较多，放置系统文件和安装文件，E盘多是辅助性的，从E盘划出100GG给C盘更合理。右键E盘，压缩卷，输入压缩空间量102400MB。此时会出现100G的待分配空间。由于扩展卷只能扩展旁边的盘，待分配区间无法直接合并到C盘中。</li><li>使用傲梅分区助手可以解决这个问题。<a href="https://www.disktool.cn/" target="_blank" rel="noopener">傲梅分区助手、轻松备份、数据恢复(恢复之星)、远程控制（AnyViewer）等软件免费下载官网 (disktool.cn)</a>下载安装以后，选择待分配的100G区间，右键选择<code>调整/移动分区</code>，逐步移动到C盘旁边。</li><li>重新再<code>磁盘管理</code>，选择C盘，扩展卷完成扩展。</li></ol><h2 id="高效的C盘清理软件"><a href="#高效的C盘清理软件" class="headerlink" title="高效的C盘清理软件"></a>高效的C盘清理软件</h2><p>C盘清理软件有很多，目前比较好用的是Wiztree，官网下载即可<a href="https://www.diskanalyzer.com/" target="_blank" rel="noopener">WizTree - The Fastest Disk Space Analyzer (diskanalyzer.com)</a><br><a href="https://zhuanlan.zhihu.com/p/531631873" target="_blank" rel="noopener">wiztree-免费的c盘清理软件 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 电脑知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> C盘分区 </tag>
            
            <tag> 电脑知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023.5|博客和内容推荐</title>
      <link href="/2023/05/05/1-xiang-mu/bo-ke-xiang-mu/bo-ke-tui-jian/2023-nian-5-yue-bo-ke-tui-jian/"/>
      <url>/2023/05/05/1-xiang-mu/bo-ke-xiang-mu/bo-ke-tui-jian/2023-nian-5-yue-bo-ke-tui-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="国外博客"><a href="#国外博客" class="headerlink" title="国外博客"></a>国外博客</h1><p><a href="https://nn.ci/?from=blog.feizhuqwq.com" target="_blank" rel="noopener">Hi, I’m Andy Hsu (nn.ci)</a></p><h1 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h1><p><a href="https://blog.rxliuli.com/" target="_blank" rel="noopener">rxliuli blog</a><br><a href="https://brittanychiang.com/" target="_blank" rel="noopener">Brittany Chiang</a><br><a href="https://marcosteam.space/" target="_blank" rel="noopener">Marcospace (marcosteam.space)</a><br><a href="https://guo.moe/" target="_blank" rel="noopener">https://guo.moe/</a><br><a href="https://rainchan.win/" target="_blank" rel="noopener">RainChan的小博客</a><br><a href="https://www.mokeyjay.com/page/2" target="_blank" rel="noopener">mokeyjay | 某全沾工程师的博客与日常 - Part 2</a><br><a href="https://www.fghrsh.net/" target="_blank" rel="noopener">FGHRSH 的博客</a><br><a href="https://mikublog.com/" target="_blank" rel="noopener">MikuBlog – 分享整个世界</a><br><a href="https://blog.aoaoao.me/" target="_blank" rel="noopener">Aaron’s Blog (aoaoao.me)</a><br><a href="https://rainchan.win/link/" target="_blank" rel="noopener">友情链接 | RainChan的小博客</a><br><a href="https://www.haoba.cc/" target="_blank" rel="noopener">工作笔记-学无止境，前端之路很广也很陡 (haoba.cc)</a><br><a href="https://nn.ci/?from=blog.feizhuqwq.com" target="_blank" rel="noopener">Hi, I’m Andy Hsu (nn.ci)</a><br><a href="https://blog.fivezha.cn/" target="_blank" rel="noopener">异国迷宫的十字路口 (fivezha.cn)</a><br><a href="https://blog.gmcj0816.top/?from=haoba.cc" target="_blank" rel="noopener">七鳄の学习格 - 生在黑暗，行向光明ヾ(@^▽^@)ノ (gmcj0816.top)</a></p><h2 id="C和嵌入式"><a href="#C和嵌入式" class="headerlink" title="C和嵌入式"></a>C和嵌入式</h2><p><a href="https://blog.aoaoao.me/p/smm2-printer/" target="_blank" rel="noopener">《超级马力欧创作家2》评论自动绘图 (aoaoao.me)</a><br><a href="https://kenvix.com/" target="_blank" rel="noopener">Kenvix’s Blog</a><br><a href="https://blog.dreace.top/2020/C-C-Coding-Standards/" target="_blank" rel="noopener">C/C++ 编码规范 - DreaceのBlog</a><br><a href="https://www.bilibili.com/video/BV1qc411J779/?spm_id_from=333.1007.tianma.2-2-4.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">示波器怎么用，信号怎怎么测量，我给你演示_哔哩哔哩_bilibili</a></p><h2 id="web3加密货币"><a href="#web3加密货币" class="headerlink" title="web3加密货币"></a>web3加密货币</h2><p><a href="https://diygod.me/nft" target="_blank" rel="noopener">DIYgod</a></p><h1 id="推荐内容"><a href="#推荐内容" class="headerlink" title="推荐内容"></a>推荐内容</h1><p><a href="https://blog.rxliuli.com/p/b63ba6ff31c049f8a6703ce7022a79e6/" target="_blank" rel="noopener">Git 速查清单 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/3b9aa0ac801f4ec0a2494782459c0203/" target="_blank" rel="noopener">markdown 自动化 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/971404f2f72c429083a614f8ee522237/" target="_blank" rel="noopener">2021 年终总结及 2022 的计划 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/522048077c1343b79eb9f42640c02bd0/" target="_blank" rel="noopener">VSCode 搭建 markdown 写作环境 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/d4305821fd2a4dfc827811c17ca85fe6/" target="_blank" rel="noopener">个人与开源 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/d3f09581c92041e7a8475cc0d9e99c85/" target="_blank" rel="noopener">使用 hexo next 搭建静态博客 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/0a924f166b48497e9d1d19048967e880/" target="_blank" rel="noopener">Java 微信公众号开发 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/5f38eae3a61242e698684620e82fb6f7/" target="_blank" rel="noopener">blog 评论系统推荐 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/63ed4e3837634ee1b5c9ddd1e33d18f9/" target="_blank" rel="noopener">博客迁移 - rxliuli blog</a><br><a href="https://blog.rxliuli.com/p/6394b6d9a2ba4be7a17fec38f274a50c/" target="_blank" rel="noopener">Notion 使用体验 - rxliuli blog</a><br><a href="https://www.haoba.cc/archives/git-chang-yong-ming-ling.html" target="_blank" rel="noopener">Git 常用命令 (haoba.cc)</a><br><a href="https://blog.feizhuqwq.com/14" target="_blank" rel="noopener">记录一次给博客自定义鼠标样式 - 肥猪のBlog (feizhuqwq.com)</a><br><a href="https://blog.feizhuqwq.com/20" target="_blank" rel="noopener">为 Hexo 博客添加永久简洁的文章直链 - 肥猪のBlog (feizhuqwq.com)</a><br><a href="https://blog.feizhuqwq.com/6" target="_blank" rel="noopener">C盘文件清理神器SpaceSniffer - 肥猪のBlog (feizhuqwq.com)</a><br><a href="https://blog.fivezha.cn/post/27" target="_blank" rel="noopener">Git多人协作教程 (fivezha.cn)</a><br><strong><a href="https://blog.gmcj0816.top/webcollect/" target="_blank" rel="noopener">网站收藏 | 七鳄の学习格 (gmcj0816.top)</a></strong></p><h1 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h1><p><a href="https://github.com/rxliuli/rxliuli/tree/master/apps/v2">rxliuli/apps/v2 at master · rxliuli/rxliuli · GitHub</a></p><h2 id="主题个性化设置"><a href="#主题个性化设置" class="headerlink" title="主题个性化设置"></a>主题个性化设置</h2><h3 id="matery主题"><a href="#matery主题" class="headerlink" title="matery主题"></a>matery主题</h3><p><a href="https://juejin.cn/post/6844904132608786446" target="_blank" rel="noopener">Hexo-theme-matery主题魔改记录 - 掘金 (juejin.cn)</a><br><a href="https://chen-shang.github.io/2019/08/15/hexo/hexo-theme-matery-zhu-ti-you-hua/" target="_blank" rel="noopener">hexo-theme-matery主题优化 | 这么些年的技术总结 (chen-shang.github.io)</a><br><a href="https://chen-shang.github.io/2019/08/15/hexo/hexo-theme-matery-zhu-ti-you-hua/" target="_blank" rel="noopener">hexo-theme-matery主题优化 | 这么些年的技术总结 (chen-shang.github.io)</a><br><a href="https://blog.csdn.net/kuashijidexibao/article/details/112971657?spm=1001.2014.3001.5506" target="_blank" rel="noopener">(62条消息) Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客</a><br><a href="https://yjblogs.cn/posts/Start-the-blogging-journey" target="_blank" rel="noopener">开始博客之旅 | 勇杰的博客 (yjblogs.cn)</a></p><h3 id="做出了哪些个性化设置"><a href="#做出了哪些个性化设置" class="headerlink" title="做出了哪些个性化设置"></a>做出了哪些个性化设置</h3><ol><li>在themes/matery/layout/_widget/dream.ejs中添加了梦想的语句，注释了原来放入照片的部分</li><li>themes/matery/layout/_partial/bg-cover-content.ejs切换banner图，自己加了## 每日诗词（没有成功）</li><li>添加看板娘<a href="https://blog.csdn.net/qq_36239569/article/details/104104894" target="_blank" rel="noopener">(62条消息) Hexo添加Live2D看板娘最新教程_飞萤乱入帘的博客-CSDN博客_hexo live2d</a></li><li>banner冒泡功能<a href="https://blog.csdn.net/weixin_43662760/article/details/122311008" target="_blank" rel="noopener">(62条消息) Matery主题自定义(三)页面特效_Dream_ruins的博客-CSDN博客</a></li><li>背景：<a href="https://blog.csdn.net/cungudafa/article/details/106278206" target="_blank" rel="noopener">(62条消息) hexo（matery）背景、滚动条优化+增加点击跳评论_cungudafa的博客-CSDN博客_matery轮播图</a></li><li>樱花飘动<a href="https://blog.csdn.net/kuashijidexibao/article/details/112971657" target="_blank" rel="noopener">(62条消息) Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客</a></li></ol><h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><p><a href="https://marmalade.vip/Materysettings2.html" target="_blank" rel="noopener">Hexo-Matery主题细致美化(下) | Marmalade’s Blog</a><br>类似博客：<a href="https://www.lixl.cn/" target="_blank" rel="noopener">悟尘记 - 李小龙的博客网站 (lixl.cn)</a></p><h3 id="外界访问"><a href="#外界访问" class="headerlink" title="外界访问"></a>外界访问</h3><p><a href="https://blog.csdn.net/weixin_29092579/article/details/112100678" target="_blank" rel="noopener">https://blog.csdn.net/weixin_29092579/article/details/112100678</a><br><a href="https://cloud.tencent.com/developer/article/1471071" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1471071</a><br><a href="https://xmq.plus/" target="_blank" rel="noopener">https://xmq.plus/</a></p><h3 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h3><p><a href="https://www.jianshu.com/p/c60ad2a33a1e" target="_blank" rel="noopener">https://www.jianshu.com/p/c60ad2a33a1e</a></p><h3 id="部署失败的原因"><a href="#部署失败的原因" class="headerlink" title="部署失败的原因"></a>部署失败的原因</h3><p><a href="http://biglee.top/2021/05/18/hexo-%E9%83%A8%E7%BD%B2%E4%B8%AD%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91/" target="_blank" rel="noopener">是因为node版本太高的原因</a><br><a href="https://blog.csdn.net/u013250071/article/details/81203900" target="_blank" rel="noopener">文件太大导致失败</a><br><a href="https://www.jianshu.com/p/c60ad2a33a1e" target="_blank" rel="noopener">没有清理干净deploy文件夹</a><br><a href="https://www.zhihu.com/question/363375161" target="_blank" rel="noopener">https://www.zhihu.com/question/363375161</a><br><a href="https://blog.csdn.net/weixin_38450840/article/details/80701173" target="_blank" rel="noopener">推的文件太大，改配置文件</a><br><a href="https://bbs.huaweicloud.com/blogs/307384" target="_blank" rel="noopener">少了readme.md文件</a><br><a href="https://www.jianshu.com/p/fb2b6a19436a" target="_blank" rel="noopener"># Git出错：error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054</a><br><a href="https://blog.csdn.net/qq_25333681/article/details/80879500" target="_blank" rel="noopener">卡着不动</a><br><a href="https://blog.csdn.net/vicky_yongqi/article/details/108348199" target="_blank" rel="noopener">(62条消息) 解决git报错：‘fatal: unable to access ‘https://XXX: Failed onnect to github. com port 443: Timed out_vicky_yongqi的博客-CSDN博客_fatal: unable to access 443</a></p><p><a href="https://blog.unanaos.com/articles/157" target="_blank" rel="noopener">https://blog.unanaos.com/articles/157</a></p><p><a href="http://www.lgwimonday.cn/friendchain" target="_blank" rel="noopener">申请友链 | 阿拉灯 (lgwimonday.cn)</a><br><a href="https://www.jianshu.com/p/5794ec7e603b" target="_blank" rel="noopener">https://www.jianshu.com/p/5794ec7e603b</a><br><a href="https://juejin.cn/post/7034150981071798309" target="_blank" rel="noopener">https://juejin.cn/post/7034150981071798309</a></p><h3 id="个性化matery"><a href="#个性化matery" class="headerlink" title="个性化matery"></a>个性化matery</h3><p><a href="https://yafine-blog.cn/posts/12b4.html" target="_blank" rel="noopener">Hexo+Github 博客搭建之 Matery 主题个性化修改篇（二） | 过客～励む (yafine-blog.cn)</a><br><a href="https://seayj.cn/articles/33818/?utm_source=wechat_session&utm_medium=social&utm_oi=744634013838237696" target="_blank" rel="noopener">hexo[Matery] 玩转 Markdown | SeaYJ’s Blog</a><br><a href="https://yangchaoyi.vip/posts/520520/" target="_blank" rel="noopener">【源码开放】Hexo+Github 博客butterfly 和 matery 主题 搭建完全教程【整理】 | 超逸の博客 (yangchaoyi.vip)</a></p><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这篇心得体会的框架，很多体会都是从<a href="https://godweiyang.com/" target="_blank" rel="noopener">韦阳的博客</a>来的，我是在他的感悟里修改，添加了自己的体会，甚至包括这个博客的搭建过程，感谢大佬的分享，我也争取多分享干货。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
            <tag> 内容 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物联网项目Debug过程 | 从数据库开始</title>
      <link href="/2023/05/03/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/wu-lian-wang-xiang-mu/"/>
      <url>/2023/05/03/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/wu-lian-wang-xiang-mu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-项目演示"><a href="#1-项目演示" class="headerlink" title="1. 项目演示"></a>1. 项目演示</h2><p><a href="https://fastbee.cn/doc/pages/system/#%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">系统运行 | FastBee文档</a><br>项目代码名称还是物美智能<br>物美智能(wumei-smart)更名为<a href="https://gitee.com/link?target=https%3A%2F%2Ffastbee.cn" target="_blank" rel="noopener">蜂信物联(FastBee)</a><br>抽丝剥茧可知，vue显示的是FastBee页面，即<a href="https://iot.fastbee.cn/iot/alertLog" target="_blank" rel="noopener">FastBee物联网系统</a><br>而在项目中README显示的是权限管理，基于ruoyi-vue系统开发，即<a href="http://vue.ruoyi.vip/login?redirect=%2Fsystem%2Fuser" target="_blank" rel="noopener">若依管理系统 (ruoyi.vip)</a>，是将其核心管理模块放到了FastBee的系统管理模块。<br>FastBee页面演示：<a href="https://iot.fastbee.cn/index" target="_blank" rel="noopener">https://iot.fastbee.cn/index</a><br>文档教程：<a href="https://fastbee.cn/doc/pages/system/#%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">https://fastbee.cn/doc/pages/system/#%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83</a><br>若依管理系统的页面演示：若依管理系统 (ruoyi.vip)](<a href="http://vue.ruoyi.vip/login?redirect=%2Fsystem%2Fuser" target="_blank" rel="noopener">http://vue.ruoyi.vip/login?redirect=%2Fsystem%2Fuser</a>)<br>开发文档：<a href="http://doc.ruoyi.vip/ruoyi-vue/document/hjbs.html" target="_blank" rel="noopener">http://doc.ruoyi.vip/ruoyi-vue/document/hjbs.html</a><br><strong>若依项目学习</strong><a href="https://www.bilibili.com/video/BV1HT4y1d7oA/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1HT4y1d7oA/</a></p><h2 id="2-项目地址"><a href="#2-项目地址" class="headerlink" title="2. 项目地址"></a>2. 项目地址</h2><p><a href="https://gitee.com/kerwincui/wumei-smart" target="_blank" rel="noopener">FastBee: FastBee开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。 (gitee.com)</a><br><em>本地地址</em> <code>D:\javafile\Austin\预研项目\物联网项目\wumei-smart-master</code></p><h2 id="3-数据库设置"><a href="#3-数据库设置" class="headerlink" title="3. 数据库设置"></a>3. 数据库设置</h2><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p><img src="//github.com/jlcxxzj/blog.github.io/2023/05/03/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/wu-lian-wang-xiang-mu/9654c8b0-e9b3-11ed-a544-7bf12ac02e57.jpeg?v=1&type=image" alt><br>创建表时报错<br><a href="https://blog.csdn.net/weixin_44384605/article/details/115386147" target="_blank" rel="noopener">(85条消息) MySQL导入报错:syntax to use near ‘json DEFAULT NULL, PRIMARY KEY (<code>id</code>)) ENGINE=InnoDB DEFAULT CHARSET_use near ‘json not null_迪尔~的博客-CSDN博客</a></p><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><p><a href="https://blog.csdn.net/msn131420/article/details/122742423" target="_blank" rel="noopener">(85条消息) redis下载与安装（windows版）_丑八怪223的博客-CSDN博客</a><br><a href="https://github.com/MicrosoftArchive/redis/releases">Releases · microsoftarchive/redis (github.com)</a></p><h4 id="1-运行redis服务端"><a href="#1-运行redis服务端" class="headerlink" title="1. 运行redis服务端"></a>1. 运行redis服务端</h4><p>就是双击redis-server.exe运行服务即可。<br>redis端口号6379，redis版本3.0.504 ，pid随机生成的。</p><h4 id="2-使用redis客户端来连接redis–redis服务器"><a href="#2-使用redis客户端来连接redis–redis服务器" class="headerlink" title="2. 使用redis客户端来连接redis–redis服务器"></a>2. 使用redis客户端来连接redis–redis服务器</h4><p>服务器端的窗口不能关掉<br>双击<a href="https://so.csdn.net/so/search?q=redis-cli&spm=1001.2101.3001.7020" target="_blank" rel="noopener">redis-cli</a>.exe即可<br>输入<a href="https://so.csdn.net/so/search?q=ping%E5%91%BD%E4%BB%A4&spm=1001.2101.3001.7020" target="_blank" rel="noopener">ping命令</a>表示连接成功了。<br>设置键值对 <strong>set myKey abc</strong><br>取出键值对 <strong>get myKey</strong></p><h2 id="4-debug调试"><a href="#4-debug调试" class="headerlink" title="4. debug调试"></a>4. debug调试</h2><h3 id="报错-java-lang-ClassNotFoundException-javax-xml-bind-JAXBException"><a href="#报错-java-lang-ClassNotFoundException-javax-xml-bind-JAXBException" class="headerlink" title="报错# java.lang.ClassNotFoundException: javax.xml.bind.JAXBException"></a>报错<code># java.lang.ClassNotFoundException: javax.xml.bind.JAXBException</code></h3><p>在<code>D:\javafile\Austin\预研项目\物联网项目\wumei-smart-master\springboot\wumei-common\pom.xml</code><br>加<a href="https://cloud.tencent.com/developer/article/2108890" target="_blank" rel="noopener">真正解决方案：java.lang.ClassNotFoundException: javax.xml.bind.JAXBException - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Java <span class="token number">6</span> <span class="token operator">=</span> JAX<span class="token operator">-</span>B Version <span class="token number">2.0</span> <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Java <span class="token number">7</span> <span class="token operator">=</span> JAX<span class="token operator">-</span>B Version <span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">3</span> <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Java <span class="token number">8</span> <span class="token operator">=</span> JAX<span class="token operator">-</span>B Version <span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">8</span> <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">&lt;</span>dependencies<span class="token operator">></span> <span class="token operator">&lt;</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span> <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jaxb<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span> <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span> <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jaxb<span class="token operator">-</span>impl<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span> <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span> <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jaxb<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span> <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>activation<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span> <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>activation<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span> <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="MQTT客户端连不上EMQX服务器"><a href="#MQTT客户端连不上EMQX服务器" class="headerlink" title="MQTT客户端连不上EMQX服务器"></a>MQTT客户端连不上EMQX服务器</h3><p><a href="https://www.emqx.io/docs/zh/v4.0/getting-started/install.html#%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E5%AE%89%E8%A3%85-linux" target="_blank" rel="noopener">https://www.emqx.io/docs/zh/v4.0/getting-started/install.html#%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E5%AE%89%E8%A3%85-linux</a></p><h4 id="MQTT协议"><a href="#MQTT协议" class="headerlink" title="MQTT协议"></a>MQTT协议</h4><p>MQTT和消息队列如RabbitMq的区别：<br>消息队列是一种先进先出的数据结构，通常应用于应用服务层面，客户端连接数较少，万级别的连接很少。<br>MQTT是传输协议，绝大部分MQTT Broker不保证消息顺序，常用于物联网、消息传输等。客户端规模庞大，百万甚至千万级，单个客户要处理的信息少，一般定时发消息即可。</p><h4 id="EMQX服务器"><a href="#EMQX服务器" class="headerlink" title="EMQX服务器"></a>EMQX服务器</h4><p><a href="https://www.emqx.io/docs/zh/v4.0/" target="_blank" rel="noopener">https://www.emqx.io/docs/zh/v4.0/</a><br>EMQX是基于MQTT协议的Broker，为MQTT提供连接与性能测试功能。使用Erlang通用的面向并发的编程语言编写，类似KAFKA，通过连接、订阅、发布来互连。<br><a href="https://blog.csdn.net/p1279030826/article/details/107916531" target="_blank" rel="noopener">(85条消息) MQTT Broker 比较与选型_mqttbroker_JavonPeng的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 调试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程基础 </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 前后端 </tag>
            
            <tag> redis </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>独立开发者需求分析 | 需求驱动技术进步</title>
      <link href="/2023/05/02/2-diao-yan-xue-xi-si-kao/xu-qiu-fen-xi/du-li-kai-fa-zhe-xu-qiu-fen-xi/"/>
      <url>/2023/05/02/2-diao-yan-xue-xi-si-kao/xu-qiu-fen-xi/du-li-kai-fa-zhe-xu-qiu-fen-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-独立开发者论坛"><a href="#1-独立开发者论坛" class="headerlink" title="1. 独立开发者论坛"></a>1. 独立开发者论坛</h2><p><a href="https://w2solo.com/?page=2" target="_blank" rel="noopener">w2solo - 独立开发者社区</a></p><h2 id="2-开发网站"><a href="#2-开发网站" class="headerlink" title="2. 开发网站"></a>2. 开发网站</h2><p><a href="https://www.functorz.com/?channel=w2solo" target="_blank" rel="noopener">Zion无代码开发平台_轻量级应用可视化开发_小程序定制开发更轻松！_Zion (functorz.com)</a><br><a href="https://w2solo.com/topics/3686" target="_blank" rel="noopener">HuntsBot,将自由职业进行到底! · w2solo - 独立开发者社区</a></p><h2 id="3-需求分析"><a href="#3-需求分析" class="headerlink" title="3. 需求分析"></a>3. 需求分析</h2><ol><li><p>个人简历<br><a href="https://w2solo.com/topics/3799" target="_blank" rel="noopener">小小里程碑，独立开发的作品简单简历 easycv.cn 月收入达到 2000 元 · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3685" target="_blank" rel="noopener">简约简历：一个小而美的简历制作网站 · w2solo - 独立开发者社区</a></p></li><li><p>小游戏<br><a href="https://w2solo.com/topics/3860" target="_blank" rel="noopener">新人报道，写了个微信小游戏 · w2solo - 独立开发者社区</a></p></li><li><p>日历<br><a href="https://w2solo.com/topics/3856" target="_blank" rel="noopener">我是开发时长两年半的个人开发者，米小饭 · w2solo - 独立开发者社区</a></p></li><li><p>付费恋人付费交友网站<br><a href="https://w2solo.com/topics/3850" target="_blank" rel="noopener">尝试做付费社交 # 七日恋人 · w2solo - 独立开发者社区</a></p></li><li><p>浏览器插件</p></li><li><p>提醒类的APP<br><a href="https://w2solo.com/topics/3824" target="_blank" rel="noopener">新人求关照 · w2solo - 独立开发者社区</a></p></li><li><p>极简时钟、极简日记<br><a href="https://w2solo.com/topics/3783" target="_blank" rel="noopener">一款创意时钟——「文字时钟」 · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3820" target="_blank" rel="noopener">2023.3.26 独立开发者线上聚会记录 · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3705" target="_blank" rel="noopener">创意时钟 app 介绍 · w2solo - 独立开发者社区</a></p></li><li><p>音视频<br><a href="https://w2solo.com/topics/3767" target="_blank" rel="noopener">简单智能、功能齐备的云端音视频工具 · w2solo - 独立开发者社区</a><br><a href="https://yunmaovideo.com/" target="_blank" rel="noopener">云猫转码 - 简单智能、功能齐备的云端音视频工具 (yunmaovideo.com)</a><br>这是一个挺好的视频工具，支持语音转文字、视频合并、去除水印等</p></li><li><p>在线白板<br><a href="https://w2solo.com/topics/3769" target="_blank" rel="noopener">在线白板的终极形态 - BoardOS · w2solo - 独立开发者社区</a></p><ol start="10"><li>生成密码工具<br>将常用的一些密码学工具的 Web 版，比如生成密钥、哈希、解密加密等等，做在了一起方便使用。<br><a href="https://w2solo.com/topics/3771" target="_blank" rel="noopener">在线密码学工具 · w2solo - 独立开发者社区</a></li><li>喝水提醒工具<br><a href="https://w2solo.com/topics/3758" target="_blank" rel="noopener">「喝水笔记」微信小程序🌈目前有 5 万用户 · w2solo - 独立开发者社区</a></li></ol></li><li><p>财富记账<br><a href="https://w2solo.com/topics/3746" target="_blank" rel="noopener">继续找前端一起做个财富记账类 APP · w2solo - 独立开发者社区</a></p></li><li><p>待办清单<br><a href="https://w2solo.com/topics/3740" target="_blank" rel="noopener">微信小程序 - 指尖待办清单 · w2solo - 独立开发者社区</a></p></li><li><p>学习类—四六级单词<br><a href="https://w2solo.com/topics/3723" target="_blank" rel="noopener">新人报道，非常荣幸和大家一起探索独立开发之路 · w2solo - 独立开发者社区</a></p></li><li><p>同刷小视频<br><a href="https://w2solo.com/topics/3713" target="_blank" rel="noopener">友映计划，主要功能是同屏一起看视频，屏幕共享可实现同步刷抖音，还可以视频连麦 · w2solo - 独立开发者社区</a></p></li><li><p>量化交易机器人<br><a href="https://tv2ex.top/" target="_blank" rel="noopener">TradingView - Exchange (tv2ex.top)</a></p></li><li><p>练字APP<br><a href="https://w2solo.com/topics/3696" target="_blank" rel="noopener">一款练字类 APP · w2solo - 独立开发者社区</a></p></li><li><p>健身记录APP<br><a href="https://w2solo.com/topics/3672" target="_blank" rel="noopener">做的一款健身记录的 app，名字叫 halo 健身，欢迎爱健身的友友体验 · w2solo - 独立开发者社区</a></p></li><li><p>B站浏览器端，字幕抓取<br><a href="https://w2solo.com/topics/3708" target="_blank" rel="noopener">【浏览器扩展】哔哩哔哩字幕列表 - 高效获取视频文本信息 · w2solo - 独立开发者社区</a></p></li><li><p>基于浏览器的截图美化扩展<br><a href="https://w2solo.com/topics/3634" target="_blank" rel="noopener">产品发布 2 个多月后，我接到了收购意向，然后…… · w2solo - 独立开发者社区</a></p></li><li><p><a href="https://www.logosc.cn/" target="_blank" rel="noopener">LOGO设计神器；公司logo在线设计生成器 - 标小智LOGO神器 (logosc.cn)</a></p></li><li><p>数钢管、螺母<br><a href="https://w2solo.com/topics/3609" target="_blank" rel="noopener">一年前开发的工具类小程序 - 数钢筋数钢管 · w2solo - 独立开发者社区</a></p></li><li><p>饮食记录APP<br><a href="https://w2solo.com/topics/3581" target="_blank" rel="noopener">我用 ReactNative 开发了一个饮食记录 App · w2solo - 独立开发者社区</a></p></li><li><p>board3 是专注于 web3 的招聘平台，提供了大量的远程职位。 <a href="https://board3.xyz/" target="_blank" rel="noopener">https://board3.xyz/</a> 可根据链上数据（交易数据、NFTs、技能认证等），自动生成简历，结合用户上传的 web2 信息，提供工作证明（上链），实现链上简历。<br><a href="https://board3.xyz/" target="_blank" rel="noopener">Board3.xyz: Job board of web3, DAOs and crypto jobs</a></p></li><li></li></ol><h2 id="4-独立开发者的问题和感悟"><a href="#4-独立开发者的问题和感悟" class="headerlink" title="4. 独立开发者的问题和感悟"></a>4. 独立开发者的问题和感悟</h2><p><a href="https://w2solo.com/topics/3690" target="_blank" rel="noopener">不上班的 1000 天，程序员自由职业 B 计划 - 做什么/收入/经验教训 · w2solo - 独立开发者社区</a><br><a href="https://toast.pub/totoro/posts/peroidic-summary-on-washbaidu/" target="_blank" rel="noopener">半年历程两万周活 - Chrome插件阶段总结 | Pangzi’s Blog (toast.pub)</a><br><a href="https://w2solo.com/topics/3667" target="_blank" rel="noopener">😊迟到的自我介绍以及回顾和总结下做出海产品的这几年~ · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3667" target="_blank" rel="noopener">😊迟到的自我介绍以及回顾和总结下做出海产品的这几年~ · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3680" target="_blank" rel="noopener">尝试业余独立开发一年半后 · w2solo - 独立开发者社区</a><br><a href="https://w2solo.com/topics/3564" target="_blank" rel="noopener">一个程序员的微创业日记 · w2solo - 独立开发者社区</a><br><a href="https://starkwang.com/post/tencent-3rd-anniversary" target="_blank" rel="noopener">Starkwang’s Blog</a></p><h2 id="5-圈子"><a href="#5-圈子" class="headerlink" title="5. 圈子"></a>5. 圈子</h2><p><a href="https://w2solo.com/topics/3591" target="_blank" rel="noopener">hacker 们分享你的 Twitter 账号， 大家互相认识。 · w2solo - 独立开发者社区</a><br><a href="https://github.com/1c7/chinese-independent-developer">1c7/chinese-independent-developer: 👩🏿‍💻👨🏾‍💻👩🏼‍💻👨🏽‍💻👩🏻‍💻中国独立开发者项目列表 – 分享大家都在做什么 (github.com)</a></p><h2 id="6-自己的IDEA和实现"><a href="#6-自己的IDEA和实现" class="headerlink" title="6. 自己的IDEA和实现"></a>6. 自己的IDEA和实现</h2><ol><li>浏览器插件，关于当前页面内容的推荐。</li><li>ChatGPT事件时时评论</li><li>很感兴趣的一个方向，浏览器知识整理插件<br>在使用浏览器探索知识的海洋里一不小心就被众多的网页淹没，想随时翻找之前打开的网页内容，但是网页一多就不知道需要的在哪里。每每被小伙伴看见挂着的密集的网页，密集恐惧症都犯了。所以有没有这样一款工具，作为专属的网页管家的存在，为我们整理好浏览的网页的库，方便需要的时候重新打开，整理知识的时候方便归纳呢？至少在目前的插件接触中还没有出现。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 需求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论坛 </tag>
            
            <tag> 独立开发 </tag>
            
            <tag> 需求分析 </tag>
            
            <tag> 挖掘独立开发技术交流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python入口深究 | main和init的含义区别</title>
      <link href="/2023/04/30/2-diao-yan-xue-xi-si-kao/python-ru-kou-shen-jiu/"/>
      <url>/2023/04/30/2-diao-yan-xue-xi-si-kao/python-ru-kou-shen-jiu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-脚本语言和编译型语言"><a href="#1-脚本语言和编译型语言" class="headerlink" title="1. 脚本语言和编译型语言"></a>1. 脚本语言和编译型语言</h2><ol><li>我们平时接触的大多数高级编程语言都属于编译型语言，高级代码被编译然后运行<br>如C语言需要写通过编译成为汇编语言，再将汇编语言烧入到单片机中，单片机将汇编语言转化为机器语言（二进制编码）</li><li>再比如Java，需要将高级语言先编译成为字节码文件，<br>java代码首先要通过前端编译器编译成.class字节码文件，然后再按一定的规则加载到JVM（java 虚拟机）内运行，有三种运行方式，解释模式（javac）、编译模式（C1 JIT、C2 JIT）、混合模式（javac+（C1 OR C2））。解释模式下，一边执行字节码一边解释执行；编译模式下，字节码编译为机器码后执行；混合模式下，正常情况下使用解释执行，但是针对经常执行的代码，会采用JIT技术进行编译执行。无论是server运行模式下还是client运行模式下，都有可能采用解释+(C1 OR C2 )执行。但本文的重点不在执行，而是编译，包括前端编译器、C1 JIT、C2 JIT。<br><a href="https://blog.csdn.net/gonghaiyu/article/details/110727963" target="_blank" rel="noopener">(85条消息) JVM（一）一文读懂Java编译全过程_jdk编译文件过程_gonghaiyu的博客-CSDN博客</a></li><li>matlab属于脚本语言，<strong>MAT</strong>LAB是解释型脚本，c语言是编译执行的语言，简单说MATLAB的解释程序是看一句代码执行一次，而C语言的编译器必须编译好源文件生成目标代码，再执行整个目标代码。</li><li>python也属于脚本语言。对于很多编程语言来说，程序都必须要有一个入口，比如C，C++，以及完全面向对象的编程语言Java，C#等。如果你接触过这些语言，对于程序入口这个概念应该很好理解，C，C++都需要有一个main函数作为程序的入口，也就是程序的运行会从main函数开始。同样，Java，C#必须要有一个包含Main方法的主类，作为程序入口。而Python则不同，它属于脚本语言，不像编译型语言那样先将程序编译成二进制再运行，而是动态的逐行解释运行。<strong>也就是从脚本第一行开始运行，没有统一的入口</strong>。<a href="https://zhuanlan.zhihu.com/p/43421411" target="_blank" rel="noopener">Python中<strong>main</strong>和<strong>init</strong> 的解析 - 知乎 (zhihu.com)</a></li></ol><h2 id="2-if-name-‘main‘"><a href="#2-if-name-‘main‘" class="headerlink" title="2. if name == ‘main‘:"></a>2. if <strong>name</strong> == ‘<strong>main</strong>‘:</h2><p>一般的python主文件中，会有一句<code>if __name__ == &#39;__main__&#39;:</code>而代码就是从这开始运行，而这个时候仔细观察会发现，路径下面不存在了<code>__init__.py</code>的py文件了。</p><p><code>if __name__ == &#39;__main__&#39;</code>的意思是：<strong>当.py文件被直接运行时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块将被运行；当.py文件以模块形式被导入时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块不被运行。</strong></p><h3 id="那单独的-init-py表示什么呢？"><a href="#那单独的-init-py表示什么呢？" class="headerlink" title="那单独的__init__.py表示什么呢？"></a>那单独的<code>__init__.py</code>表示什么呢？</h3><p>如果<code>main.py</code>里面没有<code>if __name__ == &#39;__main__&#39;:</code>则在项目根目录下会存在一个路口文件<code>__init__.py</code>———————————不一定，根据需求来</p><p><strong><strong>init</strong>.py 文件的作用是将文件夹变为一个Python模块,Python 中的每个模块的包中，都有<strong>init</strong>.py 文件。</strong></p><p>通常<strong>init</strong>.py 文件为空，但是我们还可以为它增加其他的功能。我们在导入一个包时，实际上是导入了它的<strong>init</strong>.py文件。这样我们可以在<strong>init</strong>.py文件中批量导入我们所需要的模块，而不再需要一个一个的导入。更有甚者，可以将需要的模块直接写在<strong>init</strong>.py文件中。<br>如：<a href="https://github.com/ai-forever/Kandinsky-2">GitHub - ai-forever/Kandinsky-2: Kandinsky 2 — multilingual text2image latent diffusion model</a></p><p>一般我们导入一个包时候，是导入包中的模块,如导入<code>param_stamp</code>包中的<code>get_param_stamp_from_args</code>模块，实际上先导入<code>param_stamp</code>文件夹中的<code>__init__.py</code>文件，然后再根据<code>import</code>导入<code>get_param_stamp_from_args</code>文件</p><p><code>from param_stamp import get_param_stamp_from_args</code></p><p><a href="https://www.cnblogs.com/Lands-ljk/p/5880483.html" target="_blank" rel="noopener">Python <strong>init</strong>.py 作用详解 - Data&amp;Truth - 博客园 (cnblogs.com)</a></p><h2 id="3-将自己的项目通过pip安装方法"><a href="#3-将自己的项目通过pip安装方法" class="headerlink" title="3. 将自己的项目通过pip安装方法"></a>3. 将自己的项目通过pip安装方法</h2><p><a href="https://zhuanlan.zhihu.com/p/363066725" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/363066725</a><br><a href="https://zhuanlan.zhihu.com/p/363066725" target="_blank" rel="noopener">如何用 pip 安装自己写的包 - 知乎 (zhihu.com)</a></p><p><strong>注意一个点，由平时的经验可知，安装一个库时，会将这个库所依赖的库一起安装，而这个库所依赖的库可能会和已有的库所冲突，这是在安装第三方库时经常出现的问题，容易造成其他项目所需要的库的变化从而不能成功运行。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论坛 </tag>
            
            <tag> python </tag>
            
            <tag> 基础深究 </tag>
            
            <tag> 脚本语言和编译性语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diy组装电脑清单 | 跟踪价格变化</title>
      <link href="/2023/04/25/3-zong-jie/diy-zu-zhuang-dian-nao-qing-dan/"/>
      <url>/2023/04/25/3-zong-jie/diy-zu-zhuang-dian-nao-qing-dan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="目前联想R7000P配置"><a href="#目前联想R7000P配置" class="headerlink" title="目前联想R7000P配置"></a>目前联想R7000P配置</h1><p>电脑概览<br>电脑型号  联想 82GR<br>操作系统  Microsoft Windows 10 家庭中文版 (64位)<br>CPU  AMD Ryzen 7 4800H with Radeon Graphics(2900 MHz)<br>主板  联想 LNVNB161216<br>内存  16.00 GB (   3200 MHz)<br>主硬盘  512 GB (三星 SAMSUNG MZVLB512HBJQ-000L2 已使用时间: 未知)<br>显卡  NVIDIA GeForce RTX 2060 (6144MB)<br>显示器  京东方 BOE CQ 32位真彩色 144Hz<br>声卡  G70 [GeForce 7800 GS]<br>网卡  Intel(R) Wi-Fi 6 AX200 160MHz</p><h1 id="采购清单"><a href="#采购清单" class="headerlink" title="采购清单"></a>采购清单</h1><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>|组件| 厂商 |价格|时间<br>|—-|—-|—-|—-|—-|—-|<br>| CPU  |  intel|100|DD<br>| A1 |  A2|100|DD<br>| A1 |  A2|100|DD<br>| A1 |  A2|100|DD</p><h2 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h2><p>|组件| 厂商 |价格|时间<br>|—-|—-|—-|—-|—-|—-|<br>| 主板  |  intel|100|DD<br>| A1 |  A2|100|DD<br>| A1 |  A2|100|DD<br>| A1 |  A2|100|DD</p><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><table><thead><tr><th>组件</th><th>厂商</th><th>价格</th><th>容量</th><th>时间</th><th>链接</th></tr></thead><tbody><tr><td>内存</td><td>金百达</td><td>198</td><td>16GB</td><td>2023.4.25</td><td><a href="https://item.m.jd.com/product/100014056864.html?&utm_source=iosapp&utm_medium=appshare&utm_campaign=t_335139774&utm_term=CopyURL&ad_od=share&gx=RnAomTM2P3GfqMxj3PItPJbHGj94kA&gxd=RnAokDNabzTRzZ9HqIB3WM74Gq2V3z1jcVuh9HR3UgC9Z4i1toOaVb3C6uUQRPQ" target="_blank" rel="noopener">链接</a></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>## 硬盘</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>组件</td><td>厂商</td><td>价格</td><td>时间</td><td>链接</td><td></td></tr><tr><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td></tr><tr><td>固态硬盘</td><td>长江储存</td><td>599</td><td>2023.4.25</td><td><a href="https://item.m.jd.com/product/100042016272.html?&utm_source=iosapp&utm_medium=appshare&utm_campaign=t_335139774&utm_term=CopyURL&ad_od=share&gx=RnAomTM2P3GfqMxj3PItPJbHGj94kA&gxd=RnAokDNabzTRzZ9HqIB3WM74Gq2V3z1jcVuh9HR3UgC9Z4i1toOaVb3C6uUQRPQ" target="_blank" rel="noopener">固态</a></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>## 显卡</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>组件</td><td>厂商</td><td>价格</td><td>时间</td><td></td><td></td></tr><tr><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td></tr><tr><td>主板</td><td>intel</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>## 显示器</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>组件</td><td>厂商</td><td>价格</td><td>时间</td><td></td><td></td></tr><tr><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td><td>—-</td></tr><tr><td>主板</td><td>intel</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr><tr><td>A1</td><td>A2</td><td>100</td><td>DD</td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 动手 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diy </tag>
            
            <tag> 组装电脑 </tag>
            
            <tag> 硬件选择 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VPS搭建一个可服务多人的机场 | 将渠道备份</title>
      <link href="/2023/04/25/1-xiang-mu/vpn-da-jian-xiang-mu/shi-yong-vps-da-jian-yi-ge-ke-fu-wu-duo-ren-de-ji-chang/"/>
      <url>/2023/04/25/1-xiang-mu/vpn-da-jian-xiang-mu/shi-yong-vps-da-jian-yi-ge-ke-fu-wu-duo-ren-de-ji-chang/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="泡芙云（机场）"><a href="#泡芙云（机场）" class="headerlink" title="泡芙云（机场）"></a>泡芙云（机场）</h1><p>泡芙云（PaofuCloud）<strong>机场</strong>是一家老牌翻墙机场，成立于2018年，机场主在海外，早先采用IEPL 专线过境，在运营商拔线之后线路调整为隧道中转，协议为流行的Shadowsocks ，兼容ShadowsocksR（即SSR）</p><p>泡芙云加速由海外华人团队运营，老牌翻墙服务提供商，自2017年成立以来持续为中国大陆网民提供稳定可靠的翻墙服务。泡芙云加速采用的是当下十分流行的 Shadowsocks 翻墙协议，并通过国内服务器接入，IEPL内网专线出境，不经过互联网防火长城（GFW），即使是敏感时期，服务也能保证稳定可靠。IEPL内网专线是比一般IPLC内网专线等级更高的专线，稳定性更上一层楼。泡芙云使用需要搭配第三方开发的软件 Clash（Windows、macOS、安卓） 或 Shadowrocket （iOS）配合使用。</p><p><a href="https://vpnsg.net/paofu-cloud-review/" target="_blank" rel="noopener">泡芙云加速深度评测－最好用的翻墙VPN推荐-VPN时光网 (vpnsg.net)</a><br><a href="https://clashnode.xyz/how-about-paofu-cloud-vpn/" target="_blank" rel="noopener">泡芙云加速怎么样？| 速度测试 | 机场节点国家和地区 | YouTube 测试 | 下载测试-Clash Node</a><br><a href="https://2023vpn.net/ss-v2ray-trojan-providers/" target="_blank" rel="noopener">2023 年 50+ 好用的翻墙机场推荐 (2023vpn.net)</a></p><p><strong>机场VPN区别几何？</strong>正如上面提到的，一般翻墙机场没有自主开发的软件，只能使用第三方翻墙软件，而我们常说的VPN服务商，是将线路和软件是整合到一起的，用户直接再VPN软件中登录账号即可使用，对于新手而言更为方便。<br><a href="https://www.vpn-china.org/the-difference-between-airport-and-vpn/" target="_blank" rel="noopener">https://www.vpn-china.org/the-difference-between-airport-and-vpn/</a><br>我们现在越来越多的听到”<a href="https://www.vpn-china.org/tag/285" title="机场" target="_blank" rel="noopener">机场</a>“这个术语，有的人会感到疑惑，翻墙不是用<a href="https://www.vpn-china.org/tag/19" title="VPN" target="_blank" rel="noopener">VPN</a>软件吗？那么机场是干什么的？机场应该怎么用？机场和VPN的区别是什么？本文将一一进行解释。</p><h2 id="翻墙的概念"><a href="#翻墙的概念" class="headerlink" title="翻墙的概念"></a>翻墙的概念</h2><p>首先我们需要理解翻墙的概念。翻墙的本质就是绕过中国大陆的互联网防火墙，所以叫”翻墙“。因为防火墙（GFW）的作用是阻止人们访问国外的互联网，相当于一堵现实中的墙壁，而通过使用额外的技术和软件，打破防火墙的限制，能够访问国外的网站，这个就是翻墙的本质。</p><p>那么防火墙是（GFW）如何阻止我们的呢？很简单，当ISP服务商发现你的IP是中国国内的IP，而目标访问的地址是国外的网站地址，它就断开你的连接。那么如何破解这一点呢，那就是首先要把自己的IP地址伪装成国外的IP地址，这样防火墙就不会断开你的连接。</p><p>翻墙本身其实是有很多种方式，我们讲一个最简单的方式，那就是租一个境外的Windows服务器，你先连接这个windows服务器，这是合法的，因为类似阿里云等IDC服务商都有境外的windows服务器出租，防火墙并不针对这些非个人的业务进行拦截，所以你是可以连接到境外的服务器的，然后你在境外的windows服务器上打开浏览器，就可以访问境外的网站了，因为境外服务器不受防火墙（GFW）的管辖。</p><p>但是这么做的问题在于，成本太高了，一台境外的服务器，能够让你流畅运行去访问网络的，每个月需要10-50美金，约合人民币60~300元不等，仅仅是用来翻墙，这个成本太高，而且万一你的境外服务器的IP也忽然被列入了拦截名单，那你就要重新租服务器。</p><p>更节约的方法就是使用VPN软件或我们将要提到的机场软件。他们的本质是在境外租了很多服务器，然你可以自由切换不同的境外IP地址，并对你的信息进行加密保护。而每一个服务器不止你一个人使用，所以本质上就是共享境外服务器翻墙，成本平均到每个人头上就会便宜。</p><h2 id="VPN的工作机制和困境"><a href="#VPN的工作机制和困境" class="headerlink" title="VPN的工作机制和困境"></a>VPN的工作机制和困境</h2><p>VPN是专用虚拟网的缩写，就是在你和VPN服务器之间建立一个加密的信道，然后转发你的信息给你要访问的目标网站，并把回传信息加密传输给你。本站之前所做的很多评测，都是针对VPN软件。这些软件大多都是采用一键访问的模式，自动的加密你的数据，自动建立信道，然后由它的VPN服务器进行解析数据和返回数据。</p><p>但是从2021年开始，很多朋友会发现，VPN逐渐在中国国内不太好用了。这是为什么呢，因为每一个VPN都有自己的协议和相对固定的服务器IP，防火墙如果识别了这个VPN的协议，再识别服务器IP，就可以比较轻松的进行拦截。</p><p>这种情况越来越常见了。最早被完全封堵拦截的是NordVPN，这款VPN廉价又快速，但从2020年后就基本无法连接到服务器了，之后就是<a href="https://www.vpn-china.org/chinese-review-and-guide-of-expressvpn/" title="ExpressVPN" target="_blank" rel="noopener">ExpressVPN</a>。本来ExpressVPN素来以速度快而著称，但如果连接不上，速度快又有什么用呢。我们也和ExpressVPN的开发人员讨论过，他们觉得被中国拦截是一件令人精疲力尽的事，所以他们对打破限制没有信心。</p><p>本站在2023年2月也更新了之前测评的几款VPN软件，其中ExpressVPN和PandaVPN已经被列为“无法在中国使用的VPN”。我们的原则是，<strong>如果我们都无法在国内正常使用，那么就不会向读者去推荐</strong>。<strong>我们所推荐的，一定是我们自己也可以正常使用的翻墙工具</strong>。</p><p>您可以关注<a href="https://www.vpn-china.org/update-log/" target="_blank" rel="noopener">本站的更新日志</a>，来获取最新的变化。</p><h2 id="机场又是什么？和VPN有什么区别？"><a href="#机场又是什么？和VPN有什么区别？" class="headerlink" title="机场又是什么？和VPN有什么区别？"></a>机场又是什么？和VPN有什么区别？</h2><p>机场是从2019年以后兴起的新的翻墙技术。它的工作原理和VPN不同。VPN一般是自己有专门开发的软件，和VPN厂商提供的服务器进行配合，来满足用户的需求。而机场则是开源软件和自主搭建的服务器进行配合。</p><p>打个比方，VPN厂商的枪和子弹是配套的，假如枪是VPN软件，那么子弹就是服务器，其他的VPN厂商是无法用别的厂商的服务器的。但是机场的枪是开源的，只要知道密钥，就可以用其他人的子弹（服务器）。</p><p>那么为什么叫机场呢？和飞机有什么关系吗？并不是的，最早的机场服务器商用的开源软件基本上都是Shadowsocks（SS）或者ShadowsocksR（SSR），他们不开发软件，只搭建SS或SSR协议许可的服务器，用户只要获得订阅，就可以更新服务器。如果换一个服务商，甚至都不用重新下载SS或SSR，直接换服务器订阅就好了，非常方便。</p><p>而SS和SSR的图标，就是一个纸飞机logo，那么既然软件是纸飞机，提供给软件的服务商就叫机场了，听起来也非常合理不是吗？</p><p>查看本文《<a href="https://www.vpn-china.org/history-of-several-airport-agreements/" target="_blank" rel="noopener">机场的几种协议的历史</a>》来了解关于机场类代理协议的发展历史。</p><h2 id="机场的现状"><a href="#机场的现状" class="headerlink" title="机场的现状"></a>机场的现状</h2><p>机场经过了几年的发展，一直由开源社区（主要是github）的程序员在维护，本身是非盈利性质的。而服务商则遵循技术标准和规范，给第三方用户搭建服务器，来实现VPN翻墙服务。</p><p>目前Shadowsocks和ShadowsocksR也逐渐被中国识别和拦截，取代SS和SSR的新的V2ray、Clash等开源机场软件，但人们仍然习惯性的把这一类软件都叫做飞机或机场。</p><p>所以我们也注意到这个现象，那就是传统VPN正在中国慢慢消沉，而开源翻墙机场类软件正在崛起，很多传统VPN服务商甚至开始考虑支持机场的SS/SSR/V2ray/Trojan协议。</p><p>机场的协议和主流软件可以看看本文《<a href="https://www.vpn-china.org/history-of-several-airport-agreements/" target="_blank" rel="noopener">机场的几种协议的历史</a>》来了解。当然我们也不需要太多研究，因为主流机场服务商都会提供，这方面的差别不是很大。</p><p>“机场类”翻墙软件从早年的GoAgent，ShadowSocks出现开始就是为了帮助人们FQ，这几年陆续出现各种各样的技术，虽然不少技术开发者都不得不撤下原始代码，但在国内外开源社区的不懈努力下，核心的代码实现仍然被保留下来，目前活跃在FQ人群中的技术有：SSR，V2Ray，Clash，Trojan。这些技术的流量伪装能力更强，能通过GFW较难全局屏蔽的正常网络应用端口如HTTP/HTTPS/SSH端口通信，所以有着不错的连接成功率和稳定性，加上能够灵活地在与中国大陆路由状态较好的地区如香港/台湾/美西/日本/韩国等选择性针对性地部署服务器，能提供充足的带宽和网速，非常受中国国内的IT从业群体欢迎，在这个人群中有着极高的普及率，如果你已是其中之一，大概不需要我多作介绍。</p><h2 id="机场安全吗？"><a href="#机场安全吗？" class="headerlink" title="机场安全吗？"></a>机场安全吗？</h2><p>我们曾经在<a href="https://www.vpn-china.org/what-are-the-differences-between-vpn-and-proxy/" target="_blank" rel="noopener">VPN 和代理的区别的有哪些</a>和<a href="https://www.vpn-china.org/what-is-a-proxy-server/" target="_blank" rel="noopener">代理服务器Proxy是什么</a>这两篇文章中提到过代理，而目前的机场本质上也是代理。之前我们提倡用VPN而不是代理，因为VPN更安全，但经过几年的发展，机场类代理软件的安全性得到了提高，得益于引入了<strong>TLS安全协议</strong>，使得用户的匿名度和加密性能够和VPN不相上下。</p><p>如果读者从未接触过机场类翻墙软件，简单省时间不走弯路的方法是找个靠谱的视频教程来操作，油管上其实有很多，搜一些即可，比如“V2Ray教程”，中国是FQ第一大国，油管上的中文视频UP主对这类技术的跟踪非常快，不妨持续关注一些频道，你会发现即使只搜技术名称，出来的内容也基本上也是中文的。这类翻墙软件几乎都是开源的，在Github上公开代码，很容易搜到，比如Github上的Clash相关代码库，有技术基础的朋友也可以从那里开始。开源代码的好处是，你总是能找到软件的源头，只要从源头下载，就不用担心有人在软件里种植黑客木马，而开源作者的代码总是受到各路人马的审查，稍微有点不对劲就身败名裂了，这种同业评审制度能够保证产品的安全性和可靠性。</p><p>这里有一份机场类软件客户端的列表，基本涵盖了最主流的机场类软件。下载地址基本都是github源开发者地址。</p><p><a href="https://www.vpn-china.org/the-difference-between-airport-and-vpn/" target="_blank" rel="noopener">机场是什么意思_机场和VPN的区别是什么_机场和VPN选哪个好 | 【2023-4月更新】- VPN中国 (vpn-china.org)</a><br>机场类软件客户端</p><h2 id="机场未来的趋势"><a href="#机场未来的趋势" class="headerlink" title="机场未来的趋势"></a>机场未来的趋势</h2><p>根据目前的现状，我们判断机场可能会比传统VPN具有更广泛的未来。机场更灵活，更容易迁移服务商，从价格上来说也更廉价。而且开源社区对机场类代理软件的支持非常强大，一直在不停的更新技术，这就比传统VPN厂商更有活力。所以我们有理由相信机场类代理软件能够获得更强的生命力。</p><p>更重要的是，有很多人在免费的提供机场代理的服务，这是一种无私的社区动力，使我们能够很容易获得短期的翻墙访问，从而促进了社区的活力。</p><h2 id="机场存在的问题"><a href="#机场存在的问题" class="headerlink" title="机场存在的问题"></a>机场存在的问题</h2><p>在我们看来，作为一种新兴的翻墙技术，机场本身没有问题，开源社区也很好。但机场的问题主要是出在机场的代理服务商。</p><p>想要搭理一个机场支持的跨境服务器并不难，开源社区已经准备好了一切，所以想要从中赚钱的代理服务商的门槛变低了，任何人都可以租几台服务器开一个”机场代理“，并宣称自己是速度最快的。由于门槛低，那么欺诈事件就层出不穷。代理商本身并没有很好的技术能力，访问速度完全是由IDC服务商的服务器质量决定的，如果一个代理商宣称自己用的是最好的服务器，诱导用户付费后，用户会发现其实速度很糟糕，时好时断。</p><p>更恶劣的还有跑路，代理商免费提供测试服务器，但是当你付费后，就再也联系不上代理商了，你的钱就被黑掉了。很多代理商用一套开源网站页面+一台测试服务器就骗取了大量的金钱，一时间满地都是骗子（主要是中国人）开的假代理服务，网页的样子看起来都差不多，套路也都一样。</p><p>如果要选择机场服务商，需要谨记这几点：</p><ul><li>任何一个机场都可能跑路：因为这两年这种事太多了，你最好假设购买的机场明天就会跑路，购买套餐的时候，宁可稍微贵一点，也不要买长期套餐（包括本站推荐的机场服务），除非你觉得损失长期套餐那点钱对你来说不算什么，那请随意</li><li>几乎所有的机场都有中国背景：有很多机场的老板肉身就在中国，我相信出卖客户绝非他们本意，但你应该理解他们根本上无法为你的数据和人身安全负责，不排除有些机场主很讲道义，在特定情势下，宁可格掉服务器也不交出数据，但你不该假设所有人都是这样，注册时你不该提供国内邮箱/微信/支付宝账号等任何可以直接追查到你个人身份的特征信息，你应该选择隐私的途径获得机场服务，用国外邮箱，通过数据存于海外的支付方式付款</li><li>功能限制：几乎所有的机场都不能痛快开BT/P2P下载，介意的朋友绕道，各个机场有自己的流量审计规则， 也就是机场服务器屏蔽的服务，不了解的买之前务必问清楚</li><li>机场类服务商基本上是不支持退款的，不仅仅是他们不愿意退款，而是缺乏正规的退款金融渠道</li><li>隐私政策：和一线VPN类翻墙软件的零日志政策不同，据我了解，机场普遍会记录真实IP，某些机场记录的可能远远不止IP，风险在于作为普通用户，急于找到高性价比能FQ的工具，往往忽略隐私安全，绝大多数用户可能根本不在乎这个，但用户需要理解连上机场以后，你的上网流量都会经过陌生人维护的服务器，你的个人数据被如何实用，实际上只受维护人的良心制约，这是个极不可靠的事，特别是一个有良心的人受到某种胁迫的时候</li></ul><p>所以这些才是令人担心的问题。这也是我们决定要开始进行机场类代理软件的评测，我们甚至决定启用黑名单制度，提前警告用户不要落入骗钱的全套。<strong>我们通过评测找出真正优秀和稳定的代理服务商，不仅仅是为了读者，因为我们自己也要用</strong>。</p><h2 id="Clash客户端"><a href="#Clash客户端" class="headerlink" title="Clash客户端"></a>Clash客户端</h2><p>Clash 是一个使用 Go 语言编写，基于规则的跨平台代理软件核心程序。<br>Clash for Windows 是目前在 Windows 上最好用的图形化分支。通过 Clash API 来配置和控制 Clash 核心程序，降低了 Clash 的使用成本，小白也能轻松入门使用。<br><a href="https://doc.miyun.app/app/clash-win-detail/" target="_blank" rel="noopener">Clash for Windows 使用教程（详解，全流程） 🌟 觅云🔥 (miyun.app)</a></p><h2 id="互联网服务商Internet-Server-Provider（ISP）"><a href="#互联网服务商Internet-Server-Provider（ISP）" class="headerlink" title="互联网服务商Internet Server Provider（ISP）"></a>互联网服务商Internet Server Provider（ISP）</h2><p><a href="https://www.cnblogs.com/onepixel/p/10238221.html" target="_blank" rel="noopener">国内四大骨干网与十大ISP服务商 - 一像素 - 博客园 (cnblogs.com)</a></p><h1 id="如何建一个机场，如何和客户端对接"><a href="#如何建一个机场，如何和客户端对接" class="headerlink" title="如何建一个机场，如何和客户端对接"></a>如何建一个机场，如何和客户端对接</h1><p><a href="https://www.youtube.com/watch?v=OWcwU76Zin8" target="_blank" rel="noopener">【CC字幕】超暴利行业：机场VPN月入十万，百万？机场主vpn是暴利行业？VPN的利润能有多大？机场主vpn会坐牢吗？为什么机场主vpn总跑路？ - YouTube</a></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 论坛 </tag>
            
            <tag> 好玩的技术 </tag>
            
            <tag> 技术备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置Docker环境</title>
      <link href="/2023/04/10/4-tong-yong-pei-zhi/pei-zhi-docker-huan-jing/"/>
      <url>/2023/04/10/4-tong-yong-pei-zhi/pei-zhi-docker-huan-jing/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="Docker的Chatgpt介绍"><a href="#Docker的Chatgpt介绍" class="headerlink" title="Docker的Chatgpt介绍"></a>Docker的Chatgpt介绍</h2><p>Docker是一个开源的容器化平台，可以帮助开发者将应用程序及其所有依赖项打包到一个轻量级、可移植的容器中。这些容器可以在任何支持Docker的操作系统上运行，提供了一种快速、一致和可靠的应用程序部署方式。<br>Docker的核心概念包括：</p><ol><li>容器：容器是一个独立运行的应用程序单元，它包含了应用程序及其所有依赖项（库、环境变量等）。容器可以被快速部署、复制和扩展，与主机环境隔离开来，确保应用程序在不同环境中的一致性。</li><li>镜像：镜像是一个只读的模板，用于创建容器。镜像包含了应用程序运行所需的所有文件系统、库和环境设置。通过使用Dockerfile定义，可以自动化地构建镜像，使得应用程序的部署过程可重复且可靠。</li><li>仓库：仓库用于存储和分享镜像。Docker Hub是官方的公共仓库，其中包含了许多常用的镜像。同时，你也可以创建自己的私有仓库来存储和管理镜像。<br>Docker的优势在于轻量级、快速启动、易于扩展和隔离性等特点。它可以帮助开发者更高效地开发、测试和部署应用程序，且减少了应用程序在不同环境中出现问题的可能性。</li></ol><p>除了基本的容器化功能，Docker还提供了许多附加功能，如容器编排（Docker Compose、Docker Swarm、Kubernetes）、网络管理、存储管理等，以满足不同场景下的需求。</p><h2 id="配置Linux-CentOS操作系统上的Docker环境"><a href="#配置Linux-CentOS操作系统上的Docker环境" class="headerlink" title="配置Linux CentOS操作系统上的Docker环境"></a>配置Linux CentOS操作系统上的Docker环境</h2><p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Install Docker Engine on CentOS</a><br>为避免老版本的Docker干涉环境的正常部署，在安装新版本之前卸载旧版本以及相关的依赖项。</p><pre class="line-numbers language-shell"><code class="language-shell">sudo yum remove docker \                  docker-client \                  docker-client-latest \                  docker-common \                  docker-latest \                  docker-latest-logrotate \                  docker-logrotate \                  docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装<code>yum</code>的<code>yum-utils</code>依赖用于添加<code>docker</code>仓库</p><pre class="line-numbers language-shell"><code class="language-shell">sudo yum install -y yum-utilssudo yum-config-manager --add-repo \    https://download.docker.com/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后安装Docker Engine(Docker 引擎)，包括<code>docker-compose</code>编排工具</p><pre class="line-numbers language-shell"><code class="language-shell">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完毕环境之后就可以通过<code>sudo systemctl start docker</code>来启动<code>Docker</code>，通过运行<code>helloworld</code>镜像来验证Docker引擎安装是否成功，当<code>helloworld</code>镜像构建的容器运行时，<code>Docker</code>会打印一条确认消息并退出。确认<code>Docker</code>能正常运行以后就可以从项目中拉取镜像了。</p><pre class="line-numbers language-shell"><code class="language-shell">sudo docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动、停止和重启<code>Docker</code>服务</p><pre class="line-numbers language-shell"><code class="language-shell">systemctl start docker  # 启动docker服务systemctl stop docker  # 停止docker服务systemctl restart docker  # 重启docker服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>查看<code>Docker</code>启动状态和信息</p><pre class="line-numbers language-shell"><code class="language-shell">systemctl status docker #docker状态docker -v #docker版本docker info #docker信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><a href="https://blog.unanaos.com/articles/157" target="_blank" rel="noopener">Docker + Jenkins + SpringBoot 部署项目 (unanaos.com)</a></p><ul><li>搜索仓库镜像：docker search 镜像名</li><li>拉取镜像：docker pull 镜像名</li><li>查看正在运行的容器：docker ps</li><li>查看所有容器：docker ps -a</li><li>删除容器：docker rm container_id</li><li>查看镜像：docker images</li><li>删除镜像：docker rmi image_id</li><li>启动（停止的）容器：docker start 容器ID</li><li>停止容器：docker stop 容器ID</li><li>重启容器：docker restart 容器ID</li><li>启动（新）容器：docker run -it ubuntu /bin/bash</li><li>进入容器：docker attach 容器ID或docker exec -it 容器ID /bin/bash，推荐使用后者。</li><li>查看日志: docker logs 容器ID或者 docker logs -f 容器ID</li><li>查看docker 镜像/容器的元数据: docker inspect<br>eg:查看容器数据挂载目录：docker inspect container_name | grep Mounts -A 30</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GPT将会真正改变互联网生态：建立专属的知识库 | AIGC应用起来！</title>
      <link href="/2023/04/10/2-diao-yan-xue-xi-si-kao/gen-zong-ren-gong-zhi-neng-gpt-dui-ge-xing-de-gai-bian/gpt-jiang-hui-zhen-zheng-gai-bian-hu-lian-wang-sheng-tai/"/>
      <url>/2023/04/10/2-diao-yan-xue-xi-si-kao/gen-zong-ren-gong-zhi-neng-gpt-dui-ge-xing-de-gai-bian/gpt-jiang-hui-zhen-zheng-gai-bian-hu-lian-wang-sheng-tai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>在这个高效的时代，技术的更新换代已经用月乃至天来度量了，特别是GPT4的出现，人工智能在内容收集和语言这个部分已经表现出超越人类的表现，这真的是让人惊喜又惊讶。但是另一方面，前所未有的人工智能技术控制人类的担忧也变得越来越现实。</p><p>以内容网站为例，语言模型从网站上收集内容训练模型，而随着模型生成的内容越来越逼真，质量也越来越高。产出的AIGC内容必然会在互联网中传递，这种生成信息相对于人类产出是巨大的，足以改变这类网站的运行方式。从前的知识分享会变得没有那么重要了，因为模型的语料库大得多，组织的内容更为全面，除了原创性的内容，知识覆盖的网站都将变得不堪一击。</p><p>自己的第一个编程项目就是做了一个知识总结和分享的平台，实现网站的代码逻辑后，后续的网站运营反而更加困难，因为个人精力有限，就算是收集互联网的内容做知识总结都很费时费力，更不用说产出大量的原创内容了。</p><p>面对这样的变局，先去学习才能理解AIGC到底有多大的能力改变内容网站的生态，那就先做一个GPT生成的内容网站吧！！！</p><h2 id="2-搭建网站"><a href="#2-搭建网站" class="headerlink" title="2. 搭建网站"></a>2. 搭建网站</h2><p>搭建的网站也有好几个了，从个人博客、论坛到统一接口的网站，都需要完成大量的代码，前后端兼备才行。而hexo、vue这些前端的部署方式大大缩减了开发周期。</p><p>之前用hexo搭建过个人博客，这次使用vuepress来构建。<br><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener">VuePress (vuejs.org)</a></p><p>VuePress 由两部分组成：第一部分是一个<a href="https://github.com/vuejs/vuepress/tree/master/packages/%40vuepress/core">极简静态网站生成器 (opens new window)</a>，它包含由 Vue 驱动的<a href="https://vuepress.vuejs.org/zh/theme/" target="_blank" rel="noopener">主题系统</a>和<a href="https://vuepress.vuejs.org/zh/plugin/" target="_blank" rel="noopener">插件 API</a>，另一个部分是为书写技术文档而优化的<a href="https://vuepress.vuejs.org/zh/theme/default-theme-config.html" target="_blank" rel="noopener">默认主题</a>，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。</p><p>每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><h2 id="3-自动从AI中获取内容"><a href="#3-自动从AI中获取内容" class="headerlink" title="3. 自动从AI中获取内容"></a>3. 自动从AI中获取内容</h2><p><a href="https://github.com/liyupi/yu-auto-reply">https://github.com/liyupi/yu-auto-reply</a><br><a href="https://www.bilibili.com/video/BV12h411u7s1/?spm_id_from=333.788&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV12h411u7s1/?spm_id_from=333.788&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>建立一个专属的知识库</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 网站 </tag>
            
            <tag> AIGC </tag>
            
            <tag> GPT </tag>
            
            <tag> 内容生成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新一些好玩的AI软件 | 开发AI软件！</title>
      <link href="/2023/04/06/2-diao-yan-xue-xi-si-kao/geng-xin-yi-xie-hao-wan-de-ai-ruan-jian/"/>
      <url>/2023/04/06/2-diao-yan-xue-xi-si-kao/geng-xin-yi-xie-hao-wan-de-ai-ruan-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="如何训练个人的GPT"><a href="#如何训练个人的GPT" class="headerlink" title="如何训练个人的GPT"></a>如何训练个人的GPT</h1><p><a href="https://www.v2ex.com/t/914739" target="_blank" rel="noopener">如何训练 chatgpt3 - V2EX</a><br><a href="https://platform.openai.com/docs/guides/fine-tuning" target="_blank" rel="noopener">Fine-tuning - OpenAI API</a><br><a href="https://openai.com/pricing" target="_blank" rel="noopener">https://openai.com/pricing</a></p><h1 id="如何使用AI生成图片"><a href="#如何使用AI生成图片" class="headerlink" title="如何使用AI生成图片"></a>如何使用AI生成图片</h1><p><a href="https://www.youtube.com/watch?v=DWmWwYsPfKs" target="_blank" rel="noopener">用AI画图赚钱，让计算机成为你的金矿 - YouTube</a><br>SD stable difussion 语言生成<a href="https://stablediffusionweb.com/" target="_blank" rel="noopener">Stable Diffusion Online (stablediffusionweb.com)</a><strong>大模型</strong><br>基于SD的小模型<a href="https://github.com/jlcxxzj/stable-diffusion-webui">jlcxxzj/stable-diffusion-webui: Stable Diffusion web UI (github.com)</a><br>文本生成图片：<a href="https://www.midjourney.com/home/?callbackUrl=%2Fapp%2F" target="_blank" rel="noopener">Midjourney</a><strong>使用量大</strong><br><a href="https://medium.com/@croath/%E4%BD%8E%E6%88%90%E6%9C%AC%E4%BD%93%E9%AA%8C%E7%94%9F%E6%88%90-ai-%E5%B0%8F%E5%A7%90%E5%A7%90%E7%85%A7%E7%89%87-85ffa7c13cd7" target="_blank" rel="noopener">https://medium.com/@croath/%E4%BD%8E%E6%88%90%E6%9C%AC%E4%BD%93%E9%AA%8C%E7%94%9F%E6%88%90-ai-%E5%B0%8F%E5%A7%90%E5%A7%90%E7%85%A7%E7%89%87-85ffa7c13cd7</a></p><h1 id="vscode快捷键"><a href="#vscode快捷键" class="headerlink" title="vscode快捷键"></a>vscode快捷键</h1><p><a href="https://www.bilibili.com/video/BV1i24y1L7uG/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">VSCode 日常工作流分享_哔哩哔哩_bilibili</a></p><p>1.linux压缩包<br><a href="http://c.biancheng.net/view/781.html" target="_blank" rel="noopener">http://c.biancheng.net/view/781.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> 博客 </tag>
            
            <tag> AI </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化分析金融学理论基础|小白篇</title>
      <link href="/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/"/>
      <url>/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-调研"><a href="#1-调研" class="headerlink" title="1. 调研"></a>1. 调研</h2><h3 id="科技成果有一条清晰的发展线索，那就是更有效率的获取能量和更快速的传递信息。"><a href="#科技成果有一条清晰的发展线索，那就是更有效率的获取能量和更快速的传递信息。" class="headerlink" title="科技成果有一条清晰的发展线索，那就是更有效率的获取能量和更快速的传递信息。"></a>科技成果有一条清晰的发展线索，那就是更有效率的获取能量和更快速的传递信息。</h3><p>第一次工业革命的蒸汽时代、第二次工业革命电气时代核心是为了更有效率的获取能量。20世纪五十年代开启的信息时代并在今天逐渐产生的人工智能时代都是为了更高效的传递信息，包括早期的人和人的信息交互的web时代、现在人和机器的信息交互的智能时代。</p><h3 id="金融是依附于科技的："><a href="#金融是依附于科技的：" class="headerlink" title="金融是依附于科技的："></a>金融是依附于科技的：</h3><p><img src="//github.com/jlcxxzj/blog.github.io/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/3c665670-d42d-11ed-981a-4b4c2eb0ef11.jpeg?v=1&type=image" alt></p><p>作者在开始写这篇文档之前的一个多礼拜才开始接触量化分析这个领域，之前只当是金融领域的一个专业名词，就像你也不会去深究深度学习中变分自编码器是什么模型一样。一切的开端只是因为金融领域的同学在朋友圈发了一则招聘启事，私募公司量化交易岗位，声称同行业两三倍工资，而金融行业的基本工资水平也早有耳闻，还真让人想入非非。再看岗位要求，在软件编程和机器学习也算是摸爬滚打好几年了，程序能力还是可以的，于是找上同学，果断的投去了简历，完全不知道量化交易岗位比互联网大厂还要卷几个档次，清华北大也只是基本门槛。现在想还真是不知者无畏，结果可想而知是石沉大海。</p><h2 id="2-专业名词"><a href="#2-专业名词" class="headerlink" title="2. 专业名词"></a>2. 专业名词</h2><ol><li>投资回报率ROC<br>投入资本回报率 (Return on capital)<br>投资回报率=经营性税后净利润/(投资资本+有息负债)<br><a href="https://github.com/jlcxxzj/freqtrade-strategies#what-is-freqtrade">量化策略代码</a></li><li>以前的选股因子常用净资产收益率ROE，但是ROE有一个缺陷就是，如果企业猛如杠杆，再碰上顺周期，ROE的值会非常高，但是这样的经营是存在巨大的风险的，此处用ROC衡量企业的盈利能力相对合理一些。</li><li>毛利率<br>毛利率 = （营业收入 -营业成本）/营业收入</li><li>CTA（Commodity trading advisor，CTA）<br>量化CTA：<strong>基于机器的判断，基金管理人通过分析建立数量化的交易策略模型，由模型产生的买卖信号进行投资决策</strong>，人的错误判断对量化CTA的干扰比较小。 量化CTA也需要长期对数据的分析、参数的优化、模型的更新迭代，这个过程和量化选股很类似。<br>商品交易顾问（Commodity trading advisor，CTA）最早是美国监管机构对那些提供期货、期权及互换等衍生品交易建议的个人或组织的定义。现在CTA也作为部分资产管理机构的定义，指的是那些运用全球期货、期权和其他衍生品作为投资工具，对客户资产进行管理的机构（我们统称其为CTA<a href="https://www.zhihu.com/search?q=%E7%AD%96%E7%95%A5%E5%9F%BA%E9%87%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A949460995%7D" target="_blank" rel="noopener">策略基金</a>）。<br><img src="//github.com/jlcxxzj/blog.github.io/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/8144fe90-d5db-11ed-aabc-69b1aae6f169.jpeg?v=1&type=image" alt></li><li>OHLCV<br>也就是俗称的K线图或者蜡烛图的五个指标。<br><a href="https://zhuanlan.zhihu.com/p/91135577" target="_blank" rel="noopener">OHLCV 数据 - 知乎 (zhihu.com)</a></li><li>MACD指标<br><img src="//github.com/jlcxxzj/blog.github.io/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/a7a70830-d784-11ed-a90b-bd2c2a7b627b.jpeg?v=1&type=image" alt><br>MACD指标定义 MACD（Moving Average Convergence and Divergence) 是Geral Appel 于1979年提出的，<strong>利用收盘价的短期（常用为12日）指数移动平均线与长期（常用为26日）指数移动平均线之间的聚合与分离状况，对买进、卖出时机作出研判的技术指标</strong>。<br><a href="https://www.futunn.com/learn/detail-what-is-the-exponential-smoothing-moving-average-macd-63265-0" target="_blank" rel="noopener">什么是指数平滑异同移动平均线（MACD）？ (futunn.com)</a></li><li>RSI指标（Relative strength index）<br><img src="//github.com/jlcxxzj/blog.github.io/2023/04/05/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-jin-rong-xue-li-lun-ji-chu/39a5cc70-d786-11ed-a90b-bd2c2a7b627b.jpeg?v=1&type=image" alt><br><a href="https://bigquant.com/wiki/doc/zhibiao-gupiao-gongshi-celve-eUeAulPIqH" target="_blank" rel="noopener">RSI 指标：股票、公式、计算和策略 - AI量化知识库 - BigQuant</a><br><a href="http://m.feizui.com/gupiao/861.html" target="_blank" rel="noopener">RSI指标怎么看（图解）_肥嘴财经网 (feizui.com)</a></li><li>boll指标<br>布林线指标，即BOLL指标，其英文全称是“Bollinger Bands”，布林线(BOLL)由约翰·布林先生创造，其利用统计原理，求出股价的标准差及其信赖区间，从而确定股价的波动范围及未来走势，利用波带显示股价的安全高低价位，因而也被称为布林带。 其上下限范围不固定，随股价的滚动而变化。<br><a href="https://zhuanlan.zhihu.com/p/62373954" target="_blank" rel="noopener">BOLL指标详解，解密它的致命缺陷，布林线指标怎么看？ - 知乎 (zhihu.com)</a></li><li>WR指标，威廉指标值<br>威廉指标WR又叫威廉超买超卖指标，简称威廉指标，是由拉瑞·威廉在1973年发明的。威廉指标WR是指N日最高价与当日收盘价的差，除以N日最高价与最低价的差，结果放大100倍。依据“当日收盘价”的摆动点，兼具超买超卖和强弱分界的指标，度量市场处于超买还是超卖状态，辅助其他指标确认短期买卖信号。通俗来讲，可以这么理解，一个移动的小球在上有天花板、下有地板的空间里上下跳动。当小球向上撞到天花板就会调头向下，小球向下撞上地板就会反弹向上,而这个小球就是威廉指标。<br><a href="http://www.990755.com/stock/1126.html" target="_blank" rel="noopener">威廉指标（WR）正确的用法图解-深鱼财经网 (990755.com)</a></li></ol><h2 id="3-常用指标参考文献"><a href="#3-常用指标参考文献" class="headerlink" title="3.常用指标参考文献"></a>3.常用指标参考文献</h2><p><a href="https://blog.csdn.net/u011078141/article/details/89453203" target="_blank" rel="noopener">(79条消息) 一个量化交易策略师的自白_量化研报_redelego@cloud的博客-CSDN博客</a><br><a href="https://www.zhihu.com/question/21094650" target="_blank" rel="noopener">(3 封私信 / 80 条消息) 股票技术指标哪些最常用？ - 知乎 (zhihu.com)</a><br><a href="https://blog.csdn.net/Q1841085904/article/details/126661946" target="_blank" rel="noopener">(79条消息) 股票量化交易系统的指标和策略有哪些？_121463726的博客-CSDN博客</a><br><a href="https://www.myquant.cn/docs/python_strategyies/101" target="_blank" rel="noopener">alpha对冲(股票+期货) - 经典策略 - 掘金量化 (myquant.cn)</a><br><a href="https://redelego.blog.csdn.net/article/details/89453259" target="_blank" rel="noopener">https://redelego.blog.csdn.net/article/details/89453259</a><br><strong>MACD BOLL KDJ RSI</strong> 最常用，<strong>价格最容易作假，成交量最真实</strong>，实战中基本面量化最有效。<br><a href="https://blog.csdn.net/FrankieHello/article/details/85255134" target="_blank" rel="noopener">(79条消息) 量化投资之风险指标分析（alpha、beta、sharpe等）_alpha指标_敲代码的quant的博客-CSDN博客</a><br><a href="https://blog.csdn.net/FrankieHello/article/details/85255134" target="_blank" rel="noopener">(79条消息) 量化投资之风险指标分析（alpha、beta、sharpe等）_alpha指标_敲代码的quant的博客-CSDN博客</a></p><h2 id="4-其他参考链接"><a href="#4-其他参考链接" class="headerlink" title="4. 其他参考链接"></a>4. 其他参考链接</h2><ol><li><a href="https://www.zhihu.com/question/22211032/answer/2504619657" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 学习量化交易如何入门？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/24179101/answer/2188611287" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 量化交易都有哪些主要的策略模型？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/22948899/answer/255635595" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 有哪些值得推荐的量化投资类书籍？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/442308593/answer/2937912404" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 懂机器学习如何入门量化交易？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/531659524/answer/2939398957" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 一个量化策略的研发过程是怎么样的? - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/615917135" target="_blank" rel="noopener">做量化交易发愁写代码？一招教你白嫖GPT-4智能编程神器 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/268842359/answer/2942563157" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 如何制定一条量化交易的学习路线？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/326160252/answer/852531737" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 量化交易，你选择用什么平台来搭建自己的业务体系：商业软件、开源软件、自主开发？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.bilibili.com/video/BV1UJ411U7Kc/?spm_id_from=333.999.0.0" target="_blank" rel="noopener">SVM核方法–这是我见过最好的一个视频。。核技巧核函数_哔哩哔哩_bilibili</a></li><li><a href="https://www.youtube.com/watch?v=b8tYNGgV-u0" target="_blank" rel="noopener">浅析币圈量化框架freqtrade - YouTube</a></li><li><a href="https://www.youtube.com/watch?v=a3Q5gTqaHzc&list=PLkEP-p1U_o1UtijtjArJl1RbDBaX-QoMu" target="_blank" rel="noopener">【硬核搞钱1】零成本十分钟部署云端交易机器人 - YouTube</a></li><li><a href="https://www.bilibili.com/video/BV1FA4y1Z7NP/?spm_id_from=333.999.0.0" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1FA4y1Z7NP/?spm_id_from=333.999.0.0</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 量化分析 </category>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> 调研 </tag>
            
            <tag> 策略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化分析调试篇1|从源码上理解Freqtrade</title>
      <link href="/2023/04/04/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-diao-shi-pian-1/"/>
      <url>/2023/04/04/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-diao-shi-pian-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>在上节在基础篇2里将源代码成功跑通，接下来按debug的方式来建立各个py文件的关系，为后面的加自己策略和增加自己的模块和调整代码奠定基础。</p><p>还记得在最开始，创建用户文件夹的时候，我们初始化了一个配置文件，其中有设置一个称为max_open_trades的参数，参数的意义是开单的次数，也就是交易的次数，上默认是3，我们修改了为10。这个trade是后面很重要的参数，毕竟金融，交易的流通性上来了才能开展策略。而其中的ip地址是为了搭建web页面使用的。</p><p>同时，在创建用户文件夹和配置文件的时候，会产生一个初始化策略文件，策略通过pandas来实现，获得交易所的数据之后通过pandas来做各种条件判断</p><h2 id="2-从main-py开始"><a href="#2-从main-py开始" class="headerlink" title="2.从main.py开始"></a>2.从main.py开始</h2><h3 id="垃圾回收，python的gc过程，在入口就设置了，能有效加快运行时间"><a href="#垃圾回收，python的gc过程，在入口就设置了，能有效加快运行时间" class="headerlink" title="垃圾回收，python的gc过程，在入口就设置了，能有效加快运行时间"></a>垃圾回收，python的gc过程，在入口就设置了，能有效加快运行时间</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span>  <span class="token function">gc_set_threshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""Reduce number of GC runs to improve performance (explanation video)https://www.youtube.com/watch?v=p4Sn6UcFTOU# 减少GC运行次数来提高性能"""</span><span class="token keyword">if</span>  platform<span class="token punctuation">.</span>python_implementation<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"CPython"</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true"># allocs, g1, g2 = gc.get_threshold()</span>gc<span class="token punctuation">.</span>set_threshold<span class="token punctuation">(</span>50_000<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">"Adjusting python allocations to reduce GC runs"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当使用<code>python main.py  -h</code>的时候，你会发现，freqtrade的参数选择是真的多，args和config就让人眼花缭乱，先看看args：</p><pre class="line-numbers language-linux"><code class="language-linux">{'command': 'trade', 'verbosity': 0, 'logfile': None, 'config': ['user_data/config.json'], 'datadir': None, 'user_data_dir': None, 'strategy': 'SampleStrategy', 'strategy_path': None, 'recursive_strategy_search': False, 'freqaimodel': None, 'freqaimodel_path': None, 'db_url': None, 'sd_notify': False, 'dry_run': False, 'dry_run_wallet': None, 'fee': None, 'func': <function  start_trading at 0x7f1df7807550>}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再看config的，更是让人摸不着头脑：</p><pre class="line-numbers language-linux"><code class="language-linux">{'max_open_trades': 10, 'stake_currency': 'USDT', 'stake_amount': 'unlimited', 'tradable_balance_ratio': 0.99, 'fiat_display_currency': 'USD', 'dry_run': True, 'dry_run_wallet': 1000, 'cancel_open_orders_on_exit': False, 'trading_mode': <TradingMode.SPOT: 'spot'>, 'margin_mode': '', 'unfilledtimeout': {'entry': 10, 'exit': 10, 'exit_timeout_count': 0, 'unit': 'minutes'}, 'entry_pricing': {'price_side': 'same', 'use_order_book': True,  'order_book_top': 1, 'price_last_balance': 0.0, 'check_depth_of_market':  {'enabled': False, 'bids_to_ask_delta': 1}}, 'exit_pricing': {'price_side':  'same', 'use_order_book': True, 'order_book_top': 1}, 'download_trades':  True, 'exchange': {'name': 'kraken', 'key': '', 'secret': '', 'ccxt_config':  {'enableRateLimit': True}, 'ccxt_async_config': {'enableRateLimit': True,  'rateLimit': 1000}, 'pair_whitelist': ['BTC/USDT'], 'pair_blacklist': []},  'pairlists': [{'method': 'StaticPairList', 'number_assets': 20, 'sort_key':  'quoteVolume', 'min_value': 0, 'refresh_period': 1800}], 'telegram':  {'enabled': True, 'token': '6098324163:AAGAsEFmZVtCAmHrDCyEu5k7wqV5MWhYdjU',  'chat_id': '6239011080'}, 'api_server': {'enabled': True,   'listen_ip_address': '0.0.0.0', 'listen_port': 8080, 'verbosity': 'error',   'enable_openapi': False, 'jwt_secret_key':    'aaeb8173e0bc0ff14101ae225529c2212db4c965dc7974d75f8539f053223e54',    'ws_token': '_9kjyvYGADVtC8Hgy4_Qvuj0STqn0y-Jbg', 'CORS_origins': [],    'username': 'freqtrader', 'password': 'jiang'}, 'bot_name': 'freqtrade',    'initial_state': 'running', 'force_entry_enable': False, 'internals':    {'process_throttle_secs': 5}, 'config_files': ['user_data/config.json'], 'original_config': {'max_open_trades': 10, 'stake_currency': 'USDT', 'stake_amount': 'unlimited', 'tradable_balance_ratio': 0.99, 'fiat_display_currency': 'USD', 'dry_run': True, 'dry_run_wallet': 1000, 'cancel_open_orders_on_exit': False, 'trading_mode': 'spot', 'margin_mode': '', 'unfilledtimeout': {'entry': 10, 'exit': 10, 'exit_timeout_count': 0,    'unit': 'minutes'}, 'entry_pricing': {'price_side': 'same',    'use_order_book': True, 'order_book_top': 1, 'price_last_balance': 0.0,    'check_depth_of_market': {'enabled': False, 'bids_to_ask_delta': 1}},    'exit_pricing': {'price_side': 'same', 'use_order_book': True,    'order_book_top': 1}, 'download_trades': True, 'exchange': {'name':    'kraken', 'key': '', 'secret': '', 'ccxt_config': {'enableRateLimit':    True}, 'ccxt_async_config': {'enableRateLimit': True, 'rateLimit': 1000},    'pair_whitelist': ['BTC/USDT'], 'pair_blacklist': []}, 'pairlists':    [{'method': 'StaticPairList', 'number_assets': 20, 'sort_key': 'quoteVolume', 'min_value': 0, 'refresh_period': 1800}], 'telegram': {'enabled': True, 'token': '6098324163:AAGAsEFmZVtCAmHrDCyEu5k7wqV5MWhYdjU',    'chat_id': '6239011080'}, 'api_server': {'enabled': True,     'listen_ip_address': '0.0.0.0', 'listen_port': 8080, 'verbosity':     'error', 'enable_openapi': False, 'jwt_secret_key':     'aaeb8173e0bc0ff14101ae225529c2212db4c965dc7974d75f8539f053223e54', 'ws_token': '_9kjyvYGADVtC8Hgy4_Qvuj0STqn0y-Jbg', 'CORS_origins': [],     'username': 'freqtrader', 'password': 'jiang'}, 'bot_name': 'freqtrade',     'initial_state': 'running', 'force_entry_enable': False, 'internals':     {'process_throttle_secs': 5}, 'config_files': ['user_data/config.json']}, 'verbosity': 0, 'runmode': <RunMode.DRY_RUN: 'dry_run'>, 'strategy':     'SampleStrategy', 'db_url': 'sqlite:///tradesv3.dryrun.sqlite',     'user_data_dir': PosixPath('/root/freqtrade/freqtrade/user_data'), 'datadir': PosixPath('/root/freqtrade/freqtrade/user_data/data/kraken'),     'exportfilename': PosixPath('/root/freqtrade/freqtrade/user_data/backtest_results'),     'print_colorized': True, 'candle_type_def': <CandleType.SPOT: 'spot'>,     'pairs': ['BTC/USDT']}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那这么多命令，设置命令的时候是怎么和逻辑对应上的呢？其实在这里是通过命令行将参数传入的时候，通过<strong>模块</strong>来获取的，如<a href="https://www.runoob.com/python/python-command-line-arguments.html" target="_blank" rel="noopener">Python 命令行参数 | 菜鸟教程 (runoob.com)</a>所示，可通过使用 <strong>sys</strong> 的 <strong>sys.argv</strong> 来获取命令行参数，也可以通过argparse来获取命令行参数<a href="https://blog.csdn.net/qq_39839807/article/details/104155896" target="_blank" rel="noopener">(79条消息) Python 从命令行读取或解析（parser）参数（arguments、options、sub-commands）：sys.argv、argparse、docopt_python 读取命令行参数_周星星0_o的博客-CSDN博客</a></p><p>将参数拿到以后由<code>commands/arguments.py</code>文件来进行参数处理，遇到哪个参数就执行对应的代码</p><pre class="line-numbers language-python"><code class="language-python">setup_logging_pre<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 猜测这里是代码入口</span>arguments <span class="token operator">=</span> Arguments<span class="token punctuation">(</span>sysargv<span class="token punctuation">)</span>args <span class="token operator">=</span> arguments<span class="token punctuation">.</span>get_parsed_arg<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如在命令行输入trade参数，会转到执行start_trading</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Add trade subcommand</span><span class="token comment" spellcheck="true"># 这里转入到执行start_trading</span>trade_cmd <span class="token operator">=</span> subparsers<span class="token punctuation">.</span>add_parser<span class="token punctuation">(</span><span class="token string">'trade'</span><span class="token punctuation">,</span> help<span class="token operator">=</span><span class="token string">'Trade module.'</span><span class="token punctuation">,</span>parents<span class="token operator">=</span><span class="token punctuation">[</span>_common_parser<span class="token punctuation">,</span> _strategy_parser<span class="token punctuation">]</span><span class="token punctuation">)</span>trade_cmd<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>func<span class="token operator">=</span>start_trading<span class="token punctuation">)</span>self<span class="token punctuation">.</span>_build_args<span class="token punctuation">(</span>optionlist<span class="token operator">=</span>ARGS_TRADE<span class="token punctuation">,</span> parser<span class="token operator">=</span>trade_cmd<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入start_trading以后就进入主入口了，先实例化worker通过之前的报错代码也可以看出，通过在worker.py里面进行configs参数的配置，然后将_config参数传给实例化FreqtradeBot机器人。<br>随后运行<code>worker.run()</code>，在循环中向交易所获取数据。</p><pre class="line-numbers language-linux"><code class="language-linux"> File "/root/freqtrade/freqtrade/commands/trade_commands.py", line 25, in start_trading    worker = Worker(args)  File "/root/freqtrade/freqtrade/worker.py", line 37, in __init__    self._init(False)  File "/root/freqtrade/freqtrade/worker.py", line 54, in _init    self.freqtrade = FreqtradeBot(self._config)  File "/root/freqtrade/freqtrade/freqtradebot.py", line 74, in __init__    init_db(self.config['db_url'])  File "/root/freqtrade/freqtrade/persistence/models.py", line 82, in init_db    check_migrate(engine, decl_base=ModelBase, previous_tables=previous_tables)  File "/root/freqtrade/freqtrade/persistence/migrations.py", line 343, in check_migrate    fix_old_dry_orders(engine)  File "/root/freqtrade/freqtrade/persistence/migrations.py", line 282, in fix_old_dry_orders    connection.execute(stmt)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>代码核心还是在worker.py和freqtrade.py上，process是主流程</p><h2 id="3-操作代码太麻烦。还是下载桌面程序"><a href="#3-操作代码太麻烦。还是下载桌面程序" class="headerlink" title="3. 操作代码太麻烦。还是下载桌面程序"></a>3. 操作代码太麻烦。还是下载桌面程序</h2><p><a href="https://www.vpsrb.com/3186.html" target="_blank" rel="noopener">https://www.vpsrb.com/3186.html</a></p><h3 id="argparse参数解读"><a href="#argparse参数解读" class="headerlink" title="argparse参数解读"></a>argparse参数解读</h3><p><a href="https://docs.python.org/zh-cn/3/library/argparse.html" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3/library/argparse.html</a><br><a href="https://www.jianshu.com/p/27ce67dab97e" target="_blank" rel="noopener">https://www.jianshu.com/p/27ce67dab97e</a><br><a href="https://www.jianshu.com/p/27ce67dab97e" target="_blank" rel="noopener">https://www.jianshu.com/p/27ce67dab97e</a><br><code>limit: float</code>表示变量名和变量类型；<br>python 需要实例化的类要有<code>_init</code>方法，被import进来的类调用方法可不用<code>_init</code>方法，程序的入口要有main方法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span>  __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># pragma: no cover</span>      main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-运行新的策略文件"><a href="#4-运行新的策略文件" class="headerlink" title="4. 运行新的策略文件"></a>4. 运行新的策略文件</h2><pre class="line-numbers language-linux"><code class="language-linux">freqtrade trade --strategy AwesomeStrategy --strategy-path /some/directory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>策略文件仓库</p><pre class="line-numbers language-linux"><code class="language-linux">python main.py trade --config user_data/config.json --strategy PowerTower --strategy-path user_data/strategies/strategies<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://github.com/jlcxxzj/freqtrade-strategies">jlcxxzj/freqtrade-strategies: Free trading strategies for Freqtrade bot (github.com)</a></p><h2 id="5-参考文献"><a href="#5-参考文献" class="headerlink" title="5. 参考文献"></a>5. 参考文献</h2><p><a href="https://pythondict.com/quant/freqtrade/" target="_blank" rel="noopener">FreqTrade—又强又简单的Python加密货币自动交易机器人-Python 实用宝典 (pythondict.com)</a><br><a href="https://zhuanlan.zhihu.com/p/91135577" target="_blank" rel="noopener">OHLCV 数据 - 知乎 (zhihu.com)</a><br><a href="https://www.bgegao.com/2022/05/2306.html" target="_blank" rel="noopener">https://www.bgegao.com/2022/05/2306.html</a><br><a href="http://c.biancheng.net/view/2262.html" target="_blank" rel="noopener">Python lambda表达式（匿名函数）及用法 (biancheng.net)</a><br><a href="https://www.bilibili.com/video/BV1ng411R7tq/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">不懂K线图，你就是究极韭菜！今天6分钟讲完K线组合，轻松捕获涨停_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1gN4y1A71b/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">数据可视化示例_K线图_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1kS4y1z7JH/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">T5 数据分析三剑客——用Python绘制股票K线图_哔哩哔哩_bilibili</a><br><a href="https://zhuanlan.zhihu.com/p/587075465" target="_blank" rel="noopener">【OpenFE】全自动特征生成器 — 助力Kaggle竞赛取得更好成绩 - 知乎 (zhihu.com)</a><br><strong><a href="https://blog.csdn.net/Shepherdppz/article/details/117575286?spm=1001.2014.3001.5501" target="_blank" rel="noopener">(79条消息) Python量化投资——mplfinance最佳实践：动态交互式高级K线图(蜡烛图)【源码+详解】_Shepherdppz的博客-CSDN博客</a></strong><br><a href="https://blog.csdn.net/Shepherdppz?type=blog" target="_blank" rel="noopener">https://blog.csdn.net/Shepherdppz?type=blog</a><br><a href="https://blog.csdn.net/Shepherdppz?type=blog" target="_blank" rel="noopener">(79条消息) Shepherdppz的博客_CSDN博客-python,量化投资,QR Code领域博主</a></p><h2 id="6-其他项目和文献资料"><a href="#6-其他项目和文献资料" class="headerlink" title="6. 其他项目和文献资料"></a>6. 其他项目和文献资料</h2><p><a href="https://linux.cn/article-11380-1.html" target="_blank" rel="noopener">技术|在 Linux 中如何移动文件</a></p>]]></content>
      
      
      <categories>
          
          <category> 量化分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Freqtrade </tag>
            
            <tag> 一些Linux小tip </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化分析入门篇2|从源码上理解Freqtrade</title>
      <link href="/2023/04/04/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-ru-men-pian-2/"/>
      <url>/2023/04/04/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-ru-men-pian-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>在基础篇里面讲过使用docker快速部署量化分析项目Freqtrade，由于便捷部署，对内部发生了什么，修改也都不太方便，从源码的角度来分析一下这个自动化交易项目。</p><h2 id="2-克隆代码，跑通"><a href="#2-克隆代码，跑通" class="headerlink" title="2.克隆代码，跑通"></a>2.克隆代码，跑通</h2><h3 id="源代码的结构"><a href="#源代码的结构" class="headerlink" title="源代码的结构"></a>源代码的结构</h3><p>首先从<a href="https://github.com/freqtrade/freqtrade">GitHub - freqtrade/freqtrade: Free, open source crypto trading bot</a>上克隆源代码：</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# git clone https://github.com/freqtrade/freqtrade.gitCloning into 'freqtrade'...remote: Enumerating objects: 109397, done.remote: Counting objects: 100% (15/15), done.remote: Compressing objects: 100% (12/12), done.remote: Total 109397 (delta 3), reused 12 (delta 3), pack-reused 109382Receiving objects: 100% (109397/109397), 148.66 MiB | 18.37 MiB/s, done.Resolving deltas: 100% (83532/83532), done.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>克隆之前根目录下的文件信息，ft_userdata文件夹是docker部署的镜像文件和数据文件文件夹:</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# lltotal 8-rw-------. 1 root root 1303 Sep 25  2021 anaconda-ks.cfgdrwxr-xr-x. 3 root root 4096 Apr  3 03:58 ft_userdata<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>克隆之后根目录下的文件信息，freqtrade文件夹下的数据即是源代码:</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# lltotal 12-rw-------.  1 root root 1303 Sep 25  2021 anaconda-ks.cfgdrwxr-xr-x. 13 root root 4096 Apr  4 07:54 freqtradedrwxr-xr-x.  3 root root 4096 Apr  3 03:58 ft_userdata<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看看freqtrade文件夹下都有哪些文件：</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# cd freqtrade[root@server freqtrade]# lltotal 160drwxr-xr-x.  2 root root  4096 Apr  4 07:54 build_helpersdrwxr-xr-x.  2 root root  4096 Apr  4 07:54 config_examples-rw-r--r--.  1 root root  4848 Apr  4 07:54 CONTRIBUTING.mddrwxr-xr-x.  2 root root  4096 Apr  4 07:54 docker-rw-r--r--.  1 root root   947 Apr  4 07:54 docker-compose.yml-rw-r--r--.  1 root root  1694 Apr  4 07:54 Dockerfiledrwxr-xr-x.  8 root root  4096 Apr  4 07:54 docs-rw-r--r--.  1 root root     0 Apr  4 07:54 environment.ymldrwxr-xr-x. 21 root root  4096 Apr  4 07:54 freqtrade-rw-r--r--.  1 root root   303 Apr  4 07:54 freqtrade.service-rw-r--r--.  1 root root   579 Apr  4 07:54 freqtrade.service.watchdog-rw-r--r--.  1 root root 35141 Apr  4 07:54 LICENSE-rw-r--r--.  1 root root   277 Apr  4 07:54 MANIFEST.in-rw-r--r--.  1 root root  3457 Apr  4 07:54 mkdocs.yml-rw-r--r--.  1 root root  1652 Apr  4 07:54 pyproject.toml-rw-r--r--.  1 root root 11482 Apr  4 07:54 README.md-rw-r--r--.  1 root root   672 Apr  4 07:54 requirements-dev.txt-rw-r--r--.  1 root root   376 Apr  4 07:54 requirements-freqai-rl.txt-rw-r--r--.  1 root root   305 Apr  4 07:54 requirements-freqai.txt-rw-r--r--.  1 root root   182 Apr  4 07:54 requirements-hyperopt.txt-rw-r--r--.  1 root root    79 Apr  4 07:54 requirements-plot.txt-rw-r--r--.  1 root root   975 Apr  4 07:54 requirements.txtdrwxr-xr-x.  2 root root  4096 Apr  4 07:54 scripts-rw-r--r--.  1 root root  1350 Apr  4 07:54 setup.cfg-rw-r--r--.  1 root root  1931 Apr  4 07:54 setup.py-rwxr-xr-x.  1 root root  8994 Apr  4 07:54 setup.shdrwxr-xr-x. 14 root root  4096 Apr  4 07:54 testsdrwxr-xr-x.  8 root root  4096 Apr  4 07:54 user_data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再看看freqtrade/freqtrade子目录，也就是实际运行文件的目录，包括程序入口main.py文件，策略文件，数据文件等。</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server freqtrade]# cd freqtrade[root@server freqtrade]# lltotal 264drwxr-xr-x. 2 root root  4096 Apr  4 07:54 commandsdrwxr-xr-x. 2 root root  4096 Apr  4 07:54 configuration-rw-r--r--. 1 root root 29110 Apr  4 07:54 constants.pydrwxr-xr-x. 3 root root  4096 Apr  4 07:54 datadrwxr-xr-x. 2 root root  4096 Apr  4 07:54 edgedrwxr-xr-x. 2 root root  4096 Apr  4 07:54 enums-rw-r--r--. 1 root root  2068 Apr  4 07:54 exceptions.pydrwxr-xr-x. 2 root root  4096 Apr  4 07:54 exchangedrwxr-xr-x. 5 root root  4096 Apr  4 07:54 freqai-rw-r--r--. 1 root root 92819 Apr  4 07:54 freqtradebot.py-rw-r--r--. 1 root root   814 Apr  4 07:54 __init__.pydrwxr-xr-x. 2 root root  4096 Apr  4 07:54 leverage-rw-r--r--. 1 root root  5199 Apr  4 07:54 loggers.py-rwxr-xr-x. 1 root root   206 Apr  4 07:54 __main__.py-rwxr-xr-x. 1 root root  2094 Apr  4 07:54 main.py-rw-r--r--. 1 root root 10215 Apr  4 07:54 misc.pydrwxr-xr-x. 2 root root  4096 Apr  4 07:54 mixinsdrwxr-xr-x. 4 root root  4096 Apr  4 07:54 optimizedrwxr-xr-x. 2 root root  4096 Apr  4 07:54 persistencedrwxr-xr-x. 2 root root  4096 Apr  4 07:54 plotdrwxr-xr-x. 4 root root  4096 Apr  4 07:54 pluginsdrwxr-xr-x. 2 root root  4096 Apr  4 07:54 resolversdrwxr-xr-x. 3 root root  4096 Apr  4 07:54 rpcdrwxr-xr-x. 2 root root  4096 Apr  4 07:54 strategydrwxr-xr-x. 4 root root  4096 Apr  4 07:54 templatesdrwxr-xr-x. 2 root root  4096 Apr  4 07:54 utildrwxr-xr-x. 3 root root  4096 Apr  4 07:54 vendor-rw-r--r--. 1 root root 13468 Apr  4 07:54 wallets.py-rw-r--r--. 1 root root  8487 Apr  4 07:54 worker.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行源代码"><a href="#运行源代码" class="headerlink" title="运行源代码"></a>运行源代码</h3><p>打开源码main.py文件，从最简单开始运行就发现引入库的问题，<a href="https://blog.csdn.net/devcy/article/details/100104471" target="_blank" rel="noopener">Python模块导入出现ModuleNotFoundError: No module named ‘**<em>‘_return original_import(name, *args, *</em>kwargs) modu_程序员椰子橙的博客-CSDN博客</a>，解决的时候要注意，同时将被引目录和当前目录加入到路径中，使用左斜杠</p><pre class="line-numbers language-linux"><code class="language-linux">import  sys#被引模块路径sys.path.append("F:/测试系统/量化交易/freqtrade-develop/freqtrade-develop/freqtrade/")#编辑器当前打开根文件夹路径sys.path.append("F:/测试系统/量化交易/freqtrade-develop/freqtrade-develop/")from  freqtrade.util.gc_setup  import  gc_set_threshold<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>linux系统下，pipi安装完毕，找不到，配置路径的问题：<a href="https://developer.aliyun.com/article/982021#:~:text=%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88Centos%E7%89%88%EF%BC%89%201%201%E3%80%81%E4%B8%8B%E8%BD%BD%202%202%E3%80%81%E5%AE%89%E8%A3%85,3%203%E3%80%81%E6%9F%A5%E7%9C%8Bpip%E7%89%88%E6%9C%AC%EF%BC%88%E5%A6%82%E6%9E%9C%E6%9C%AC%E6%AD%A5%E9%AA%A4%E6%AD%A3%E5%B8%B8%EF%BC%8C%E5%BF%BD%E7%95%A54%2F5%E6%AD%A5%EF%BC%89%204%204%E3%80%81%E6%9F%A5%E6%89%BEpip%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84%205%205%E3%80%81%E5%B0%86pip%E6%B7%BB%E5%8A%A0%E5%88%B0%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4" target="_blank" rel="noopener">-bash: pip: command not found pip命令报错 解决方法（Centos版）-阿里云开发者社区 (aliyun.com)</a><br>或<a href="https://blog.csdn.net/qq_44659804/article/details/129027410?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-129027410-blog-109076488.235%5Ev27%5Epc_relevant_default_base1&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-129027410-blog-109076488.235%5Ev27%5Epc_relevant_default_base1&utm_relevant_index=1" target="_blank" rel="noopener">解决Linux服务器无pip命令_linux没有pip命令_qq_44659804的博客-CSDN博客</a><br>解决使用了<a href="https://huaweicloud.csdn.net/63560f75d3efff3090b59492.html?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Eactivity-3-121719707-blog-105008530.235%5Ev27%5Epc_relevant_default_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Eactivity-3-121719707-blog-105008530.235%5Ev27%5Epc_relevant_default_base1&utm_relevant_index=6" target="_blank" rel="noopener">centos7安装pip_linux_超凡脫俗-DevPress官方社区 (csdn.net)</a></p><p>2.使用<code>pip install -r requirements.txt</code>安装所需库</p><p>3.不能运行，Linux自带的python版本2.7不符合要求，要更新python，又是各种问题<br>下次清空服务器再改吧，记得是清空，千万别把案例删除了<br><a href="https://zhuanlan.zhihu.com/p/34024112" target="_blank" rel="noopener">Linux 升级 Python 至 3.x - 知乎 (zhihu.com)</a><br><a href="https://blog.csdn.net/lpliem/article/details/103873493" target="_blank" rel="noopener">(78条消息) Linux系统升级python版本_linux python更新_不了解程序员的程序员的博客-CSDN博客</a>】<br><a href="https://blog.csdn.net/lpliem/article/details/103873493" target="_blank" rel="noopener">(78条消息) Linux系统升级python版本_linux python更新_不了解程序员的程序员的博客-CSDN博客</a></p><h4 id="由于各种操作会影响库的交互，重置了服务器："><a href="#由于各种操作会影响库的交互，重置了服务器：" class="headerlink" title="由于各种操作会影响库的交互，重置了服务器："></a>由于各种操作会影响库的交互，重置了服务器：</h4><p>使用3.9.6版本的python<br>[(78条消息) Linux 系统升级Python版本，2.7.5升级到3.9.6_linux python 升级_changingshow的博客-CSDN博客]<br>中间有问题用到了(<a href="https://blog.csdn.net/changingshow/article/details/119937530" target="_blank" rel="noopener">https://blog.csdn.net/changingshow/article/details/119937530</a>)<br><a href="https://blog.csdn.net/qq_36664203/article/details/106301856" target="_blank" rel="noopener">(78条消息) centos 安装python3.8报错_make[1]: *** [pybuilddir.txt] 错误 1_qq_36664203的博客-CSDN博客</a>和<a href="https://zhuanlan.zhihu.com/p/34024112" target="_blank" rel="noopener">Linux 升级 Python 至 3.x - 知乎 (zhihu.com)</a>的处理办法。</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server Python-3.9.6]# python --versionPython 2.7.5[root@server Python-3.9.6]# ls -al /usr/bin | grep pythonlrwxrwxrwx.  1 root root         7 Apr  4 23:05 python -> python2lrwxrwxrwx.  1 root root         9 Apr  4 23:05 python2 -> python2.7-rwxr-xr-x.  1 root root      7144 Jun 28  2022 python2.7[root@server Python-3.9.6]# mv /usr/bin/python /usr/bin/python.bak[root@server Python-3.9.6]# ln -s /usr/local/bin/python3 /usr/bin/python[root@server Python-3.9.6]# python --version-bash: /usr/bin/python: No such file or directory[root@server Python-3.9.6]# ln -s /usr/local/python3/bin/python3 /usr/bin/pythonln: failed to create symbolic link ‘/usr/bin/python’: File exists[root@server Python-3.9.6]# rm ^C[root@server Python-3.9.6]# rm /usr/bin/pythonrm: remove symbolic link ‘/usr/bin/python’? y[root@server Python-3.9.6]# ln -s /usr/local/python3/bin/python3 /usr/bin/python[root@server Python-3.9.6]# python --versionPython 3.9.6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后成将 Linux 系统升级Python版本，2.7.5升级到3.9.6</p><h4 id="重新安装git，下载源码"><a href="#重新安装git，下载源码" class="headerlink" title="重新安装git，下载源码"></a>重新安装git，下载源码</h4><p>下载git:<code>sudo yum install git</code><br><a href="https://www.myfreax.com/how-to-install-git-on-centos-8/" target="_blank" rel="noopener">https://www.myfreax.com/how-to-install-git-on-centos-8/</a><br>删除文件夹命令：<code>rm -rf freqtrade</code><br>查找文件命令<code>find / -name pip</code></p><p>安装talib库时失败<a href="https://www.cnblogs.com/Earth-SmaThing/articles/15731156.html" target="_blank" rel="noopener">https://www.cnblogs.com/Earth-SmaThing/articles/15731156.html</a></p><p>将库都搞好了，添加两个路径</p><pre class="line-numbers language-linux"><code class="language-linux">sys.path.append("/root/freqtrade/freqtrade/")sys.path.append("/root/freqtrade/")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后就可以传参运行，报错是因为没有传参：</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server ~]# python freqtrade/freqtrade/main.py2023-04-05 00:59:44,606 - freqtrade - ERROR - Usage of Freqtrade requires a subcommand to be specified.To have the bot executing trades in live/dry-run modes, depending on the value of the `dry_run` setting in the config, run Freqtrade as `freqtrade trade [options...]`.To see the full list of options available, please use `freqtrade --help` or `freqtrade <command> --help`.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-调试源代码"><a href="#3-调试源代码" class="headerlink" title="3.调试源代码"></a>3.调试源代码</h2><p>借鉴<a href="https://www.youtube.com/watch?v=b8tYNGgV-u0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=b8tYNGgV-u0</a></p><h3 id="1-首先创建一个user-data文件夹-在freqtrade-freqtrade，原来freqtrade下就有一个user-data文件夹"><a href="#1-首先创建一个user-data文件夹-在freqtrade-freqtrade，原来freqtrade下就有一个user-data文件夹" class="headerlink" title="1. 首先创建一个user_data文件夹,在freqtrade/freqtrade，原来freqtrade下就有一个user_data文件夹"></a>1. 首先创建一个user_data文件夹,在freqtrade/freqtrade，原来freqtrade下就有一个user_data文件夹</h3><pre class="line-numbers language-linux"><code class="language-linux"># 原来[root@server freqtrade]# lltotal 264drwxr-xr-x. 2 root root  4096 Apr  4 23:40 commandsdrwxr-xr-x. 2 root root  4096 Apr  4 23:40 configuration-rw-r--r--. 1 root root 29110 Apr  4 23:40 constants.pydrwxr-xr-x. 3 root root  4096 Apr  4 23:40 datadrwxr-xr-x. 2 root root  4096 Apr  4 23:40 edgedrwxr-xr-x. 2 root root  4096 Apr  4 23:40 enums-rw-r--r--. 1 root root  2068 Apr  4 23:40 exceptions.pydrwxr-xr-x. 2 root root  4096 Apr  4 23:40 exchangedrwxr-xr-x. 5 root root  4096 Apr  4 23:40 freqai-rw-r--r--. 1 root root 92819 Apr  4 23:40 freqtradebot.py-rw-r--r--. 1 root root   814 Apr  4 23:40 __init__.pydrwxr-xr-x. 2 root root  4096 Apr  4 23:40 leverage-rw-r--r--. 1 root root  5199 Apr  4 23:40 loggers.py-rwxr-xr-x. 1 root root   206 Apr  4 23:40 __main__.py-rwxr-xr-x. 1 root root  2194 Apr  5 00:48 main.py-rw-r--r--. 1 root root 10215 Apr  4 23:40 misc.pydrwxr-xr-x. 2 root root  4096 Apr  4 23:40 mixinsdrwxr-xr-x. 4 root root  4096 Apr  4 23:40 optimizedrwxr-xr-x. 2 root root  4096 Apr  4 23:40 persistencedrwxr-xr-x. 2 root root  4096 Apr  4 23:40 plotdrwxr-xr-x. 4 root root  4096 Apr  4 23:40 pluginsdrwxr-xr-x. 2 root root  4096 Apr  4 23:40 resolversdrwxr-xr-x. 3 root root  4096 Apr  4 23:40 rpcdrwxr-xr-x. 2 root root  4096 Apr  4 23:40 strategydrwxr-xr-x. 4 root root  4096 Apr  4 23:40 templatesdrwxr-xr-x. 2 root root  4096 Apr  4 23:40 utildrwxr-xr-x. 3 root root  4096 Apr  4 23:40 vendor-rw-r--r--. 1 root root 13468 Apr  4 23:40 wallets.py-rw-r--r--. 1 root root  8487 Apr  4 23:40 worker.py# 新建user_data文件夹[root@server freqtrade]# cd freqtrade[root@server freqtrade]# lltotal 272drwxr-xr-x.  3 root root  4096 Apr  5 00:57 commandsdrwxr-xr-x.  3 root root  4096 Apr  5 00:57 configuration-rw-r--r--.  1 root root 29110 Apr  4 23:40 constants.pydrwxr-xr-x.  4 root root  4096 Apr  5 00:59 datadrwxr-xr-x.  2 root root  4096 Apr  4 23:40 edgedrwxr-xr-x.  3 root root  4096 Apr  5 00:57 enums-rw-r--r--.  1 root root  2068 Apr  4 23:40 exceptions.pydrwxr-xr-x.  3 root root  4096 Apr  5 00:59 exchangedrwxr-xr-x.  5 root root  4096 Apr  4 23:40 freqai-rw-r--r--.  1 root root 92819 Apr  4 23:40 freqtradebot.py-rw-r--r--.  1 root root   814 Apr  4 23:40 __init__.pydrwxr-xr-x.  3 root root  4096 Apr  5 00:59 leverage-rw-r--r--.  1 root root  5199 Apr  4 23:40 loggers.py-rwxr-xr-x.  1 root root   206 Apr  4 23:40 __main__.py-rwxr-xr-x.  1 root root  2176 Apr  5 00:55 main.py-rw-r--r--.  1 root root 10215 Apr  4 23:40 misc.pydrwxr-xr-x.  3 root root  4096 Apr  5 00:59 mixinsdrwxr-xr-x.  5 root root  4096 Apr  5 00:59 optimizedrwxr-xr-x.  3 root root  4096 Apr  5 00:59 persistencedrwxr-xr-x.  2 root root  4096 Apr  4 23:40 plotdrwxr-xr-x.  5 root root  4096 Apr  5 00:59 pluginsdrwxr-xr-x.  2 root root  4096 Apr  5 00:59 __pycache__drwxr-xr-x.  3 root root  4096 Apr  5 00:59 resolversdrwxr-xr-x.  4 root root  4096 Apr  5 00:59 rpcdrwxr-xr-x.  3 root root  4096 Apr  5 00:59 strategydrwxr-xr-x.  4 root root  4096 Apr  4 23:40 templatesdrwxr-xr-x. 11 root root  4096 Apr  5 01:10 user_datadrwxr-xr-x.  3 root root  4096 Apr  5 00:55 utildrwxr-xr-x.  3 root root  4096 Apr  4 23:40 vendor-rw-r--r--.  1 root root 13468 Apr  4 23:40 wallets.py-rw-r--r--.  1 root root  8487 Apr  4 23:40 worker.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-配置new-config"><a href="#2-配置new-config" class="headerlink" title="2. 配置new-config"></a>2. 配置new-config</h3><p>连接交易所kraken:</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server freqtrade]# python main.py new-config --config user_data/config.json2023-04-05 01:19:23,969 - freqtrade - INFO - freqtrade 2023.4.dev-f03a999? Do you want to enable Dry-run (simulated trades)? Yes? Please insert your stake currency: USDT? Please insert your stake amount (Number or 'unlimited'): unlimited? Please insert max_open_trades (Integer or -1 for unlimited open trades): 10? Time Have the strategy define timeframe.? Please insert your display Currency (for reporting): USD? Select exchange kraken? Do you want to enable Telegram? Yes? Insert Telegram token **********************************************? Insert Telegram chat id **********? Do you want to enable the Rest API (includes FreqUI)? Yes? Insert Api server Listen Address (0.0.0.0 for docker, otherwise best left untouched) 0.0.0.0? Insert api-server username freqtrader? Insert api-server password *****2023-04-05 01:21:01,530 - freqtrade.commands.build_config_commands - INFO - Writing config to `user_data/config.jspn`.2023-04-05 01:21:01,531 - freqtrade.commands.build_config_commands - INFO - Please make sure to check the configuration contents and adjust settings to your needs.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-下载数据"><a href="#2-下载数据" class="headerlink" title="2. 下载数据"></a>2. 下载数据</h3><p>下载数据会存在刚在新建的user_data的文件夹data子文件夹中</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server freqtrade]# python main.py python main.py download-data --exchange kraken --pairs BTC/USDT -t 5m --timerange 20230101-2023-04-05 01:33:22,108 - freqtrade - INFO - freqtrade 2023.4.dev-f03a9992023-04-05 01:33:22,108 - freqtrade.configuration.load_config - INFO - Using config: user_data/config.json ...2023-04-05 01:33:22,109 - freqtrade.loggers - INFO - Verbosity set to 02023-04-05 01:33:22,110 - freqtrade.configuration.configuration - INFO - Using exchange kraken2023-04-05 01:33:22,110 - freqtrade.configuration.configuration - INFO - Using user-data directory: /root/freqtrade/freqtrade/user_data ...2023-04-05 01:33:22,111 - freqtrade.configuration.directory_operations - INFO - Created data directory: None2023-04-05 01:33:22,111 - freqtrade.configuration.configuration - INFO - Using data directory: /root/freqtrade/freqtrade/user_data/data/kraken ...2023-04-05 01:33:22,111 - freqtrade.configuration.configuration - INFO - Using pairs ['ETH/BTC']2023-04-05 01:33:22,111 - freqtrade.configuration.configuration - INFO - timeframes --timeframes: ['1h']2023-04-05 01:33:22,111 - freqtrade.configuration.configuration - INFO - Detected --days: 52023-04-05 01:33:22,114 - freqtrade.exchange.check_exchange - INFO - Checking exchange...2023-04-05 01:33:22,122 - freqtrade.exchange.check_exchange - INFO - Exchange "kraken" is officially supported by the Freqtrade development team.2023-04-05 01:33:22,122 - freqtrade.configuration.config_validation - INFO - Validating configuration ...2023-04-05 01:33:22,136 - freqtrade.exchange.exchange - INFO - Instance is running with dry_run enabled2023-04-05 01:33:22,136 - freqtrade.exchange.exchange - INFO - Using CCXT 3.0.502023-04-05 01:33:22,136 - freqtrade.exchange.exchange - INFO - Applying additional ccxt config: {'enableRateLimit': True}2023-04-05 01:33:22,143 - freqtrade.exchange.exchange - INFO - Applying additional ccxt config: {'enableRateLimit': True, 'rateLimit': 1000}2023-04-05 01:33:22,151 - freqtrade.exchange.exchange - INFO - Using Exchange "Kraken"2023-04-05 01:33:22,151 - freqtrade.resolvers.exchange_resolver - INFO - Using resolved exchange 'Kraken'...2023-04-05 01:33:22,151 - freqtrade.exchange.exchange - INFO - Markets were not loaded. Loading them now..2023-04-05 01:33:24,763 - freqtrade.commands.data_commands - INFO - About to download pairs: ['ETH/BTC'], intervals: ['1h'] to /root/freqtrade/freqtrade/user_data/data/kraken2023-04-05 01:33:24,766 - freqtrade.data.history.history_utils - INFO - Downloading trades for pair ETH/BTC.2023-04-05 01:33:24,767 - freqtrade.data.history.history_utils - INFO - Current Amount of trades: 02023-04-05 01:33:35,655 - freqtrade.misc - INFO - dumping json to "/root/freqtrade/freqtrade/user_data/data/kraken/ETH_BTC-trades.json.gz"2023-04-05 01:33:35,827 - freqtrade.data.history.history_utils - INFO - New Amount of trades: 7601<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-回测数据"><a href="#3-回测数据" class="headerlink" title="3. 回测数据"></a>3. 回测数据</h3><ol><li>修改config文件<pre class="line-numbers language-linux"><code class="language-linux">"pair_whitelist": ["BTC/USDT"],<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>VolumePairList not allowed for backtesting. Please use StaticPairList instead.<br>其他几行注释</li><li>回测<pre class="line-numbers language-linux"><code class="language-linux">[root@server freqtrade]# python main.py backtesting --timerange 20230101-20230202 --strategy SampleStrategy# 回测结果=========================================================== BACKTESTING REPORT ===========================================================|     Pair |   Entries |   Avg Profit % |   Cum Profit % |   Tot Profit USDT |   Tot Profit % |   Avg Duration |   Win  Draw  Loss  Win% ||----------+-----------+----------------+----------------+-------------------+----------------+----------------+-------------------------|| BTC/USDT |        18 |           1.00 |          18.00 |            17.999 |           1.80 | 1 day, 2:23:00 |    18     0     0   100 ||    TOTAL |        18 |           1.00 |          18.00 |            17.999 |           1.80 | 1 day, 2:23:00 |    18     0     0   100 |=========================================================== ENTER TAG STATS ===========================================================|   TAG |   Entries |   Avg Profit % |   Cum Profit % |   Tot Profit USDT |   Tot Profit % |   Avg Duration |   Win  Draw  Loss  Win% ||-------+-----------+----------------+----------------+-------------------+----------------+----------------+-------------------------|| TOTAL |        18 |           1.00 |          18.00 |            17.999 |           1.80 | 1 day, 2:23:00 |    18     0     0   100 |===================================================== EXIT REASON STATS =====================================================|   Exit Reason |   Exits |   Win  Draws  Loss  Win% |   Avg Profit % |   Cum Profit % |   Tot Profit USDT |   Tot Profit % ||---------------+---------+--------------------------+----------------+----------------+-------------------+----------------||           roi |      18 |     18     0     0   100 |              1 |             18 |            17.999 |             18 |======================================================= LEFT OPEN TRADES REPORT ========================================================|   Pair |   Entries |   Avg Profit % |   Cum Profit % |   Tot Profit USDT |   Tot Profit % |   Avg Duration |   Win  Draw  Loss  Win% ||--------+-----------+----------------+----------------+-------------------+----------------+----------------+-------------------------||  TOTAL |         0 |           0.00 |           0.00 |             0.000 |           0.00 |           0:00 |     0     0     0     0 |===================== SUMMARY METRICS =====================| Metric                      | Value                     ||-----------------------------+---------------------------|| Backtesting from            | 2023-01-01 02:30:00       || Backtesting to              | 2023-02-02 00:00:00       || Max open trades             | 1                         ||                             |                           || Total/Daily Avg Trades      | 18 / 0.58                 || Starting balance            | 1000 USDT                 || Final balance               | 1017.999 USDT             || Absolute profit             | 17.999 USDT               || Total profit %              | 1.80%                     || CAGR %                      | 23.37%                    || Sortino                     | -100.00                   || Sharpe                      | 1260.06                   || Calmar                      | -100.00                   || Profit factor               | 0.00                      || Expectancy                  | 1.00                      || Trades per day              | 0.58                      || Avg. daily profit %         | 0.06%                     || Avg. stake amount           | 99.838 USDT               || Total trade volume          | 1797.087 USDT             ||                             |                           || Best Pair                   | BTC/USDT 18.00%           || Worst Pair                  | BTC/USDT 18.00%           || Best trade                  | BTC/USDT 1.03%            || Worst trade                 | BTC/USDT 1.00%            || Best day                    | 2.001 USDT                || Worst day                   | 0 USDT                    || Days win/draw/lose          | 16 / 14 / 0               || Avg. Duration Winners       | 1 day, 2:23:00            || Avg. Duration Loser         | 0:00:00                   || Rejected Entry signals      | 0                         || Entry/Exit Timeouts         | 0 / 0                     ||                             |                           || Min balance                 | 0 USDT                    || Max balance                 | 0 USDT                    || Max % of account underwater | 0.00%                     || Absolute Drawdown (Account) | 0.00%                     || Absolute Drawdown           | 0 USDT                    || Drawdown high               | 0 USDT                    || Drawdown low                | 0 USDT                    || Drawdown Start              | 1970-01-01 00:00:00+00:00 || Drawdown End                | 1970-01-01 00:00:00+00:00 || Market change               | 43.41%                    |===========================================================<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="4-可视化数据"><a href="#4-可视化数据" class="headerlink" title="4.可视化数据"></a>4.可视化数据</h2><p>直接运行报错，要增加库</p><pre class="line-numbers language-linux"><code class="language-linux">[root@server freqtrade]# python main.py plot-dataframe --strategy SampleStrategy -p BTC/USDT --timerange=20230101-2023-04-05 02:18:48,801 - freqtrade - INFO - freqtrade 2023.4.dev-f03a9992023-04-05 02:18:48,813 - freqtrade.plot.plotting - ERROR - Module plotly not found  Please install using `pip3 install plotly`Traceback (most recent call last):  File "/root/freqtrade/freqtrade/plot/plotting.py", line 30, in <module>    import plotly.graph_objects as goModuleNotFoundError: No module named 'plotly'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下载到电脑：通过<code>sz freqtrade-plot-BTC_USDT-5m.html</code>将html文件下载。</p><h2 id="5-策略优化"><a href="#5-策略优化" class="headerlink" title="5. 策略优化"></a>5. 策略优化</h2><p>需要先安装<code>pip install -r requirements-hyperopt.txt</code>库</p><ol><li>策略数据存在user_data文件夹里，是建立的时候初始化进去的。</li></ol><pre class="line-numbers language-linux"><code class="language-linux"> python main.py hyperopt --hyperopt-loss SampleHyperOptLoss --space roi --strategy SampleStrategy -e 100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>优化结果为：</p><pre class="line-numbers language-linux"><code class="language-linux">+--------+---------+----------+--------------------------+--------------+-------------------------------+-----------------+-------------+-------------------------------+|   Best |   Epoch |   Trades |    Win  Draw  Loss  Win% |   Avg profit |                        Profit |    Avg duration |   Objective |           Max Drawdown (Acct) ||--------+---------+----------+--------------------------+--------------+-------------------------------+-----------------+-------------+-------------------------------|| * Best |   1/100 |       81 |     22    57     2  27.2 |       -0.01% |        -0.615 USDT   (-0.06%) | 0 days 13:02:00 |     2.23887 |         6.632 USDT    (0.66%) || * Best |   2/100 |       81 |     24    55     2  29.6 |       -0.00% |        -0.055 USDT   (-0.01%) | 0 days 12:54:00 |     2.23698 |         7.003 USDT    (0.70%) |              | * Best |   3/100 |       81 |     25    54     2  30.9 |        0.02% |         1.797 USDT    (0.18%) | 0 days 13:12:00 |     2.23076 |         6.723 USDT    (0.67%) |              | * Best |   4/100 |       81 |     27    52     2  33.3 |        0.07% |         5.298 USDT    (0.53%) | 0 days 13:13:00 |     2.21902 |         6.524 USDT    (0.65%) |              | * Best |  11/100 |       81 |     28    51     2  34.6 |        0.07% |         6.012 USDT    (0.60%) | 0 days 13:20:00 |     2.21663 |         6.950 USDT    (0.69%) |              | * Best |  20/100 |       81 |     24    55     2  29.6 |        0.09% |         7.154 USDT    (0.72%) | 0 days 13:24:00 |      2.2128 |         6.687 USDT    (0.66%) |              |   Best |  34/100 |       81 |     26    53     2  32.1 |        0.11% |         9.196 USDT    (0.92%) | 0 days 13:28:00 |     2.20599 |         6.791 USDT    (0.67%) |              |   Best |  40/100 |       81 |     27    52     2  33.3 |        0.12% |         9.655 USDT    (0.97%) | 0 days 13:30:00 |     2.20446 |         6.702 USDT    (0.66%) |              |   Best |  46/100 |       81 |     29    50     2  35.8 |        0.12% |         9.890 USDT    (0.99%) | 0 days 13:32:00 |     2.20368 |         6.772 USDT    (0.67%) |              |   Best |  51/100 |       81 |     29    50     2  35.8 |        0.13% |        10.093 USDT    (1.01%) | 0 days 13:34:00 |       2.203 |         6.990 USDT    (0.69%) |               [Epoch 100 of 100 (100%)] ||                                                                                                                 | [Time:  0:28:34, Elapsed Time: 0:28:34]2023-04-05 04:27:07,764 - freqtrade.optimize.hyperopt - INFO - 100 epochs saved to '/root/freqtrade/freqtrade/user_data/hyperopt_results/strategy_SampleStrategy_2023-04-05_03-58-20.fthypt'.2023-04-05 04:27:07,767 - freqtrade.optimize.hyperopt_tools - INFO - Dumping parameters to /root/freqtrade/freqtrade/user_data/strategies/sample_strategy.jsonBest result:    51/100:     81 trades. 29/50/2 Wins/Draws/Losses. Avg profit   0.13%. Median profit   0.00%. Total profit 10.09342971 USDT (   1.01%). Avg duration 13:34:00 min. Objective: 2.20300    # Buy hyperspace params:    buy_params = {        "buy_rsi": 30,  # value loaded from strategy        "exit_short_rsi": 30,  # value loaded from strategy    }    # Sell hyperspace params:    sell_params = {        "sell_rsi": 70,  # value loaded from strategy        "short_rsi": 70,  # value loaded from strategy    }    # ROI table:    minimal_roi = {        "0": 0.17,        "20": 0.1,        "77": 0.04,        "191": 0    }    # Stoploss:    stoploss = -0.1  # value loaded from strategy    # Trailing stop:    trailing_stop = False  # value loaded from strategy    trailing_stop_positive = None  # value loaded from strategy    trailing_stop_positive_offset = 0.0  # value loaded from strategy    trailing_only_offset_is_reached = False  # value loaded from strategy    # Max Open Trades:    max_open_trades = 10  # value loaded from strategy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以此roi和stoploss可以修改user_data文件夹的策略python文件。</p><ol start="2"><li>也可以使用以下来优化，平衡交易时间的止损函数：<pre class="line-numbers language-linux"><code class="language-linux">python main.py hyperopt --hyperopt-loss ShortTradeDurHyperOptLoss --space roi --strategy SampleStrategy -e 100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>结果为：</p><pre class="line-numbers language-linux"><code class="language-linux">2023-04-05 04:30:01,702 - freqtrade.optimize.hyperopt - INFO - Effective number of parallel workers used: 1+--------+---------+----------+--------------------------+--------------+-------------------------------+-----------------+-------------+-------------------------------+|   Best |   Epoch |   Trades |    Win  Draw  Loss  Win% |   Avg profit |                        Profit |    Avg duration |   Objective |           Max Drawdown (Acct) ||--------+---------+----------+--------------------------+--------------+-------------------------------+-----------------+-------------+-------------------------------|| * Best |    1/20 |       81 |     22    57     2  27.2 |       -0.01% |        -0.615 USDT   (-0.06%) | 0 days 13:02:00 |     2.23887 |         6.632 USDT    (0.66%) || * Best |    3/20 |       81 |     23    56     2  28.4 |        0.03% |         2.728 USDT    (0.27%) | 0 days 13:13:00 |     2.22764 |         6.780 USDT    (0.67%) |              | * Best |    6/20 |       81 |     27    52     2  33.3 |        0.04% |         3.369 USDT    (0.34%) | 0 days 13:09:00 |     2.22549 |         6.408 USDT    (0.64%) |              | * Best |    8/20 |       81 |     33    46     2  40.7 |        0.17% |        13.398 USDT    (1.34%) | 0 days 13:35:00 |     2.19202 |         6.946 USDT    (0.69%) |               [Epoch 20 of 20 (100%)] ||                                                                                                                   | [Time:  0:03:49, Elapsed Time: 0:03:49]2023-04-05 04:34:04,874 - freqtrade.optimize.hyperopt - INFO - 20 epochs saved to '/root/freqtrade/freqtrade/user_data/hyperopt_results/strategy_SampleStrategy_2023-04-05_04-30-01.fthypt'.2023-04-05 04:34:04,876 - freqtrade.optimize.hyperopt_tools - INFO - Dumping parameters to /root/freqtrade/freqtrade/user_data/strategies/sample_strategy.jsonBest result:*    8/20:     81 trades. 33/46/2 Wins/Draws/Losses. Avg profit   0.17%. Median profit   0.00%. Total profit 13.39796932 USDT (   1.34%). Avg duration 13:35:00 min. Objective: 2.19202    # Buy hyperspace params:    buy_params = {        "buy_rsi": 30,  # value loaded from strategy        "exit_short_rsi": 30,  # value loaded from strategy    }    # Sell hyperspace params:    sell_params = {        "sell_rsi": 70,  # value loaded from strategy        "short_rsi": 70,  # value loaded from strategy    }    # ROI table:    minimal_roi = {        "0": 0.188,        "34": 0.052,        "90": 0.017,        "205": 0    }    # Stoploss:    stoploss = -0.1  # value loaded from strategy    # Trailing stop:    trailing_stop = False  # value loaded from strategy    trailing_stop_positive = None  # value loaded from strategy    trailing_stop_positive_offset = 0.0  # value loaded from strategy    trailing_only_offset_is_reached = False  # value loaded from strategy    # Max Open Trades:    max_open_trades = 10  # value loaded from strategy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对比1和2，方法2收益更大</p><h2 id="6-量化交易入口"><a href="#6-量化交易入口" class="headerlink" title="6. 量化交易入口"></a>6. 量化交易入口</h2><h3 id="1-freqtrade-commands-trade-commands-py"><a href="#1-freqtrade-commands-trade-commands-py" class="headerlink" title="1.freqtrade\commands\trade_commands.py"></a>1.freqtrade\commands\trade_commands.py</h3><p>用到的命令：</p><pre class="line-numbers language-linux"><code class="language-linux">usage: freqtrade [-h] [-V]                 {trade,create-userdir,new-config,new-strategy,download-data,convert-data,convert-trade-data,list-data,backtesting,edge,hyperopt,hyperopt-list,hyperopt-show,list-exchanges,list-hyperopts,list-markets,list-pairs,list-strategies,list-timeframes,show-trades,test-pairlist,install-ui,plot-dataframe,plot-profit,webserver}                 ...Free, open source crypto trading botpositional arguments:  {trade,create-userdir,new-config,new-strategy,download-data,convert-data,convert-trade-data,list-data,backtesting,edge,hyperopt,hyperopt-list,hyperopt-show,list-exchanges,list-hyperopts,list-markets,list-pairs,list-strategies,list-timeframes,show-trades,test-pairlist,install-ui,plot-dataframe,plot-profit,webserver}    trade               Trade module.    create-userdir      Create user-data directory.    new-config          Create new config    new-strategy        Create new strategy    download-data       Download backtesting data.    convert-data        Convert candle (OHLCV) data from one format to                        another.    convert-trade-data  Convert trade data from one format to another.    list-data           List downloaded data.    backtesting         Backtesting module.    edge                Edge module.    hyperopt            Hyperopt module.    hyperopt-list       List Hyperopt results    hyperopt-show       Show details of Hyperopt results    list-exchanges      Print available exchanges.    list-hyperopts      Print available hyperopt classes.    list-markets        Print markets on exchange.    list-pairs          Print pairs on exchange.    list-strategies     Print available strategies.    list-timeframes     Print available timeframes for the exchange.    show-trades         Show trades.    test-pairlist       Test your pairlist configuration.    install-ui          Install FreqUI    plot-dataframe      Plot candles with indicators.    plot-profit         Generate plot showing profits.    webserver           Webserver module.optional arguments:  -h, --help            show this help message and exit  -V, --version         show program's version number and exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-初调代码报错"><a href="#2-初调代码报错" class="headerlink" title="2.初调代码报错"></a>2.初调代码报错</h3><p>配置好环境以后，数据下载没有问题，回测也没有问题，使用trade去运行以后，就一直报错：<br><code>python main.py trade --config user_data/config.json --strategy SampleStrategy</code><br>clone稳定版的freqtrade文件，部署成freqtrade程序仍然没用，都会出现下面显示的问题：<br><code># sqlite3.OperationalError: near “,“: syntax error</code><br>debug了好久也没有解决，本来对python自带的sqlite数据库也不了解，再加上使用SQLAlchemy来搭配操作<a href="https://www.cnblogs.com/lsdb/p/9835894.html" target="_blank" rel="noopener">Python3+SQLAlchemy+Sqlite3实现ORM教程</a>，最后没办法，根据错误信息将更新数据库的不影响程序主体的的代码给注释了,注释了一行代码：<br><code>fix_old_dry_orders(engine)</code><br>位置在：</p><pre class="line-numbers language-linux"><code class="language-linux">Traceback (most recent call last):  File "/root/freqtrade/freqtrade/commands/trade_commands.py", line 25, in start_trading    worker = Worker(args)  File "/root/freqtrade/freqtrade/worker.py", line 37, in __init__    self._init(False)  File "/root/freqtrade/freqtrade/worker.py", line 54, in _init    self.freqtrade = FreqtradeBot(self._config)  File "/root/freqtrade/freqtrade/freqtradebot.py", line 74, in __init__    init_db(self.config['db_url'])  File "/root/freqtrade/freqtrade/persistence/models.py", line 82, in init_db    check_migrate(engine, decl_base=ModelBase, previous_tables=previous_tables)  File "/root/freqtrade/freqtrade/persistence/migrations.py", line 343, in check_migrate    fix_old_dry_orders(engine)  File "/root/freqtrade/freqtrade/persistence/migrations.py", line 282, in fix_old_dry_orders    connection.execute(stmt)  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1414, in execute    return meth(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection    return connection._execute_clauseelement(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement    ret = self._execute_context(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context    return self._exec_single_context(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context    self._handle_dbapi_exception(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context    self.dialect.do_execute(  File "/usr/local/python3/lib/python3.9/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute    cursor.execute(statement, parameters)sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near ",": syntax error[SQL: UPDATE orders SET ft_is_open=? WHERE orders.ft_is_open IS 1 AND ((orders.ft_trade_id, orders.order_id) NOT IN (SELECT trades.id, trades.stoploss_order_id FROM trades WHERE trades.stoploss_order_id IS NOT NULL)) AND orders.ft_order_side = ? AND orders.order_id LIKE ?][parameters: (0, 'stoploss', 'dry%')]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就能正常运行了，在当前文件夹目录下会产生<code>tradesv3.dryrun.sqlite</code>数据库文件<a href="https://www.cnblogs.com/lemonbit/p/7078038.html" target="_blank" rel="noopener">Python读取和处理文件后缀为”.sqlite”的数据文件 - lemonbit - 博客园 (cnblogs.com)</a>。</p><h3 id="3-重新调试"><a href="#3-重新调试" class="headerlink" title="3.重新调试"></a>3.重新调试</h3><p>最后定位到是这段更新数据库的SQL语句有问题，sqlite执行由sqlalchemy写成的语句时报错。</p><pre class="line-numbers language-linux"><code class="language-linux">with  engine.begin() as  connection:stmt = update(Order).where(Order.ft_is_open.is_(True),tuple_(Order.ft_trade_id, Order.order_id).not_in(select(Trade.id, Trade.stoploss_order_id).where(Trade.stoploss_order_id.is_not(None))),Order.ft_order_side == 'stoploss',Order.order_id.like('dry%'),).values(ft_is_open=False)connection.execute(stmt)stmt = update(Order).where(Order.ft_is_open.is_(True),tuple_(Order.ft_trade_id, Order.order_id).not_in(select(Trade.id, Trade.open_order_id).where(Trade.open_order_id.is_not(None))),Order.ft_order_side != 'stoploss',Order.order_id.like('dry%')).values(ft_is_open=False)connection.execute(stmt)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后简化语句以后就能成功运行。那说明就是这一条语句写错了，出现的多打问号问题也排查了，仍然不行。不过最后也无关紧要了。</p><pre class="line-numbers language-linux"><code class="language-linux">#这样运行能成功stmt = update(Order).where(Order.ft_is_open.is_(True)).values(ft_is_open=False)connection.execute(stmt)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/www121104115/article/details/75051685" target="_blank" rel="noopener">(78条消息) SQLite中出现错误：Error: near “)”: syntax error_www121104115的博客-CSDN博客</a></p><h2 id="7-其他项目和文献资料"><a href="#7-其他项目和文献资料" class="headerlink" title="7. 其他项目和文献资料"></a>7. 其他项目和文献资料</h2><p><a href="https://github.com/jlcxxzj/machine-learning-for-trading">jlcxxzj/machine-learning-for-trading: Code for Machine Learning for Algorithmic Trading, 2nd edition. (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 量化分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Freqtrade </tag>
            
            <tag> 一些Linux小tip </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化分析入门篇|上手一个稍微高大上的策略实现</title>
      <link href="/2023/04/02/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-ru-men-pian/"/>
      <url>/2023/04/02/1-xiang-mu/liang-hua-fen-xi-xiang-mu/liang-hua-fen-xi-ru-men-pian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-调研"><a href="#1-调研" class="headerlink" title="1.调研"></a>1.调研</h2><p>作者在开始写这篇文档之前的一个多礼拜才开始接触量化分析这个领域，之前只当是金融领域的一个专业名词，就像你也不会去深究深度学习中变分自编码器是什么模型一样。一切的开端只是因为金融领域的同学在朋友圈发了一则招聘启事，私募公司量化交易岗位，声称同行业两三倍工资，而金融行业的基本工资水平也早有耳闻，还真让人想入非非。再看岗位要求，在软件编程和机器学习也算是摸爬滚打好几年了，程序能力还是可以的，于是找上同学，果断的投去了简历，完全不知道量化交易岗位比互联网大厂还要卷几个档次，清华北大也只是基本门槛。现在想还真是不知者无畏，结果可想而知是石沉大海。</p><pre class="line-numbers language-txt"><code class="language-txt">**量化模型岗**职责描述：1、负责衍生品模型和对冲策略研究，实现相关模型定价、风险管理、参数管理等功能的开发和部门业务系统的集成工作；2、负责交易策略研究，定期进行更新迭代，提升策略收益水平和稳定性，挖掘高质量、低相关的因子，为模型提供更多信息增益。任职要求：1、硕士研究生及以上学历，金融工程、数学、计算机、物理等专业优先，对金融衍生产品具有一定了解；2、具有衍生品相关经验者优先；3、具有良好的数理基础和编程能力，至少熟练掌握一种编程语言；具备良好的学习能力、沟通能力，态度积极主动，踏实肯干，适应快节奏高效率工作。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt"><code class="language-txt">**量化交易运维**岗位职责：1.参与交易平台维护、功能模块设计开发，负责量化交易实现系统稳定运行；2.为量化策略研究员提供技术上支持；3.软硬件优化、数据分析；4.可涉及相应的量化交易策略开发、系统实现；5.公司数据库的维护工作。任职要求：1.全日制院校数学、电子及计算机相关专业，本科以上学历（含本科），硕博优先；2.精通数据结构和算法，精通 Python，熟悉 C/C++ 优先，有大规模工程经验优先；3.精通 SQL 语言，熟练使用 MySQL；4.精通 Linux 日常操作和维护，能进行shell脚本开发；5、有财务知识背景或alpha策略研究经验者；熟悉金证、恒生、顶点等主流厂商柜台系统者；有ETF、期货或期权等金融衍生品交易相关经验者优先；6、为人诚实稳重，具有强烈的工作责任心及团队合作精神，能适应较强的工作压力。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt"><code class="language-txt">**C++开发工程师**工作职责：1. 完善优化公司低延迟交易系统及相关组件2. 对接券商交易柜台和实时行情3. 开发高性能回测平台4. 海量历史行情处理岗位要求：1. 1-5年私募量化开发工作/大型互联网、科技公司经验2. 熟悉C++11及以上的标准,能够熟练在linux下进行工作3. 数量掌握算法和数据结构相关知识，了解计算机体系结构，能够写出高性能的代码4. 重点院校计算机相关专业5. 热爱技术**机器学习**职责描述： 研究针对高维金融数据的建模和模型估计问题任职要求：1.具有扎实的数学和统计功底，对高维统计模型的原理及应用有深刻理解2.具有2年以上机器学习研究经验3.数学、统计学、物理学、计算机或相关专业硕士或博士学位4.熟练使用一种编程语言5.有深度学习、贝叶斯统计以及随机过程相关研究经验更佳**投研实习生**岗位职责1在基金经理的指导下进行数据挖掘/统计分析。2. 从各类数据中发现规律，包括财务、舆情、量价等。任职资格:1.985/211或海外知名高校，本科及以上学历。数学、统计、计算机、大数据或其他相关理工科专业。每周至少3天，实习期至少3个月。2.熟悉python语言。3.有因子开发经验或机器学习经验优先。4.良好的团队合作意识和沟通能力。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不过，这番过程也成功让我第一次认识到了量化交易岗位，原来自动化过程不仅仅在工业领域，在金融领域也有另一出天地。从量化交易定义、专业名词、应用范围，化了几天的时间简单从知乎、B站等平台过了一下。</p><p>金融咱现在不懂，但是软件自动化熟悉啊，把人解放出来，用程序的理性操作代替人的感性想法，这不让人斗志昂扬，得干呀！</p><p>话说回来，这就是当目前为止我对量化交易的基本认识，先不去管因子分析、alpha、beta术语，从程序的角度入手，构建一个可以回测的模型，完成一笔虚拟的交易。</p><h2 id="2-使用云服务器搭建模型"><a href="#2-使用云服务器搭建模型" class="headerlink" title="2.使用云服务器搭建模型"></a>2.使用云服务器搭建模型</h2><p>由于作者此时正处于完成毕业设计的时间，去搭建这种由兴趣驱动暂时没啥用的模型是显得不务正业，更何况一台拯救者笔记本搞了太多模型和文件，看着标红的CDE盘，不想在忍再摧残它，来影响我毕业（毕竟毕业优先），这也就引出了我想租一台云服务器的想法，云计算虽然火了好几年了，之前想用linux系统或者其他计算机帮忙计算的时候，搞一个虚拟机或者远程桌面软件操作实验室的电脑，此刻也不合适了。</p><p>看了网上的介绍，了解了国内外的云服务器提供商，甲骨文云很诱人，注册实在太困难了，没有外币实体信用卡，用国内的信用卡或者虚拟信用卡很难成功，忙活了好几天也没有成功，亚马逊云、微软云注册相对简单一点，成不成功也全看命。国内的一圈云服务商像是阿里、华为、腾讯等的价格让我这种穷学生吃不消。于是最后将目光锁定在了小众的国外云服务器商上来搭建虚拟个人服务器，也就是VPS，实惠是第一目的，作为备份的VPS也不需要太优秀的性能，想是Vultr、Dmit、搬瓦工、Cloudcone都可以比较选择，本人最后选择了[<a href="https://app.cloudcone.com/?ref=8355" target="_blank" rel="noopener">Login — CLOUDCONE</a>]，一年20美元左右，用户界面做的很简洁清新、客服态度也很好，当然拿上优惠，价格直接便宜一半[<a href="https://kejilion.blogspot.com/2022/04/cloudconevps.html" target="_blank" rel="noopener">CloudCone付费VPS分享 挺便宜的 (kejilion.blogspot.com)</a>]。</p><p>再使用VPS的IP和密码/密钥，就可以远程访问了，为了便于操作，使用XShell在自己电脑界面下访问搭好的服务器，当然也可以在本机CMD下访问。</p><h2 id="3-在VPS上尽情发挥"><a href="#3-在VPS上尽情发挥" class="headerlink" title="3.在VPS上尽情发挥"></a>3.在VPS上尽情发挥</h2><p>有了云服务器，再也不用担心硬件不够用了，不会将重要个人信息放到云服务器上，内存不够删了大不了重新建一个的事情，也不用担心和本机的干涉问题。</p><p>购买服务器的时候就会选好硬件和操作系统，我选择的是Linux Centos7.9版本。为了快速上线一个模型，使用Freqtrade开源的量化交易模型并用docker来部署，省去了很多环境搭建的时间。</p><h2 id="4-部署docker-拉取镜像，搭建量化模型容器"><a href="#4-部署docker-拉取镜像，搭建量化模型容器" class="headerlink" title="4.部署docker,拉取镜像，搭建量化模型容器"></a>4.部署docker,拉取镜像，搭建量化模型容器</h2><p>1.VPS上开始是裸操作系统，没有docker软件，需要下载<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Install Docker Engine on CentOS</a></p><pre class="line-numbers language-linux"><code class="language-linux">sudo yum install -y yum-utilssudo yum-config-manager --add-repo \    https://download.docker.com/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需要注意的是，在这里安装的是docker driver，要使用compose还需要再添加：<br><code>sudo yum install docker-ce docker-ce-li containerd.io docker-compose-plugin</code><br><a href="https://segmentfault.com/a/1190000040067422" target="_blank" rel="noopener">十分钟掌握Docker基本使用 - Stone的进击之路 - SegmentFault 思否</a><br><a href="https://blog.csdn.net/wangjun5159/article/details/127276708" target="_blank" rel="noopener">(85条消息) 安装docker、docker engine和docker desktop区别_wangjun5159的博客-CSDN博客</a><br><a href="https://www.runoob.com/docker/docker-compose.html" target="_blank" rel="noopener">Docker Compose | 菜鸟教程 (runoob.com)</a><br>由于先下的docker再加的compose组件，因此使用docker compose来运行命令。<br><a href="https://blog.csdn.net/weixin_30813385/article/details/112110614" target="_blank" rel="noopener">(85条消息) docker pull拉取镜像_Docker三剑客之docker-compose_美丽芦苇的博客-CSDN博客</a><br><a href="https://zhuanlan.zhihu.com/p/23599229" target="_blank" rel="noopener">只要一小时，零基础入门Docker - 知乎 (zhihu.com)</a><br>2.从Freqtrade开源项目中拉取镜像，<a href="https://www.freqtrade.io/en/stable/docker_quickstart/" target="_blank" rel="noopener">Quickstart with Docker - Freqtrade</a>，在这里呢，docker的<code>docker-compose.yml</code> 文件形式将模型中用到的不同镜像编排好，我们直接下载下来拉取就可以：</p><pre class="line-numbers language-linux"><code class="language-linux">mkdir ft_userdatacd ft_userdata/# Download the docker-compose file from the repository 下载镜像配置文件docker-composecurl https://raw.githubusercontent.com/freqtrade/freqtrade/stable/docker-compose.yml -o docker-compose.yml# llPu the freqtrade image# 从配置文件中拉取服务依赖的镜像docker compose pull# Create user directory structure通过run创建新的运行容器docker compose run --rm freqtrade create-userdir --userdir user_data# Create configuration - Requires answering interactive questionsdocker compose run --rm freqtrade new-config --config user_data/config.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>docker compose run --rm freqtrade new-config --config user_data/config.json</code>运行的时候需要填一些默认信息，包括交易所的选择、是否使用软件通知等，后期也可以通过<code>vi</code>命令修改，或者<code>cat</code>命令查看。以上的完成就搭好了模型，启动部署好的容器即可。</p><h2 id="5-使用部署好的Freqtrade容器，完成量化交易操作"><a href="#5-使用部署好的Freqtrade容器，完成量化交易操作" class="headerlink" title="5.使用部署好的Freqtrade容器，完成量化交易操作"></a>5.使用部署好的Freqtrade容器，完成量化交易操作</h2><p>通过<code>docker  compose  up  -d</code>命令启动freqtrade镜像容器。然后我们肯定是想通过这个量化交易模型完成一些操作。比如，下载交易数据、回测数据、可视化等。通过<code>docker  compose  down</code>来关闭容器。<br>下载交易数据：<br><code>docker compose run --rm freqtrade download-data --pairs ETH/BTC --exchange binance --days 5 -t 1h</code><br>回测数据：<br><code>docker compose run freqtrade backtesting --timerange 20230101-20230202 --strategy SampleStrategy</code><br>可视化数据:<br><code>docker compose run --rm freqtrade plot-dataframe --strategy AwesomeStrategy -p BTC/ETH --timerange=20180801-20180805</code><br>注意：可视化数据从linux服务器上下载到Windows系统电脑上的时候，使用<code>sudo yum -y install lrzsz</code>下载<code>lrzsz</code>库，通过<code>sz freqtrade-plot-BTC_USDT-5m.html</code>将html文件下载。</p><h2 id="6-参考链接"><a href="#6-参考链接" class="headerlink" title="6. 参考链接"></a>6. 参考链接</h2><ol><li><a href="https://www.zhihu.com/question/22211032/answer/2504619657" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 学习量化交易如何入门？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/24179101/answer/2188611287" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 量化交易都有哪些主要的策略模型？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/22948899/answer/255635595" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 有哪些值得推荐的量化投资类书籍？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/442308593/answer/2937912404" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 懂机器学习如何入门量化交易？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/531659524/answer/2939398957" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 一个量化策略的研发过程是怎么样的? - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/615917135" target="_blank" rel="noopener">做量化交易发愁写代码？一招教你白嫖GPT-4智能编程神器 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/268842359/answer/2942563157" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 如何制定一条量化交易的学习路线？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/326160252/answer/852531737" target="_blank" rel="noopener">(1 封私信 / 80 条消息) 量化交易，你选择用什么平台来搭建自己的业务体系：商业软件、开源软件、自主开发？ - 知乎 (zhihu.com)</a></li><li><a href="https://www.bilibili.com/video/BV1UJ411U7Kc/?spm_id_from=333.999.0.0" target="_blank" rel="noopener">SVM核方法–这是我见过最好的一个视频。。核技巧核函数_哔哩哔哩_bilibili</a></li><li><a href="https://www.youtube.com/watch?v=b8tYNGgV-u0" target="_blank" rel="noopener">浅析币圈量化框架freqtrade - YouTube</a></li><li><a href="https://www.youtube.com/watch?v=a3Q5gTqaHzc&list=PLkEP-p1U_o1UtijtjArJl1RbDBaX-QoMu" target="_blank" rel="noopener">【硬核搞钱1】零成本十分钟部署云端交易机器人 - YouTube</a></li><li><a href="https://www.bilibili.com/video/BV1FA4y1Z7NP/?spm_id_from=333.999.0.0" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1FA4y1Z7NP/?spm_id_from=333.999.0.0</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 量化分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Docker </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> Linux </tag>
            
            <tag> 调研 </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Freqtrade </tag>
            
            <tag> 一些Linux小tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动化测试系统 | 持续更新</title>
      <link href="/2023/03/17/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/zi-dong-hua-ce-shi-xi-tong/"/>
      <url>/2023/03/17/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/zi-dong-hua-ce-shi-xi-tong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-嵌入式测试系统"><a href="#1-嵌入式测试系统" class="headerlink" title="1. 嵌入式测试系统"></a>1. 嵌入式测试系统</h2><h3 id="嵌入式系统也是计算机系统"><a href="#嵌入式系统也是计算机系统" class="headerlink" title="嵌入式系统也是计算机系统"></a>嵌入式系统也是计算机系统</h3><p>嵌入式系统也是计算机系统，只是这种系统更便捷、可移植性更强。<br>嵌入式系统在操作系统层面，使用的是Linux系统；</p><p>嵌入式系统在分层上面也和一般的计算机系统一样，分为APP应用层、Kernel内核操作系统层、CPU,内存，磁盘，IO等硬件层；</p><ol><li>APP,应用层层面，使用操作系统的接口和函数，来开发有特定用途的应用程序。</li><li>操作系统的作用有两个层面，第一个层面是统一管理计算机的硬件和软件；第二个层面是为上层的应用程序软件提供应用接口，即API，提供函数供于调用</li><li>ARM硬件层用于外界和计算机进行信号和数据的输入和输出，进行数据和信息的交互</li></ol><p>因此操作系统向下管理硬件，向上提供接口，供顶层开发，也就是应用软件开发。</p><h3 id="Linux操作系统的开发嵌入式模块"><a href="#Linux操作系统的开发嵌入式模块" class="headerlink" title="Linux操作系统的开发嵌入式模块"></a>Linux操作系统的开发嵌入式模块</h3><p><a href="https://www.php.cn/linux-491525.html" target="_blank" rel="noopener">linux由哪些部分组成-linux运维-PHP中文网</a><br>Linux内部内核有五大块的功能，也就是提供五类的API：</p><ol><li>进程管理：</li><li>内存管理：</li><li>网络协议：</li><li>文件系统：对磁盘的文件的管理，新建一个文件，删除一个文件，open创建文件、read文件</li><li>设备管理：蜂鸣器、LED、键盘、鼠标、屏幕；在学习ARM的时候，是没有操作系统的，所以对于设备的管理是直接写程序，配置寄存器，让硬件工作；当有了操作系统之后，对于硬件的管理，是在操作系统内部去完成的，所以在有操作系统的情况下，应用层想控制硬件的时候，是不会配置寄存器的，也是直接调操作系统的接口的，让应用层程序去控制硬件；</li></ol><h2 id="2-嵌入式系统移植，也就是配置（不仅仅是装系统，得匹配）"><a href="#2-嵌入式系统移植，也就是配置（不仅仅是装系统，得匹配）" class="headerlink" title="2.嵌入式系统移植，也就是配置（不仅仅是装系统，得匹配）"></a>2.嵌入式系统移植，也就是配置（不仅仅是装系统，得匹配）</h2><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><p><a href="https://www.bilibili.com/video/BV19v411H7d3/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">【嵌入式高手进阶必备】系统移植（2021新版）_哔哩哔哩_bilibili</a></p><h3 id="用途，目的：装系统"><a href="#用途，目的：装系统" class="headerlink" title="用途，目的：装系统"></a>用途，目的：装系统</h3><p>在基于ARM处理器的开发板上安装Linux系统<br>这是因为在机器人上使用操作系统，不能把电脑放到机器人里面，所以使用ARM开发板，比较廉价，给机器人加一个Linux。</p><h3 id="开发板上装操作系统的意义"><a href="#开发板上装操作系统的意义" class="headerlink" title="开发板上装操作系统的意义"></a>开发板上装操作系统的意义</h3><ol><li>如果没有系统，写小的程序需要我们层最底层开始写C语言，更重要的是，函数之间不能调用，不能调用IO等库函数，自己写的函数可以调用。</li><li>sleep，printf等函数都不能调用，这样就大大增加了开发难度，只能做一些小的项目。</li></ol><h3 id="在电脑上装操作系统和开发板上装系统的区别在哪呢"><a href="#在电脑上装操作系统和开发板上装系统的区别在哪呢" class="headerlink" title="在电脑上装操作系统和开发板上装系统的区别在哪呢"></a>在电脑上装操作系统和开发板上装系统的区别在哪呢</h3><ol><li>其实装系统本身倒不是很大，因为Linux本身并不大，而大部分的时间是在移植的工作，也就是将系统和硬件匹配的工作。</li><li>因为不同架构的处理器指令集并不兼容，硬件设计不一样，指令集也就不一样，对于不同处理器，都有一套自己的汇编；对于Linux来说，包含C语言和汇编语言，在不同架构的处理器上，汇编语言写法也不一样的；X86架构和ARM架构上不一样；</li><li>即使处理器的架构一样，外设电路不一样，开发板不一样，Linux系统也是不兼容的；如在做LED实验的时候，第一件事看电路图，看led怎么控制的是高电平亮还是低电平亮，其次是要看LED连到了处理器的哪一个引脚上，然后再写程序，配置相关的寄存器，去控制引脚高低，来使得led闪烁；连到了哪个寄存器就配置寄存器到那个引脚上。</li><li>不同环境下面的开发板，LED接的引脚位置不一样，通过程序和寄存器控制引脚的方式，能够执行程序，现象是错误的，因为控制的引脚不对。</li><li>总之，不同处理器，汇编指令不一样，开发板不一样，都会使得操作系统不兼容，这部分代码称为平台相关代码，这部分代码和硬件相关，硬件变，代码就得变。</li><li>Linux是一个通用的内核，并不是为某一个特定的的处理器架构或者板块设计的，所以从官方网站上下载的是源代码，和Windows系统不一样，其下载的是镜像，类似是编译完以后的系统，可以直接在电脑上使用，这种源代码和开发板是不匹配的，电路图设计、处理器都是我们自己设计的，和硬件不匹配的情况下，需要我们调整和配置源代码，加工源代码使得和硬件配套，匹配之后才能进行编译和安装。因为源代码是C语言和汇编语言写的，需要编译之后才能在处理器上安装。</li></ol><h2 id="3-嵌入式系统移植内容"><a href="#3-嵌入式系统移植内容" class="headerlink" title="3. 嵌入式系统移植内容"></a>3. 嵌入式系统移植内容</h2><p>嵌入式系统移植分为两个阶段，第一阶段主要介绍开发板的启动过程、uboot的安装及使用、 Linux的安装与加载、根文件系统的安装与加载等，旨在让学员掌握Linux的安装、加载、启动等过程。第二阶段主要介绍uboot、Linux内核、设备树、Linux设备驱动、根文件系统的移植过程，旨在让你掌握系统移植及内核开发的基本技能，为后续内核开发打牢基础。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>应用广泛，基本的装系统肯定得会，给手机刷个机，系统都装不上，后面的学习就无从说起了</li><li>知识面广，应用开发，C语言基础过关了，其他的就没有过多的要求的了。而操作系统移植涉及到硬件层面的知识，同时还得掌握应用层接口调用的一些知识。shell，Linux系统结构的认识等，linux代码的学习；</li><li>实验性强，基本上不用写代码 ，就是环境资源配置硬件的问题</li></ol><h3 id="思维方式，学习方法"><a href="#思维方式，学习方法" class="headerlink" title="思维方式，学习方法"></a>思维方式，学习方法</h3><p>配置、编译、安装：电脑编译，开发板上安装；下载源代码，配置Linux源码，电脑上编译，安装到开发板上；<br>重方法，轻细节：过程，流程是怎么流转的，代码细节不必过于关心；</p><h3 id="系统移植过程"><a href="#系统移植过程" class="headerlink" title="系统移植过程"></a>系统移植过程</h3><p>类比电脑上装linux系统，开发板上装Linux类似，包括以下步骤：</p><ol><li>Windows装机<br>（1）准备Windows系统镜像（类似于操作系统的安装包）、装备U盘启动盘（往U盘里面刷一个老毛桃、大白菜等程序，从而引导操作系统的安装过程）<br>（2）进入BIOS选择启动方式（U盘启动），在装系统时，开机之后立马按一些按键（F10,F12），使得电脑进入BIOS（基本输入输出系统，程序，电脑生产厂家固化到电脑上）界面，给电脑设置启动方式，如U盘；BIOS有基本界面，从而对电脑的软硬件做一一些基础的设置如CPU虚拟化功能的开和关，装系统进入BIOS是为了设置启动方式，进入BIOS可以设置光驱启动、硬盘驱动，当电脑开机之后，先运行哪个介质的程序，当把启动方式设置为硬盘启动之后，电脑上电之后就先去执行硬盘的程序；<br>（3）通过U盘的引导程序安装操作系统，如运行起来老毛桃引导程序时，在其界面上可以将系统镜像安装到电脑上，安装完毕之后，在运行起来电脑之后就进入操作系统界面了<br>（4）安装Windows驱动程序，安装完操作系统之后，重启电脑就能运行起来Windows系统里，但是会发现一个问题，有很多硬件不能使用，比如网卡驱动不能用（不能上网)、显卡驱动（屏幕不能正常显示）、声卡驱动、鼠标不能正常使用，驱动也是一个软件，也是程序，驱动的功能驱动硬件的工作，硬件没有对应的驱动程序是不能正常工作的，虽然系统自动了一部分驱动，但是有些驱动不兼容或者没有的问题，需要自己安装，在安装完操作系统和驱动程序之后，才可以说操作系统安装完毕了<br>（5）安装Windows应用程序，即APP，有特定应用功能的程序，来实现想实现的功能，如QQ，微信等。</li><li>开发板上Linux系统移植到处理器里面<br>（1）准备Linux内核镜像，SD卡启动，当然也可以使用硬盘、U盘等，引导程序ubuntu刷到SD卡里面<br>（2）开发板里面不像电脑，厂家提前烧入了BIOS等基础功能的界面，在开发板里，处理器的厂家会固化了一段代码，BL0，通过这段代码来选择启动方式的运行；开发板通过在拨码开关来选择启动方式，断电情况下就可以拨拨码开关，然后通电，BL0就会检测选择的是哪种启动方式。<br>（3）通过SD卡中的引导程序安装系统，Ubuntu来把系统安装到开发板的处理器上<br>（4）将操作系统安装到开发板里面之后，会发现，开发板上的硬件如，蜂鸣器、LED、加速度角度度检测传感器等不能正常使用，这是因为缺少驱动这些硬件工作的驱动程序。这需要安装对应的驱动程序。<br>（5）开发板上运行起来了完成的Linux系统，还需要安装Linux应用程序，然后将IO、进程、网络、包括数据库所写的代码去移植到开发板上去运行。</li></ol><h3 id="uboot和ubuntu类似"><a href="#uboot和ubuntu类似" class="headerlink" title="uboot和ubuntu类似"></a>uboot和ubuntu类似</h3><p>启动过程：嵌入式系统上电后先执行uboot、然后uboot负责初始化DDR，初始化Flash，然后将OS从Flash中读取到DDR中，然后启动OS(OS启动后uboot就无用了) 总结：嵌入式系统和PC机的启动过程几乎没有两样，只是BIOS成了uboot，硬盘成了Flash。</p><h2 id="4-系统软件和应用软件的区别"><a href="#4-系统软件和应用软件的区别" class="headerlink" title="4. 系统软件和应用软件的区别"></a>4. 系统软件和应用软件的区别</h2><p>系统软件和应用软件的区别：系统软件是指控制和协调计算机及外部设备，支持应用软件开发和运行的系统；应用软件是用户可以使用的各种程序设计语言，以及用各种程序语言编制的应用程序的集合。<br><a href="https://www.php.cn/faq/470215.html#:~:text=1%E3%80%81%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%EF%BC%9A%E6%8C%87%E6%8E%A7%E5%88%B6%E5%92%8C%E5%8D%8F%E8%B0%83%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8F%8A%E5%A4%96%E9%83%A8%E8%AE%BE%E5%A4%87%2C%E6%94%AF%E6%8C%81%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8C%E7%9A%84%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%98%AF%E6%97%A0%E9%9C%80%E7%94%A8%E6%88%B7%E5%B9%B2%E9%A2%84%E7%9A%84%E5%90%84%E7%A7%8D%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%9B%86%E5%90%88%E3%80%82,2%E3%80%81%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%EF%BC%9A%E6%98%AF%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E5%90%84%E7%A7%8D%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%A8%E5%90%84%E7%A7%8D%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BC%96%E5%88%B6%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%9B%86%E5%90%88%E3%80%82%201%E3%80%81%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%EF%BC%9A%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD%E6%98%AF%E8%B0%83%E5%BA%A6%EF%BC%8C%E7%9B%91%E6%8E%A7%E5%92%8C%E7%BB%B4%E6%8A%A4%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%EF%BC%9B%E8%B4%9F%E8%B4%A3%E7%AE%A1%E7%90%86%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%90%84%E7%A7%8D%E7%8B%AC%E7%AB%8B%E7%9A%84%E7%A1%AC%E4%BB%B6%EF%BC%8C%E4%BD%BF%E5%BE%97%E5%AE%83%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%8D%8F%E8%B0%83%E5%B7%A5%E4%BD%9C%E3%80%82" target="_blank" rel="noopener">系统软件和应用软件的区别是什么-常见问题-PHP中文网</a><br>1、系统软件：指控制和协调计算机及外部设备,支持应用软件开发和运行的系统，是无需用户干预的各种程序的集合。<br>2、应用软件：是用户可以使用的各种程序设计语言，以及用各种程序设计语言编制的应用程序的集合。</p><h3 id="功能不同"><a href="#功能不同" class="headerlink" title="功能不同"></a>功能不同</h3><p>1、系统软件：主要功能是调度，监控和维护计算机系统；负责管理计算机系统中各种独立的硬件，使得它们可以协调工作。<br>2、应用软件：件是为满足用户不同领域、不同问题的应用需求而提供的那部分软件。它可以拓宽计算机系统的应用领域，放大硬件的功能。</p><h3 id="特点不同"><a href="#特点不同" class="headerlink" title="特点不同"></a>特点不同</h3><p>1、系统软件：使得计算机使用者和其他软件将计算机当作一个整体而不需要顾及到底层每个硬件是如何工作的。<br>2、应用软件：是利用计算机解决某类问题而设计的程序的集合，供多用户使用。</p><h2 id="5-处理器是如何控制LED灯的"><a href="#5-处理器是如何控制LED灯的" class="headerlink" title="5. 处理器是如何控制LED灯的"></a>5. 处理器是如何控制LED灯的</h2><p>问出这个问题的根本原因还是对模拟电路和数字电路的一个割裂的理解，从电路上来说可以一个硬件是好理解的，通过电流通过电阻生热的原理来控制热水器、通过电磁铁的间断通电来制作下课铃，这些控制从生活认识、知识储备都能比较容易想通，但是从芯片来控制，也就是数字电路来控制，对于没有深刻理解的人来说，多少有点懵逼；<br>其实还是要从数字电路和模拟电路的转换来理解，模拟电路将不同元件搭成的电路，可以实现逻辑的效果，同样，逻辑的信号也可以转化为模拟信号-电流<br><a href="https://www.bilibili.com/video/BV1NF411J7EM/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">单片机入门必知：什么是单片机？单片机是如何工作的？_哔哩哔哩_bilibili</a><br>数字电路里面只有高逻辑电平和低逻辑电平，但是这种实现高低逻辑电平还是由模拟电路元件来搭建的；</p><h2 id="6-51单片机的智能小车各部分模块"><a href="#6-51单片机的智能小车各部分模块" class="headerlink" title="6. 51单片机的智能小车各部分模块"></a>6. 51单片机的智能小车各部分模块</h2><p><a href="https://www.bilibili.com/video/BV1h4411P7iR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1h4411P7iR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br><a href="https://www.bilibili.com/video/BV16S4y1C7ad/?spm_id_from=autoNext&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV16S4y1C7ad/?spm_id_from=autoNext&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a></p><ol><li>51单片机处理器：89C52</li><li>USB模块，串口(WiFi、蓝牙等)通信和给芯片供电；串口通信的时候由于电脑传过来的信号是USB信号，需要340C芯片用于USB转TTL</li><li>电机驱动模块，电机驱动芯片；小的短接片切换电机的供电方式</li><li>红外接受头，红外的遥控通信</li><li>温湿度的传感器</li><li>LED模块，用于红外模块的检测</li><li>蜂鸣器：报警和提示</li><li>按键控制</li><li>芯片引出的另外的引脚</li><li>动态数码管，用于显示红外的控制码</li><li>避障（红外）</li><li>WiFi和蓝牙模块</li><li>复位电路，晶振电路</li></ol><h3 id="理解寄存器"><a href="#理解寄存器" class="headerlink" title="理解寄存器"></a>理解寄存器</h3><p> 寄存器是处理器里暂时存储值的部分，相当于一个开关，表示一个状态和值，赋值和读取寄存器的值是单片机里最常用的操作，寄存器值一般用16进制表示<br> 一个单片机里有很多寄存器，也就是有很多组开关，如何管理这么多组开关呢？就是给每个寄存器也就是开关编个号，为了更好的知道每组开关的功能，最好是再给他们取个名字，开关编号就相当于寄存器的地址，而这个名字就相当于寄存器的符号；如果一组开关有8个位，则可以对每一个位也编一个符号；<br> <a href="https://www.bilibili.com/video/BV1Lr4y137Yx/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Lr4y137Yx/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br> 总的来说，寄存器是CPU内部用来存放数据的小型存储区域，CPU包括：运算器（信息处理），控制器（控制各种器件进行工作），寄存器（信息存储）<br> 那么数字电路是由模拟电路组成的，存储数字数据（信号）的寄存器从模拟电路角度又是如何构成的呢？组成寄存器的电路是由锁存器或触发器构成的，一个触发器或者锁存器存储一位二进制数，一个8位的寄存器至少包含8个触发器或锁存器，在应用层面，可以暂时把部分寄存器当作8位开关；<br> <a href="https://blog.csdn.net/weixin_43879841/article/details/107253390" target="_blank" rel="noopener">(62条消息) 51单片机的IO口和寄存器_背影lmc的博客-CSDN博客_引脚和寄存器的关系</a></p><h3 id="单片机芯片的引脚与寄存器的关系"><a href="#单片机芯片的引脚与寄存器的关系" class="headerlink" title="单片机芯片的引脚与寄存器的关系"></a>单片机芯片的引脚与寄存器的关系</h3><p> 例如STM32的芯片，引脚与外电路相连，用于控制外设，实现这种控制的方式是通过引脚送出不同的电信号。而芯片内部则是通过控制不同寄存器的内容来控制引脚的电平，从而实现芯片传给外设一个指定的信号(指定的01序列，电路上看是一组有序的高低电平)。(这就是芯片输出)<br>同样，外设的引脚也有高低电平作为信号传到芯片引脚，芯片接收到之后根据设置决定是否接收，若是决定接收就用收到的电平序列改变寄存器的对应内容。(这就是芯片输入)</p><h3 id="晶振（石英晶体振荡器）CPU和外部件工作的发号令者"><a href="#晶振（石英晶体振荡器）CPU和外部件工作的发号令者" class="headerlink" title="晶振（石英晶体振荡器）CPU和外部件工作的发号令者"></a>晶振（石英晶体振荡器）CPU和外部件工作的发号令者</h3><p><a href="https://www.bilibili.com/video/BV1VX4y1z7gS/?spm_id_from=333.1007.tianma.2-1-3.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1VX4y1z7gS/?spm_id_from=333.1007.tianma.2-1-3.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a></p><h3 id="USB转TTL"><a href="#USB转TTL" class="headerlink" title="USB转TTL"></a>USB转TTL</h3><p><strong>USB转TTL模块</strong>可以把串口发送的TTL信号转换成USB信号再发送给电脑，电脑就可以接收到单片机发送过来的信号并在上位机（串口调试助手）上显示出来。 大部分单片机都可以使用串口的方式通过相应的上位机软件来下载程序，但是电脑的USB出来的信号是USB信号，单片机是无法识别USB信号的，需要通过USB转TTL模块把USB信号转换成TTL信号才能将程序下载到单片机中。</p><h2 id="7-学习网站"><a href="#7-学习网站" class="headerlink" title="7. 学习网站"></a>7. 学习网站</h2><p><a href="https://www.zhihu.com/search?type=content&q=%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E4%BA%A7%E7%BA%BF%E5%BB%BA%E8%AE%BE" target="_blank" rel="noopener">(1 封私信 / 42 条消息) 自动化测试产线建设 - 搜索结果 - 知乎 (zhihu.com)</a><br><a href="https://www.youtube.com/watch?v=Kh4kbFyNI6U" target="_blank" rel="noopener">Fully automated end-of-line test bench for BMW eDrive - YouTube</a><br><a href="https://www.youtube.com/watch?v=67gC3TTukAY" target="_blank" rel="noopener">https://www.youtube.com/watch?v=67gC3TTukAY</a><br><a href="https://www.youtube.com/watch?v=gasBWUYiHRo" target="_blank" rel="noopener">RealIZM Tech Insights: How to test electronic products for the real world? Design for reliability - YouTube</a><br><a href="https://www.youtube.com/watch?v=ot3QIZDbwEA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=ot3QIZDbwEA</a><br><a href="https://github.com/abhipatil99/AUTOMATED-STUDENTS-ATTENDANCE-SYSTEM">https://github.com/abhipatil99/AUTOMATED-STUDENTS-ATTENDANCE-SYSTEM</a><br><a href="https://github.com/jlcxxzj/NishiDev">https://github.com/jlcxxzj/NishiDev</a><br><a href="https://github.com/jlcxxzj/Automated-Testing">https://github.com/jlcxxzj/Automated-Testing</a><br><a href="https://github.com/jlcxxzj/PIC_WaferProbeSystem">https://github.com/jlcxxzj/PIC_WaferProbeSystem</a><br><a href="https://github.com/jlcxxzj/Automated-Visual-Inspection-Tool">https://github.com/jlcxxzj/Automated-Visual-Inspection-Tool</a></p><h2 id="8-can总线"><a href="#8-can总线" class="headerlink" title="8. can总线"></a>8. can总线</h2><p><a href="https://www.bilibili.com/video/BV1Da4y1N7Rr/?spm_id_from=333.1007.tianma.1-1-1.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Da4y1N7Rr/?spm_id_from=333.1007.tianma.1-1-1.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a></p><h2 id="9-遥感技术"><a href="#9-遥感技术" class="headerlink" title="9. 遥感技术"></a>9. 遥感技术</h2><p>遥感技术是<strong>20世纪60年代兴起的一种探测技术</strong>，是根据电磁波的理论，应用各种传感仪器对远距离目标所辐射和反射的电磁波信息，进行收集、处理，并最后成像，从而对地面各种景物进行探测和识别的一种综合技术，通过遥感技术，可查询到高分一号、高分二号、资源三号等国产高分辨率遥感影像。</p><h2 id="10-什么是数据的多路采集，采集通道是如何选择的？"><a href="#10-什么是数据的多路采集，采集通道是如何选择的？" class="headerlink" title="10. 什么是数据的多路采集，采集通道是如何选择的？"></a>10. 什么是数据的多路采集，采集通道是如何选择的？</h2><p>一般理解的多路通道是指控制器（单片机）能同时接受来自多个IO通道的数据，并同时显示在页面上，如：<a href="https://www.bilibili.com/video/BV1vh411g7ky/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">基于单片机的多路数据采集系统_哔哩哔哩_bilibili</a></p><p>可是在PXI等通用性采集信号总线架构上，一张信号采集卡20路或者32路通道，在软件页面选择的时候是如何确定有几个通道，在哪个通道上采集呢？</p><p>其实，还是因为理解不全，上面理解的多通道输入指的是传感器对于IO口的输入是多通道的，而采集卡给控制器的多通道是PXI上的通道传递，由采集卡给控制器发送数字信号，就是采集卡上的哪几路通道被连接到了被测设备上，就把这几路信号发送给上位机。<a href="https://www.bilibili.com/video/BV1HF411P7xz/?spm_id_from=333.999.0.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">多通道数据采集仪_哔哩哔哩_bilibili</a><br>如这个数据采集板卡中，就有16通道的数据采集信号<br><a href="https://www.bilibili.com/video/BV1Vy4y1L71U/?vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">LOTO示波器—OSCA16 高速/多通道/示波器/采集卡 演示视频_哔哩哔哩_bilibili</a><br><a href="https://blog.csdn.net/maopig/article/details/121356736" target="_blank" rel="noopener">(85条消息) 缠绕多年的PCIE通道数问题终于完全明白了，欢迎指正_maopig的博客-CSDN博客</a></p><p>当然也可以在一条线上传多路通道的数据，<a href="https://www.zhihu.com/question/324585105/answer/684895855" target="_blank" rel="noopener">(2 封私信 / 65 条消息) 数据采集，采集通道是什么意思？ - 知乎 (zhihu.com)</a>，数据合并可能系物理的——如把6个通道的数据<strong>按位间插</strong>、或<strong>按字节间插</strong>。也可以是数据链路地——就像网线上的数据那样<strong>分包</strong>，每包都有自己的地址编码或PORT编码（这是仿IP的说法哈）以便让接收端可以解析出数据的原通道ID。无论如何，打包和解析肯定是匹配的——不然其就非卖出产品了。</p><p>因此，多通道输入输出都是一个内部概念，不一定非得是物理可见的多通道输入输出，可见的好理解，不可见的也好理解，比如把多个通道集合到一条电缆上，通过一个连接器或者适配器输入到板卡中，这种是在输入端可见多个通道，也可以是在输入端把多个通道的信号在芯片部分集合在一起了，比如是由芯片产生的多通道仿真数据，在物理上就是两块板卡通过一条电缆在适配器中连接，可是实际上是产生了多个通道的信号，也输入了多个通道的信号。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> Linux </tag>
            
            <tag> 编程基础 </tag>
            
            <tag> 测试系统 </tag>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式系统 | 系统移植</title>
      <link href="/2023/03/08/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/qian-ru-shi-xi-tong/"/>
      <url>/2023/03/08/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/qian-ru-shi-xi-tong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="1-嵌入式系统移植内容"><a href="#1-嵌入式系统移植内容" class="headerlink" title="1. 嵌入式系统移植内容"></a>1. 嵌入式系统移植内容</h2><p>嵌入式系统移植分为两个阶段，第一阶段主要介绍开发板的启动过程、uboot的安装及使用、 Linux的安装与加载、根文件系统的安装与加载等，旨在让学员掌握Linux的安装、加载、启动等过程。第二阶段主要介绍uboot、Linux内核、设备树、Linux设备驱动、根文件系统的移植过程，旨在让你掌握系统移植及内核开发的基本技能，为后续内核开发打牢基础。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>应用广泛，基本的装系统肯定得会，给手机刷个机，系统都装不上，后面的学习就无从说起了</li><li>知识面广，应用开发，C语言基础过关了，其他的就没有过多的要求的了。而操作系统移植涉及到硬件层面的知识，同时还得掌握应用层接口调用的一些知识。shell，Linux系统结构的认识等，linux代码的学习；</li><li>实验性强，基本上不用写代码 ，就是环境资源配置硬件的问题</li></ol><h3 id="思维方式，学习方法"><a href="#思维方式，学习方法" class="headerlink" title="思维方式，学习方法"></a>思维方式，学习方法</h3><p>配置、编译、安装：电脑编译，开发板上安装；下载源代码，配置Linux源码，电脑上编译，安装到开发板上；<br>重方法，轻细节：过程，流程是怎么流转的，代码细节不必过于关心；</p><h3 id="系统移植过程"><a href="#系统移植过程" class="headerlink" title="系统移植过程"></a>系统移植过程</h3><p>类比电脑上装linux系统，开发板上装Linux类似，包括以下步骤：</p><ol><li>Windows装机<br>（1）准备Windows系统镜像（类似于操作系统的安装包）、装备U盘启动盘（往U盘里面刷一个老毛桃、大白菜等程序，从而引导操作系统的安装过程）<br>（2）进入BIOS选择启动方式（U盘启动），在装系统时，开机之后立马按一些按键（F10,F12），使得电脑进入BIOS（基本输入输出系统，程序，电脑生产厂家固化到电脑上）界面，给电脑设置启动方式，如U盘；BIOS有基本界面，从而对电脑的软硬件做一一些基础的设置如CPU虚拟化功能的开和关，装系统进入BIOS是为了设置启动方式，进入BIOS可以设置光驱启动、硬盘驱动，当电脑开机之后，先运行哪个介质的程序，当把启动方式设置为硬盘启动之后，电脑上电之后就先去执行硬盘的程序；<br>（3）通过U盘的引导程序安装操作系统，如运行起来老毛桃引导程序时，在其界面上可以将系统镜像安装到电脑上，安装完毕之后，在运行起来电脑之后就进入操作系统界面了<br>（4）安装Windows驱动程序，安装完操作系统之后，重启电脑就能运行起来Windows系统里，但是会发现一个问题，有很多硬件不能使用，比如网卡驱动不能用（不能上网)、显卡驱动（屏幕不能正常显示）、声卡驱动、鼠标不能正常使用，驱动也是一个软件，也是程序，驱动的功能驱动硬件的工作，硬件没有对应的驱动程序是不能正常工作的，虽然系统自动了一部分驱动，但是有些驱动不兼容或者没有的问题，需要自己安装，在安装完操作系统和驱动程序之后，才可以说操作系统安装完毕了<br>（5）安装Windows应用程序，即APP，有特定应用功能的程序，来实现想实现的功能，如QQ，微信等。</li><li>开发板上Linux系统移植到处理器里面<br>（1）准备Linux内核镜像，SD卡启动，当然也可以使用硬盘、U盘等，引导程序ubuntu刷到SD卡里面<br>（2）开发板里面不像电脑，厂家提前烧入了BIOS等基础功能的界面，在开发板里，处理器的厂家会固化了一段代码，BL0，通过这段代码来选择启动方式的运行；开发板通过在拨码开关来选择启动方式，断电情况下就可以拨拨码开关，然后通电，BL0就会检测选择的是哪种启动方式。<br>（3）通过SD卡中的引导程序安装系统，Ubuntu来把系统安装到开发板的处理器上<br>（4）将操作系统安装到开发板里面之后，会发现，开发板上的硬件如，蜂鸣器、LED、加速度角度度检测传感器等不能正常使用，这是因为缺少驱动这些硬件工作的驱动程序。这需要安装对应的驱动程序。<br>（5）开发板上运行起来了完成的Linux系统，还需要安装Linux应用程序，然后将IO、进程、网络、包括数据库所写的代码去移植到开发板上去运行。</li></ol><h3 id="uboot和ubuntu类似"><a href="#uboot和ubuntu类似" class="headerlink" title="uboot和ubuntu类似"></a>uboot和ubuntu类似</h3><p>启动过程：嵌入式系统上电后先执行uboot、然后uboot负责初始化DDR，初始化Flash，然后将OS从Flash中读取到DDR中，然后启动OS(OS启动后uboot就无用了) 总结：嵌入式系统和PC机的启动过程几乎没有两样，只是BIOS成了uboot，硬盘成了Flash。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> Linux </tag>
            
            <tag> 编程基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch 模型搭建基础|如何跑通一个简单的模型</title>
      <link href="/2023/02/20/3-zong-jie/pytorch-mo-xing-da-jian-ji-chu/"/>
      <url>/2023/02/20/3-zong-jie/pytorch-mo-xing-da-jian-ji-chu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="输入到模型的样本"><a href="#输入到模型的样本" class="headerlink" title="输入到模型的样本"></a>输入到模型的样本</h1><p><a href="https://blog.csdn.net/qq_34243930/article/details/107231539" target="_blank" rel="noopener">https://blog.csdn.net/qq_34243930/article/details/107231539</a></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> torchx <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>conv <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>res <span class="token operator">=</span> conv<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># torch.Size([3, 4, 4, 2])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>描述：</p><pre class="line-numbers language-txt"><code class="language-txt">输入：x[ batch_size, channels, height_1, width_1 ]batch_size，一个batch中样本的个数 3channels，通道数，也就是当前层的深度 1height_1， 图片的高 5width_1， 图片的宽 4卷积操作：Conv2d[ channels, output, height_2, width_2 ]channels，通道数，和上面保持一致，也就是当前层的深度 1output ，输出的深度 4【需要4个filter】height_2，卷积核的高 2width_2，卷积核的宽 3输出：res[ batch_size,output, height_3, width_3 ]batch_size,，一个batch中样例的个数，同上 3output， 输出的深度 4height_3， 卷积结果的高度 4width_3，卷积结果的宽度 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搭建神经网络"><a href="#搭建神经网络" class="headerlink" title="搭建神经网络"></a>搭建神经网络</h1><p><a href="https://blog.csdn.net/qq_38156052/article/details/81265220" target="_blank" rel="noopener">https://blog.csdn.net/qq_38156052/article/details/81265220</a></p><h2 id="Debug链接"><a href="#Debug链接" class="headerlink" title="Debug链接"></a>Debug链接</h2><p><a href="https://blog.csdn.net/u013250071/article/details/81203900" target="_blank" rel="noopener">修改.git文件夹</a></p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 深度学习模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>航空和火箭发动机知识 | 认识火箭</title>
      <link href="/2022/12/17/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/hang-kong-he-huo-jian-fa-dong-ji/"/>
      <url>/2022/12/17/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/hang-kong-he-huo-jian-fa-dong-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="火箭发动机"><a href="#火箭发动机" class="headerlink" title="火箭发动机"></a>火箭发动机</h1><p>由于火箭后期工作在缺氧环境下，难以获取足够的氧气供燃料燃烧，因此需要自带氧化剂，而为了让助推剂更快的进入燃烧室燃烧，需要涡轮泵将液体燃料压入腔体内，至于为什么不用电动泵的原因是使用蓄电池增加自身重量，通过在小腔室内燃烧产生的液体驱动涡轮泵，再将液体燃料压入燃烧室内。<br>注意，泵的作用机理是在外界能量的驱动下使轴转动，然后将液体驱动到其他位置<br>马达是将电能、液压能、气能转为机械能，更有趣的是，机械硬盘是使用磁能马达来驱动磁头移动的。<br><a href="https://www.bilibili.com/video/BV14h411E7NC/?spm_id_from=333.1007.tianma.1-1-1.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">机械硬盘是如何制造的？_哔哩哔哩_bilibili</a></p><h2 id="火箭发动机的精彩讲解"><a href="#火箭发动机的精彩讲解" class="headerlink" title="火箭发动机的精彩讲解"></a>火箭发动机的精彩讲解</h2><p><a href="https://zhuanlan.zhihu.com/p/623940463" target="_blank" rel="noopener">星舰最大亮点是全流量液氧甲烷火箭发动机！我国计划2028年前造出 - 知乎 (zhihu.com)</a></p><h1 id="航空发动机"><a href="#航空发动机" class="headerlink" title="航空发动机"></a>航空发动机</h1><p>航空发动机大多工作在有氧环境内，无需自身携带氧气，通过气动马达的方式使风扇转动将空气压入燃烧室内供燃料燃烧，产生发作用力。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机械 </tag>
            
            <tag> 涡轮泵 </tag>
            
            <tag> 发动机 </tag>
            
            <tag> 火箭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏里面为什么不用微服务|监听和告警</title>
      <link href="/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/"/>
      <url>/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="微服务架构为什么在游戏领域知之甚少？"><a href="#微服务架构为什么在游戏领域知之甚少？" class="headerlink" title="微服务架构为什么在游戏领域知之甚少？"></a>微服务架构为什么在游戏领域知之甚少？</h1><p>为什么游戏公司的server不愿意微服务化？<br>要回答这个问题，首先得说明微服务化的好处在哪里，还得看在游戏开发中是否适用<br>服务端微服务化的好处可以归结为以下几点：方便测试、方便维护、方便升级、服务之间松耦合、可多语言开发、自动扩容等等<br>但是，在游戏的开发中，服务端不太需要微服务，这是因为游戏中更在乎的是实时性，微服务将原来一个进程的模块拆分成不同的服务，会显著的增加额外的网络开销，让游戏延迟时间增加，这是游戏里面不适用微服务的最重要的原因。</p><h2 id="比如棋牌游戏为例"><a href="#比如棋牌游戏为例" class="headerlink" title="比如棋牌游戏为例"></a>比如棋牌游戏为例</h2><ol><li>微服务本身是为了应对服务逻辑的复杂，需要新的组织接口的方式。而游戏本身逻辑其实没有这么复杂，比如大厅里面就是一些基本的功能，修改账号，登录等。游戏最重要的是游戏本身的逻辑。</li><li>游戏逻辑服务器本身（比如斗地主等棋牌）因为网络响应性能要求问题（游戏玩家对每个操作的反馈时长敏感性远高于业务系统），所以游戏服务器都是有状态的，有状态就会存在内存 ，偶尔会接受redis,mysql是绝对不可以接受的，关系型数据库仅用来定时异步持久化数据，仅游戏服务器而言持久化在redis即可。</li><li>服务间通信rpc首先ribbon,feign等并不是很合适，因为都是基于http的，用http存在一个消息乱序的问题，比如玩家出牌两次，在http就可能出现次序不一致的情况。游戏服务器集群一般使用长连接互联。可能需要dubbo长连接</li><li>游戏逻辑服务器（比如斗地主服务器），一般是不能用spring mvc做的，因为线程模型完全不同。多线程模型处理游戏性能还非常复杂，一般都是使用单进程/线程 驱动固定数量房间的方式（这也是为何服务器一定要有状态，一定不能读写MySQL）</li><li>自动扩容在游戏这边叫做开服，早就有固定流程和工具和限流方式了</li><li>游戏很多操作不存在服务降级熔断，不行就直接报错给用户。</li><li>大厅服务器登录注册等的确可以做微服务，但是也其实并不是做微服务，就是几个接口还有自动水平扩容的方案即可。服务注册发现用处也不大，开服都是确定的事情，还有一系列运营手段配合，关服也是绝对不能随便关的。</li><li>游戏处理的流量真的不算多，你在线1w的棋牌游戏已经很赚钱了，10w就是一个特别厉害的产品了。</li><li>一些独立的服务器比如充值之类的服务需要微服务化吗？很明显场景还不够多。<h1 id="为什么微服务必须要有网关？"><a href="#为什么微服务必须要有网关？" class="headerlink" title="为什么微服务必须要有网关？"></a>为什么微服务必须要有网关？</h1>下图是一个微服务架构，仅供参考：<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/d11772c0-7a84-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>网关是微服务架构中的一个关键的角色，用来保护、增强和控制对于微服务的访问；</li></ol><p>网关是一个处于应用程序或服务之前的系统，用来管理授权、访问控制和流量限制等，这样微服务就会被微服务网关保护起来，对所用的调用者透明。因此，隐藏在微服务网关后面的业务系统就可以更加专注于业务本身。同时，，微服务网关还可以为服务提供和沉淀更多的附件功能。</p><p>下面是微服务网关的主要作用：<br>请求接入：管理所有的接入请求，作为所有API接口的请求入口；<br>业务聚合：所有微服务后端可以注册在API网关，通过API网关统一暴露服务；<br>拦截策略：可以提供统一的增加安全、路由、流控等公共服务组件；<br>统一管理：提供统一的监控工具，配置管理工具，Swagger工具等基础设施；</p><h1 id="普罗米修斯-prometheus-和Grafana？"><a href="#普罗米修斯-prometheus-和Grafana？" class="headerlink" title="普罗米修斯(prometheus)和Grafana？"></a>普罗米修斯(prometheus)和Grafana？</h1><p><a href="https://blog.didispace.com/devops-for-small-team/" target="_blank" rel="noopener">https://blog.didispace.com/devops-for-small-team/</a></p><ol><li>prometheus server 负责监控数据收集和存储</li><li>Prometheus alert manager 负责根据告警规则进行告警，可集成很多告警通道</li><li>node-exporter 的作用就是从机器读取指标，然后暴露一个 http 服务，Prometheus 就是从这个服务中收集监控指标。当然 Prometheus 官方还有各种各样的 exporter。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/bd7c9c90-7a0c-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>有了监控数据后，我们就可以对数据进行可视化，Grafana 和 Prometheus 集成得非常好，所以，我们又部署了 Grafana:<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/0efa1810-7a10-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>在 Grafana 上查看 nodex-exporter 收集的数据的效果图大概如下：<img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/1391a190-7a10-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>可是，我们不可能24小时盯着屏幕看CPU负载有没有超吧？这时候就要上告警了，Promehtues 默认集成了 N 多告警渠道。可惜没有集成钉钉。但也没有关系，有好心的同学开源了钉钉集成 Prometheus 告警的组件：prometheus-webhook-dingtalk。接着，我们告警也上了：<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/a7f41ef0-7a8b-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>完成以上工作后，我们的基础监控的架子就完成了。为我们后期上 Redis 监控、JVM 监控等更上层的监控做好了准备。</li></ol><h1 id="prometheus的原理和前景"><a href="#prometheus的原理和前景" class="headerlink" title="prometheus的原理和前景"></a>prometheus的原理和前景</h1><h2 id="容器集群可观测现状"><a href="#容器集群可观测现状" class="headerlink" title="容器集群可观测现状"></a>容器集群可观测现状</h2><p><a href="https://help.aliyun.com/practice_detail/467109#:~:text=Promethues%20%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%8F%AF%E6%9C%89%E6%95%88%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%8C%87%E6%A0%87%E3%80%81%E5%BA%94%E7%94%A8%E5%B1%82%E6%8C%87%E6%A0%87%E3%80%81%E4%B8%9A%E5%8A%A1%E5%B1%82%E6%8C%87%E6%A0%87%E7%AD%89%EF%BC%8C%E9%87%87%E9%9B%86%E7%9B%91%E6%8E%A7%E6%8C%87%E6%A0%87%E5%90%8E%E8%BF%9B%E8%A1%8C%E5%AD%98%E5%82%A8%EF%BC%8C%E6%90%AD%E9%85%8D,Grafana%20%E5%8F%AF%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7%E6%8C%87%E6%A0%87%E7%9A%84%E5%B1%95%E7%A4%BA%E5%92%8C%E5%91%8A%E8%AD%A6%E7%AD%89%E3%80%82" target="_blank" rel="noopener">统一观测｜Prometheus 监控多云容器集群 (aliyun.com)</a><br>随着Kubernetes(K8s)容器编排工具已经成为事实上的行业通用技术底座，容器集群监控经历多种方案实践之后，prometheus最终成为容器集群监控的事实标准。</p><p>Prometheus监控服务可有效监控系统层指标、应用层指标、业务层指标等等，采集监控指标后进行存储，搭配grafana可实现监控指标的展示和告警等。</p><p>Prometheus + Grafana 方案可有效进行容器集群监控指标采集、存储、展示、告警等，有效帮助业务发现和定位问题，为云原生下的应用保驾护航，已经成为业内容器集群监控标准组合方案。</p><p>目前企业运维容器集群，有两种方案可以选择，第一种选择自建监控体系；第二种选择云厂商提供的监控产品。</p><p>第一种自建监控体系：Prometheus + Grafana 入门使用并不难，但基于此方案进行自建整套监控体系且达到生产可用水平绝非易事，不仅需要投入一定量研发和运维人员，而且需要关注监控体系中各部分的协作，例如指标采集配置、指标存储、指标展示、有效大盘配置、告警配置、无效告警过滤等等诸多事项，这让很多开发和运维人员头痛和头秃，甚至最终走上从入门到放弃之路，赔了夫人又折兵。</p><p>第二种使用云厂商提供的监控产品：其中阿里云提供的 Prometheus 监控产品，有包年包月和按量付费两种模式，可减少自行搭建告警体系的前期投入的成本，也提供后续的技术运维支持，可以极大地减少运维成本。</p><h1 id="prometheus原理"><a href="#prometheus原理" class="headerlink" title="prometheus原理"></a>prometheus原理</h1><p><a href="https://www.dockone.io/article/347688" target="_blank" rel="noopener">终于有人把Prometheus入门讲明白了 - DockOne.io</a><br><a href="https://www.cnblogs.com/cjsblog/p/11585145.html" target="_blank" rel="noopener">5分钟了解Prometheus - 废物大师兄 - 博客园 (cnblogs.com)</a></p><h1 id="自动化测试系统厂家和学习资料"><a href="#自动化测试系统厂家和学习资料" class="headerlink" title="自动化测试系统厂家和学习资料"></a>自动化测试系统厂家和学习资料</h1><p><a href="https://www.namisoft.com/AboutUs/360.html" target="_blank" rel="noopener">纳米软件简介-关于纳米软件-专业的测试仪器软件开发公司-西安天宇微纳 (namisoft.com)</a><br><a href="https://blog.csdn.net/Namisooft?type=blog" target="_blank" rel="noopener">(62条消息) 纳米软件的博客_CSDN博客-智能检测,程控软件,检测软件领域博主</a></p><h1 id="电子元器件自动测试系统"><a href="#电子元器件自动测试系统" class="headerlink" title="电子元器件自动测试系统"></a>电子元器件自动测试系统</h1><p>纳米软件自动测试系统提供商<br><a href="https://blog.csdn.net/Namisooft/article/details/122500361" target="_blank" rel="noopener">(62条消息) 电子元器件自动测试系统_纳米软件的博客-CSDN博客_电子元件自动化检测</a></p><p>1.系统优势</p><blockquote><p>本系统连接采用测试板的方式，不同器件采用统一接口在测试板插座上插拔，同时软硬件具有钳位保护，整个测试可以更加简易、高效、安全的进行。<br>与仪器之间采用VISA通信，保证对多台仪器通信的并行处理，使各个仪器的数据不会相互干扰，并能全程保持通讯状态，不会丢包。<br>ALL IN ONE模式的系统满足对不同种类的二极管、三极管、场效应管、DC-DC模块的基本指标的自动化测试，并采用菜单填表式的编程模式，提供各类型典型器件测试模板。<br>所有仪器的连接可在硬件设置界面通过自动检测的功能实现，并支持仪器更换品牌型号的兼容。<br>所有测试线缆均采用同轴线缆，有效的避免外界电磁干扰对系统采集数据的影响，使数据更精准。<br>系统测试过程中实时显示测试进度和测试状态，也具有对测试数据的自动化保存和历史数据的随时查看的功能。<br>系统确保数据的准确性和运行的稳定性，为用户提供报告模板，实现报告的多样化和灵活性。</p><ol start="2"><li>系统概述<br>NSAT-2000电子元器件自动测试系统主要对电子系统的某些关键器件、设备及芯片，在加速寿命退化后，对代表其性能退化的电参量进行测试，获取测试数据，保证获取数据的实时性和可靠性。<br>该系统可用于各类二极管、三极管、绝缘栅型场效应管、结型场效应管、单向和双向可控硅、普通和高速光耦、整流桥、共阴共阳二极管及多阵列器件等各类分立器件的功能和交参数测试。<br>系统可实现二极管极性的自动识别极性、最大整流电流、正向压降测试；三极管直流电流放大倍数、穿透电流测试等；场效应管饱和漏电流、夹断电压、开启电压等测试）。</li><li>测试基于硬件<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/55cbaeb0-7a8e-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li><li>产品结构<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/88def050-7a8e-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li><li>系统流程图<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/86d10d00-7a90-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li><li>系统界面<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/9c24f360-7a90-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li><li>应用场景<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/a8e0fdb0-7a90-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li></ol></blockquote><h1 id="通信设备自动测试系统"><a href="#通信设备自动测试系统" class="headerlink" title="通信设备自动测试系统"></a>通信设备自动测试系统</h1><ol><li>系统组成<br>通信设备自动测试系统由工控机、CMA180无线电综合测试仪、仪器与PC通讯线缆、显示器组成。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/04f3c760-7a9e-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><blockquote><p>什么是工控机?<br>工控机是指工业控制计算机，分为IPC（PC总线工业电脑）、PLC（可编程控制系统）、DCS（分散型控制系统）、FCS（现场总线系统）及CNC（数控系统）五种，工控机通俗的说就是专门为工业现场而设计的计算机。<br>工控机也是电脑，只是比普通电脑更稳定，抗潮性、抗震性、抗磁性更好些，连续24小时开机运行都没有问题。工控机不带显示器，可以配显示器使用。一般使用于恶劣环境或者对机器性能要求比较高的地方。<br>既然拥有工业级别的稳定性，那么，我们普通用户是否可以拿工控机来作为家用电脑呢？<br>1、工控机硬件相对固定，普通用户一般承受不起定制化费用。里面的HDMI等接口数量一般为固定的，这种固定的模式也限制住用户自己DIY的梦想了。<br>2、配套设施不齐全。工控机一般采取Linux、Unix等开放性操作系统。里面的配套软件是不包含影音娱乐，系统具有封闭性，这是为了保证企业使用的数据安全性，但也很容易造成这台电脑及其无聊，上面什么玩意儿都玩不了。<br>3、价格昂贵，一台笨重的工控机动辄上万，不符合普通人的承受范围。<br>随之5G、自动驾驶、物联网、人工智能等新技术发展，工控机也迎来了自己的高光时刻，传统笨重的工控机也渐渐被高性能的边缘计算盒子代替了。</p><blockquote><p>边缘计算盒子是一款体积小巧，性能强大的边缘计算产品,相比众所周知的云计算把数据上传云端服务器进行处理，边缘计算就是在“边缘端”对数据进行处理，部署在前端数据采集和云服务器中心之间，而支撑在边缘计算具有AI学习能力的硬件设备就是“AI边缘计算盒子”。</p></blockquote></blockquote></li><li>系统功能<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/0c37fa50-7a9e-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><blockquote><p>1、系统可通过网口或USB口对特定型号的无线电综合测试仪进行控制；<br>2、系统可进行发射机功率、频率准确度、频率稳定度、调制度、带外抑制比、接收机灵敏度等指标进行测试，可进行测试结果合格范围设定、测试信息录入与测试项目选择。<br>3、系统可以通过对测试仪器的相关参数配置，完成自动化测试（发射机功率、频率准确度、频率稳定度、调制度、带外抑制比、接收机灵敏度）并同时显示实时测试数据及波形。<br>4、系统具备数据存储、数据查询、报告生成等功能，可完成对测试数据的存储、查询、智能化分析。<br>5、系统提供安装部署联调服务。</p></blockquote></li><li>基于硬件<blockquote><p>1、工控机<br>主要用于安装测试系统控制软件。<br>2、CMA180无线电综合测试仪<br>CMA180适用于工作在100kHz至3GHz频率范围的无线电系统，可以解调和调制所有常见的模拟射频信号。<br>3、仪器与PC通讯线缆<br>仪器与PC之间的连接线缆，可以实现测试仪器与测试工控机的物理交互、被测典型元器件与测试仪器的物理交互以及测试仪器装置之间的物理交互。<br>4、显示器<br>显示器与工控机连接，用于将测试系统的界面以及数据波形图、数据表显示，用户可以直观的观察测试数据。</p></blockquote></li><li>软件功能<br>系统通过程控CMA180无线综合测试仪，完成对发射机功率、频率准确度、频率稳定度、调制度、外带抑制比和接收机灵敏度的测试，可以对测试结果合格范围设定、相关测试信息录入，测试数据实时显示并绘制波形。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/d5044910-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>软件主界面：软件主界面包括运行测试、数据查询和关于我们，点击相应的功能后进入到软件相应的功能界面。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/db5653d0-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>仪器连接界面：点击主界面的仪器连接按钮进入仪器连接和测试项目选择界面。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/df4f7a70-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>参数设置界面：点击选择测试项目下拉菜单进行波道的选择、频率的设置、业务设置、模式选择、工作类型和抗干扰方式的设置。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/e4053a50-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>运行测试界面：在此界面中可以对已经选择和设置好的项目进行测试，点击开始测试按钮进行测试。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/e9004090-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>测试结果显示：测量结果会实时显示测试数据和绘制测试波形。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/ed469cd0-7a9f-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>数据导出：测试完成后点击生成报告按钮，选择测试数据模板，进行数据的保存。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/12/3-zong-jie/zong-jie-he-gui-hua/2022.12.12-wei-fu-wu-jia-gou-he-jian-ting-de-yi-dian-si-kao/017208c0-7aa0-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
            <tag> 心声 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后疫情时代|世间冷暖</title>
      <link href="/2022/12/09/3-zong-jie/zong-jie-he-gui-hua/hou-yi-qing-shi-dai-leng-nuan/"/>
      <url>/2022/12/09/3-zong-jie/zong-jie-he-gui-hua/hou-yi-qing-shi-dai-leng-nuan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="2022-12-18人民日报–“关键是提振信心”"><a href="#2022-12-18人民日报–“关键是提振信心”" class="headerlink" title="2022.12.18人民日报–“关键是提振信心”"></a>2022.12.18人民日报–“关键是提振信心”</h1><p>12月15日至16日，中央经济工作会议在北京举行。中共中央总书记、国家主席、中央军委主席习近平出席会议并发表重要讲话。</p><p>时间：12月15日上午</p><p>活动：中央经济工作会议第一次全体会议</p><p>百年变局交织世纪疫情，面对风高浪急的国际环境和艰巨繁重的国内改革发展稳定任务，中国经济在持续承压中砥砺前行。</p><p>党的二十大后首次中央经济工作会议，12月15日至16日在北京举行。</p><p>梳理这一年“我们做的事情”，发展质量稳步提升，就业稳、物价稳、粮仓稳，经济社会大局保持稳定，成绩殊为不易，值得倍加珍惜。习近平总书记语重心长：“遇到的困难很多，有的困难是空前的，但是我们做到了。”</p><p>长路有险夷。中国经济，从来都是在战胜挑战中发展、在风雨洗礼中成长、在历经考验中壮大。</p><p>这五年，经济年均增长5%以上，好于全球平均水平。</p><p>这十年，面对涉滩之险、爬坡之艰、闯关之难，经济社会发展取得历史性成就、发生历史性变革、转向高质量发展。</p><p>回望历史，习近平总书记感慨：“什么时候没有困难？一个一个过，年年过、年年好，中华民族5000多年来都是这样。爬坡过坎，关键是提振信心。”</p><p>信心源自哪里？</p><p>洞察时与势，把握危与机，总书记娓娓道来。</p><p>“明年经济运行有望总体回升”的战略判断，着眼于我国经济发展的体制、需求、供给、人力等多项优势，加上政策效果持续显现。“我们要坚定做好经济工作的信心。”</p><p>习近平总书记在会上着重谈到了明年经济工作的几个重大问题，也是国内外瞩目的政策取向——着力扩大国内需求、加快建设现代化产业体系、切实落实“两个毫不动摇”、更大力度吸引和利用外资、有效防范化解重大经济金融风险。</p><p>措施务实，政策鲜明有力。比如，当前住房、汽车、服务性消费等领域存在一些限制性措施，妨碍了消费需求释放。总书记的讲话直击要害：“要增强消费能力，改善消费条件，创新消费场景，使消费潜力充分释放出来。”</p><p>再比如，是否坚持“两个毫不动摇”，一段时间以来有些不正确的议论。</p><p>“必须亮明态度，毫不含糊，始终坚持社会主义市场经济改革方向，坚持‘两个毫不动摇’。”习近平总书记语气坚定：“党的二十大报告鲜明提出‘促进民营经济发展壮大’，这是长久之策，不是权宜之计。”</p><p>“民营企业是在党的领导下，依靠党的政策和自身努力发展起来的。我是一贯支持民营企业的，也是在民营经济比较发达的地方干过来的。”早在河北正定，“人才九条”广纳贤良。到了福建，晋江经验影响深远。再到浙江，支持民营企业茁壮成长。到中央工作后，2018年主持召开民营企业座谈会，总书记专门强调：“民营企业和民营企业家是我们自己人”。</p><p>会上，党中央释放的政策信号十分清晰：“要从制度和法律上把对国企民企平等对待的要求落下来，从政策和舆论上鼓励支持民营经济和民营企业发展壮大。”“依法保护民营企业产权和企业家权益。”“各级领导干部要为民营企业解难题、办实事，构建亲清政商关系。”</p><p>回望过往的奋斗路，风雨无阻向前进；眺望前方的奋进路，时与势在我们一边。习近平总书记再三强调“战略自信”：“顶住压力、练好内功、站稳脚跟，没有跨不过去的坎。”</p><p>就拿疫情这道坎来说。三年里我国有效应对五波全球疫情冲击。在疫情防控进入新阶段之际，如何更好统筹疫情防控和经济社会发展，“这是这几年最关键的一件事情”。总书记在会上叮嘱：“要统一思想、科学防控、提振信心，找到杠杆的平衡点，因时因势优化疫情防控措施。”“相信曙光就在前面。”</p><p>以既定目标为战略指引，守正创新办好自己的事情，事关长远，攸关国运。</p><p>“明年经济工作千头万绪，要从战略全局出发，抓主要矛盾，从改善社会心理预期、提振发展信心入手，抓住重大关键环节，纲举目张做好工作。”习近平总书记深刻指出：</p><p>“我国经济大船乘风破浪向前。”</p><h1 id="2022-12-09"><a href="#2022-12-09" class="headerlink" title="2022.12.09"></a>2022.12.09</h1><p>B站陈睿：减本增效，去肥增瘦<br>不管是用什么称呼，裁员、优化、人员调整、去肥增瘦、减员增效，这一两年互联网行业做这种调整是必然的。两个原因，资本+政策<br>资本市场要盈利<br>国家要反垄断，政策要回归主业<br>![](%E5%90%8E%E7%96%AB%E6%83%85%E6%97%B6%E4%BB%A3%E5%86%B7%E6%9A%96_md_files/1c0a5850-775c-11ed-aa4d-fdeb71e777c3.jpeg?v=1&amp;type=image</p><p>裁员潮下，打工人自救指南<br>保持学习，夯实基础<br>积累经验，参与项目<br>跳出舒适区，完成蜕变<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/09/3-zong-jie/zong-jie-he-gui-hua/hou-yi-qing-shi-dai-leng-nuan/2e630010-775c-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></p><h1 id="2022-12-06"><a href="#2022-12-06" class="headerlink" title="2022.12.06"></a>2022.12.06</h1><p>40了，前几年好的时候，还存了点钱，都投出去了。一套小公寓，一套小住宅，给家里8 w 盖老房子，买了辆18w 的车，目前还在还这几年行情相当相当差，上一家公司破产了。小住宅前两年卖掉了，为了上海支撑生活，套现的几十万已经吃完了。手里剩下一套小公寓（上海周边的三线城市），当时37w投的，目前无房贷，但是卖不出去，中介说20w你肯卖我就帮你问问。好不容易找了一家公司上班，结果每个月不按时发工资，几个月发一次，搞的都要向银行借款生活。现在负债10个出头。40了，内卷厉害，行情不行，上有老下有小，只能活着情况下，继续努力了。前几年出去吃饭，三天两头去万达，每顿200闭着眼睛吃，现在特么的十几块的盖浇饭都要考虑一下。你们说，在这个伟大的地方，混了大半辈子了有了啥了？</p><p>作者：花语轩<br>链接：<a href="https://www.zhihu.com/question/508507895/answer/2788963258" target="_blank" rel="noopener">https://www.zhihu.com/question/508507895/answer/2788963258</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
            <tag> 心声 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业论文版本控制 | 把你的论文推到github上去！</title>
      <link href="/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/"/>
      <url>/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>既然抛出了把毕业论文放到Github上的论点，那就得说明这么做的必要性，阐述一下原因和好处在哪，刚好最近在学6W1H工作分析公式，那就学以致用，用6W1H来有条理性地回答这个问题。</p><p>可能有同学一下子没有想起来什么是6H1W公式，这里有必要先解释一下这个专有名词。6W1H原则是心理学家从管理角度，提出的著名的工作分析公式，职责更加清晰的分析和分工。</p><p>在本文中将使用6W1H来说明为什么要用Github来写毕业论文，6W即做什么（what）、为什么（why）、用谁（who）、何时（when）、在哪里（where）、为谁（for whom）及如何做（how）。话不多说那就开始吧！</p><h1 id="做什么（what-？"><a href="#做什么（what-？" class="headerlink" title="做什么（what)？"></a>做什么（what)？</h1><p>2022年大家都是怎么写论文的？<br>用latex来方便快捷的插入公式和图片？还是用入门简单，经典耐用的word来写？<br>无论哪种方式，都要面临一个问题，罗马不是一天建成的，论文也不是一天能写完的，谁来管理我文思敏捷的想法，今天的段落每天删了，后天又觉得好想取回来该怎么办，想必经过过小论文和毕业论文折磨的同学们都感同身受。<br>做什么？之前如果要把每天更新的论文保存下来，我用的是是看起来很蠢的办法，每次修改的我的另存为新文件。这样我想回溯之前版本的论文就直接找就行了。然后最后的中间的论文版本是这样的：</p><p><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/608746e0-76e5-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/69f07cb0-76e5-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br>除了看起来工作量巨大，我是根本不记得，也找不到之前的版本里面有哪些个章节的材料是改动过的。<br>那么，如果把论文放到Github会是一种什么样的效果呢？<br>这是我把前后10个修改版本和最终版本放到Github上效果：</p><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><h1 id="图-1"><a href="#图-1" class="headerlink" title="图"></a>图</h1><h1 id="为什么要把毕业论文放到github"><a href="#为什么要把毕业论文放到github" class="headerlink" title="为什么要把毕业论文放到github?"></a>为什么要把毕业论文放到github?</h1><h1 id="how-？"><a href="#how-？" class="headerlink" title="how ？"></a>how ？</h1><p>既然效果怎么好，该如何使用呢？<br>1.对于天天在GitHub上上传代码的同学来说，新建一个Private的仓库，把文件Push到建立的库就可以了。<br>2.如果你还没有接触过Github,那就从注册一个Github账号一步步来好了。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/0d6fb350-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/1221f0c0-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/178afb10-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/2097b900-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/2e5f3fe0-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/350e10a0-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt><br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/07/3-zong-jie/bi-ye-lun-wen/ba-ni-de-bi-ye-lun-wen-tui-dao-github-shang-qu/05f09a40-76f6-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></p><h1 id="完犊子了"><a href="#完犊子了" class="headerlink" title="完犊子了"></a>完犊子了</h1><p>重新注册了一个账号，新建了一个库，发现不是代码，而是docx的文档在github根本没有办法显示。<br>再看看有没有其他的工具可以用来进行论文的版本控制–如果没有自己是不是可以开发一个—如果没有自己是不是可以优化。</p>]]></content>
      
      
      <categories>
          
          <category> 毕业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> GitHub </tag>
            
            <tag> 版本控制 </tag>
            
            <tag> 文字 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 命令备忘单| 让你的工作再轻松些</title>
      <link href="/2022/12/06/2-diao-yan-xue-xi-si-kao/tool/git-ming-ling-bei-wang-dan/"/>
      <url>/2022/12/06/2-diao-yan-xue-xi-si-kao/tool/git-ming-ling-bei-wang-dan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="使用Git"><a href="#使用Git" class="headerlink" title="使用Git"></a>使用Git</h1><p><img src="https://blog.didispace.com/images/pasted-305.png" alt><br>一些计算机专业的学生在他们出道的那天就开始使用 Git 了。他们不需要专业人士指导就可以理解每一个命令和参数。其他人在他们的第一份工作中第一次体验到 GitHub。 对他们来说，Github 是一个地狱般的地方，充斥着混乱的命令和进程。他们永远都不是100%的确定自己在做什么(备忘录之所以流行是有原因的)。</p><p>无论您的公司使用什么仓库系统，如果您正确使用它，该系统都是有用的，如果使用不当，则是一个障碍。一个简单的commit或push就可以让你花上几个小时来理清一些由多个分支合并组成的大杂烩。此外，如果您经常忘记使用仓库的最新版本，那么您还将处理不那么好玩的合并冲突。</p><p>如果您需要一个 Git 命令备忘单，那么就做吧。只要能让你的生活更简单。</p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p><a href="https://zhyjc6.github.io/posts/2019/09/17/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A8%E9%9D%A2%E5%85%A5%E9%97%A8.html#4-%E8%BF%9B%E5%85%A5linux%E6%96%B0%E4%B8%96%E7%95%8C" target="_blank" rel="noopener">Linux基础知识全面入门-zhyjc6’s Blog</a><br><a href="https://zhuanlan.zhihu.com/p/81883894" target="_blank" rel="noopener">五分钟了解操作系统内核 - 知乎 (zhihu.com)</a></p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h2 id="进入虚拟机界面以后发现，无法连接互联网"><a href="#进入虚拟机界面以后发现，无法连接互联网" class="headerlink" title="进入虚拟机界面以后发现，无法连接互联网"></a>进入虚拟机界面以后发现，无法连接互联网</h2><p><a href="https://blog.csdn.net/smy_0114/article/details/78061599" target="_blank" rel="noopener">(62条消息) centos7无法连接外网亲测_RT_0114的博客-CSDN博客</a><br><a href="https://note.qidong.name/2020/05/resolvconf/" target="_blank" rel="noopener">用resolvconf配置DNS服务器 · 零壹軒·笔记 (qidong.name)</a></p><ol><li>首先修改用户为root用户<br><a href="https://blog.csdn.net/younger_china/article/details/23349249" target="_blank" rel="noopener">https://blog.csdn.net/younger_china/article/details/23349249</a></li><li>通过vi /etc/resolv.conf进入配置文件<br><a href="https://www.dazhuanlan.com/reelai/topics/1709307" target="_blank" rel="noopener">三步解决centos7无法连接外网 · 大专栏 (dazhuanlan.com)</a></li><li>输入i/insert,输入文字<br><a href="https://www.dazhuanlan.com/reelai/topics/1709307" target="_blank" rel="noopener">三步解决centos7无法连接外网 · 大专栏 (dazhuanlan.com)</a></li><li>输入完毕以后，按ESC键，退出输入模式<br><a href="https://www.bilibili.com/video/BV1NZ4y137Tq/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">CentOS7.4修改网卡配置文件_哔哩哔哩_bilibili</a></li><li>按shift+：wq,回车，退出文件<br><a href="https://blog.csdn.net/u010142437/article/details/79469206" target="_blank" rel="noopener">(62条消息) linux VI配置后如何保存_u010142437的博客-CSDN博客_vi 保存</a></li><li>在命令行中输入：route add default gw 192.168.199.1，其中地址 192.168.199.1 为网关的 ip<br><a href="https://www.yisu.com/zixun/131983.html" target="_blank" rel="noopener">linux配置网关提示网络不可达怎么解决 - 建站服务器 - 亿速云 (yisu.com)</a></li><li>再在终端输入route -n,看看是否存在新的DNS地址</li><li>有的话输入ping <a href="http://www.bai.com/" target="_blank" rel="noopener">www.baidu.com</a>,看是否能连接<h3 id="删除多余网卡"><a href="#删除多余网卡" class="headerlink" title="删除多余网卡"></a>删除多余网卡</h3><a href="https://juejin.cn/post/7080085296649338917" target="_blank" rel="noopener">https://juejin.cn/post/7080085296649338917</a><br><a href="https://blog.51cto.com/sky9896/4992657" target="_blank" rel="noopener">Linux操作系统删除虚拟网卡_51CTO博客_linux删除虚拟网卡</a><br><a href="https://www.cnblogs.com/stdin/p/15026175.html#:~:text=nmcli%20connection%20show%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%90%84%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E7%9A%84%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%ABuuid%EF%BC%8Cnmcli,connection%20show%20%E5%AF%B9%E5%BA%94NAME%E6%98%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8D%EF%BC%8C%E5%90%8E%E9%9D%A2%E7%9A%84DEVICE%E6%98%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E7%9A%84%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8DNAME%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9%E7%9A%84%EF%BC%8C%E8%80%8CDEVICE%E6%98%AFkernel%E6%A0%87%E8%AF%86%E7%9A%84%EF%BC%8C%E4%BD%86%E6%98%AF%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E5%85%B6%E4%BB%96%E6%89%8B%E6%AE%B5%E6%9D%A5%E4%BF%AE%E6%94%B9" target="_blank" rel="noopener">nmcli device and nmcli connection - 領 - 博客园 (cnblogs.com)</a><h2 id="这个教程是关键"><a href="#这个教程是关键" class="headerlink" title="这个教程是关键"></a>这个教程是关键</h2><a href="https://www.yisu.com/zixun/131983.html" target="_blank" rel="noopener">https://www.yisu.com/zixun/131983.html</a><br>但是按照其创建的eth2一直没有办法成功，使用ens32来配置可以。<h2 id="ping是一种计算机网络工具，用來測試数据包能否透過IP协议到達特定主機。"><a href="#ping是一种计算机网络工具，用來測試数据包能否透過IP协议到達特定主機。" class="headerlink" title="ping是一种计算机网络工具，用來測試数据包能否透過IP协议到達特定主機。"></a>ping是<strong>一种计算机网络工具，用來測試数据包能否透過IP协议到達特定主機</strong>。</h2></li></ol><h2 id="在上面的教程中，成功可以ping到特定主机，但是又存在问题，ping的很慢，而且失败率高"><a href="#在上面的教程中，成功可以ping到特定主机，但是又存在问题，ping的很慢，而且失败率高" class="headerlink" title="在上面的教程中，成功可以ping到特定主机，但是又存在问题，ping的很慢，而且失败率高"></a>在上面的教程中，成功可以ping到特定主机，但是又存在问题，ping的很慢，而且失败率高</h2><p><a href="https://cloud.tencent.com/developer/article/1412402" target="_blank" rel="noopener">linux基础命令介绍六：网络 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>首先，ping程序会向域名<a href="https://cloud.tencent.com/product/cvm?from=10680" target="_blank" rel="noopener">服务器</a>(DNS)发送请求，解析域名<code>www.baidu.com</code>的IP地址。<code>DNS</code>返回域名的一个别名<code>www.a.shifen.com</code>以及对应的IP地址<code>61.135.169.121</code>。之后ping程序开始向这个地址发送请求报文，每1s发送一个，ping收到TCMP回显应答并将结果显示在终端上，包括ICMP序列号(icmp_seq)，生存时间(ttl)和数据包往返时间(time)。最后，给出汇总信息，包括报文总收发情况，总时间，往返时间最小值、平均值、最大值、平均偏差(越大说明网络越不稳定)。</p><h3 id="DNS解析失败的原因"><a href="#DNS解析失败的原因" class="headerlink" title="DNS解析失败的原因"></a>DNS解析失败的原因</h3><p><strong>必须添加自己网段的DNS！</strong><br>也可以是公用的<br><a href="https://blog.csdn.net/weixin_42859280/article/details/89281862" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42859280/article/details/89281862</a><br><a href="https://note.qidong.name/2020/05/resolvconf/" target="_blank" rel="noopener">https://note.qidong.name/2020/05/resolvconf/</a><br><a href="https://www.cnblogs.com/cangqinglang/p/13343469.html" target="_blank" rel="noopener">https://www.cnblogs.com/cangqinglang/p/13343469.html</a></p><p>systemctl stop NetworkManager    //配置网关，需先停止网络管理<br>systemctl start NetworkManger    #运行网路管理器<br>systemctl restart NetworkManager  #运行网路管理器</p><p><a href="https://www.cnblogs.com/thescentedpath/p/linuxnetwork.html" target="_blank" rel="noopener">https://www.cnblogs.com/thescentedpath/p/linuxnetwork.html</a><br><a href="https://blog.csdn.net/qq_47733361/article/details/123581405" target="_blank" rel="noopener">(62条消息) 【已解决】ping: www.baidu.com: 未知的名称或服务_21岁被迫秃头的博客-CSDN博客_ping: www.baidu.com: 未知的名称或服务</a></p><p><a href="https://www.cnblogs.com/yzgblogs/p/16045021.html" target="_blank" rel="noopener">https://www.cnblogs.com/yzgblogs/p/16045021.html</a><br><a href="https://www.cnblogs.com/djlsunshine/p/9733182.html" target="_blank" rel="noopener">linux中nmcli命令使用及网络配置 - 阿小杜 - 博客园 (cnblogs.com)</a><br><a href="https://www.cnblogs.com/liuhedong/p/10695969.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuhedong/p/10695969.html</a><br><a href="https://download.csdn.net/download/weixin_38723242/12906188?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-12906188-blog-121069277.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-12906188-blog-121069277.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=1" target="_blank" rel="noopener">(62条消息) pingip主机提示Destinationhostunreachable问题解决方法小结_unreachable-其它代码类资源-CSDN文库</a><br><a href="https://blog.csdn.net/weixin_40496191/article/details/109516237" target="_blank" rel="noopener">(62条消息) linux网络配置（桥接和nat模式）_懒惰の天真热的博客-CSDN博客_linux桥接模式网络配置</a><br><a href="https://blog.csdn.net/weixin_40496191/article/details/109516237" target="_blank" rel="noopener">(62条消息) linux网络配置（桥接和nat模式）_懒惰の天真热的博客-CSDN博客_linux桥接模式网络配置</a></p><h3 id="vim-etc-sysconfig-network-scripts-ifcfg-eth0"><a href="#vim-etc-sysconfig-network-scripts-ifcfg-eth0" class="headerlink" title="vim /etc/sysconfig/network-scripts/ifcfg-eth0"></a>vim /etc/sysconfig/network-scripts/ifcfg-eth0</h3><p><a href="https://blog.csdn.net/VariatioZbw/article/details/107482739" target="_blank" rel="noopener">(62条消息) 解决 Linux 网络 “Job for network.service failed because the control process exite”问题_zhangbw~的博客-CSDN博客_job for ntpdate.service failed because the control</a><br><a href="https://blog.csdn.net/saber872138/article/details/83899392" target="_blank" rel="noopener">(62条消息) centos7 ping 8.8.8.8 unreachable 或者 ping xx.xx.xx.xx 未知的名称或服务_saber872138的博客-CSDN博客</a><br><a href="https://blog.csdn.net/weixin_35353187/article/details/96628258#:~:text=%E5%A6%82%E6%9E%9C%E7%94%B1%E4%BA%8E%E8%AF%AF%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%88%A0%E9%99%A4%E4%BA%86%E7%B3%BB%E7%BB%9F%E5%8E%9F%E6%9C%89%E7%9A%84dhcp%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE%E5%B0%B1%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D%E3%80%82%20%E6%AD%A4%E6%97%B6%EF%BC%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9A%2Fetc%2Fresolv.conf%E5%B0%86%20%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90,%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%88%B0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AF%A5%E6%96%87%E4%BB%B6%E6%98%AFDNS%20%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%20%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E5%AE%83%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E6%AF%8F%E8%A1%8C%E4%BB%A5%E4%B8%80%E4%B8%AA%E5%85%B3%E9%94%AE%E5%AD%97%E5%BC%80%E5%A4%B4%EF%BC%8C%E5%90%8E%E6%8E%A5%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E3%80%82" target="_blank" rel="noopener">(62条消息) 解决Linux域名解析不了的问题（ping不了www.baidu.com）_俊杰梓的博客-CSDN博客_linux系统域名解析失败</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>网上搜索的所有信息，都是说dns不对，或者是网关不对，对我这个问题不适用。</p><p>最后经高人提点，在<a href="https://so.csdn.net/so/search?q=%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F&spm=1001.2101.3001.7020" target="_blank" rel="noopener">桥接模式</a>下，虚拟机的ip设置要和宿机的网段一样，宿机ip：192.168.110.XX ，但是我的虚拟机ip设置在192.168.1.xx。<br>但我不想改了<br><a href="https://blog.csdn.net/kakuma_chen/article/details/71425620#:~:text=%E5%A6%82%E4%BD%95%E4%BD%BFVMware%20ip%E4%B8%8E%E6%9C%AC%E6%9C%BAip%E5%A4%84%E4%BA%8E%E5%90%8C%E4%B8%80%E7%BD%91%E6%AE%B5%201%20%E9%A6%96%E5%85%88%E7%A1%AE%E8%AE%A4%E6%9C%AC%E6%9C%BAip%20%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA%E4%B8%80%E4%B8%8B%E4%BF%A1%E6%81%AF%EF%BC%9A%20%E6%9C%AC%E6%9C%BAip%3A%20192.168.1.162%20%E7%BD%91%E5%85%B3%EF%BC%9A192.168.1.1,%E9%97%AE%E9%A2%98%E8%BF%98%E6%B2%A1%E6%9C%89%E5%9B%9E%E7%AD%94%EF%BC%8C%E6%88%91%E4%BB%AC%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%88%91%E4%BB%AC%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%EF%BC%8C%20%E5%B0%86vmware%E7%9A%84%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A8%E6%94%B9%E6%88%90%E2%80%9C%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E2%80%9D%20%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E2%80%9C%E7%A1%AE%E5%AE%9A%E2%80%9D%E4%BF%9D%E5%AD%98%E3%80%82%20%E7%82%B9%E5%87%BB%E2%80%9C%E9%AB%98%E7%BA%A7%E2%80%9D%E6%8C%89%E9%92%AE%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0vmware%E7%9A%84MAC%E5%9C%B0%E5%9D%80%E6%98%AF%E2%80%9C00%3A0C%3A29%3A49%3A40%3A79%E2%80%9D%EF%BC%8C%20%E8%BF%99%E4%B8%AA%E4%BF%A1%E6%81%AF%E5%85%88%E6%94%BE%E7%9D%80%EF%BC%8C%20%E7%A8%8D%E5%90%8E%E5%86%8D%E8%A1%A8%20%E9%85%8D%E7%BD%AEvmware%E7%9A%84ip%20" target="_blank" rel="noopener">(62条消息) 如何使VMware ip与本机ip处于同一网段_kakuma_chen的博客-CSDN博客_虚拟机和本机同一个ip地址如何添加</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 项目 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 书写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年任务|关于2022年的一些思考</title>
      <link href="/2022/12/06/3-zong-jie/zong-jie-he-gui-hua/2022-nian-zong-jie-he-gui-hua/"/>
      <url>/2022/12/06/3-zong-jie/zong-jie-he-gui-hua/2022-nian-zong-jie-he-gui-hua/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h2 id="2023十大任务"><a href="#2023十大任务" class="headerlink" title="2023十大任务"></a>2023十大任务</h2><ol><li>将自己的论坛功能初步完整，并在云端上线<blockquote><p>关于论坛对象，有以下几点考量，在后疫情时代，很多人失业、降薪，环境的变差让很多人需要一个相互取暖的平台；<br>从全中国的切点进入太大，首先是平台还没上线，调试之后可能还存在一定的问题，从在沪江西人这个面去切入，做一个江西沪漂的心声社区是暂定的一个方向</p></blockquote></li><li>沪漂心声社区，怎么搭建，首先要进入江西人的社群，包括QQ群，微信群，知乎微博等来引流，让大家吸引过来；支持微信登录；</li><li>保持个人博客的更新，HEXO和基于Java的个人博客都得运行起来；</li><li>心声社区还没有搭建起来的情况下，先将疫情下的冷暖，发布到个人博客上，后面再迁移到社区中</li></ol><h1 id="找工作"><a href="#找工作" class="headerlink" title="找工作"></a>找工作</h1><p><a href="https://blog.didispace.com/opensource-find-job-projects/" target="_blank" rel="noopener">推荐一批找工作时候可以参考的开源项目 | 程序猿DD (didispace.com)</a><br><a href="https://gitter.im/formulahendry/955.WLB" target="_blank" rel="noopener">formulahendry/955.WLB - Gitter</a></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络|深入浅出讲计算机网络</title>
      <link href="/2022/12/05/2-diao-yan-xue-xi-si-kao/ji-suan-ji-wang-luo/"/>
      <url>/2022/12/05/2-diao-yan-xue-xi-si-kao/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="什么是计算机网络？"><a href="#什么是计算机网络？" class="headerlink" title="什么是计算机网络？"></a>什么是计算机网络？</h1><p>目前市面上的计算机网络知识太过纷繁复杂，即使花了大量时间仍是对内容的把握一头雾水，其中的原因是内容太多，以至于没有办法定位自己的位置，好不容易对知识有一个基础的认识，新的内容名词的加入又混淆了，学习任何一门知识都要具有一个锚点，然后再学习知识时迁移到之前的知识体系之中，才能够加入到整个记忆循环内。如果一直找不到一个新知识的定位，乱糟糟的一团则很难迁移。</p><p>因此针对计算机网络庞杂的知识体系，首先要明确的将整个知识体系最粗略的划分，然后层层推进。那么我们就现不管所有的协议、网关、总线、设备等专业的内容，把这些东西构成计算机网络的一张棋盘，先不去理解棋盘为什么要这么划分，而是先确定棋子的位置，比如你是程序员，那你的位置就在应用层、表示层和会话层，如果你是服务器工作者，那你的定位则是在总线、路由器、光猫、交换机、以太网这些设备的交互的数据介质上面。至于IP服务和传输消息则是二者的一个桥梁。总归呐，计算机网络就是一张中国象棋棋盘，你先要明确你的位置，才能了解棋盘的构成，才能制定相应的策略。</p><h1 id="计算机网络模型"><a href="#计算机网络模型" class="headerlink" title="计算机网络模型"></a>计算机网络模型</h1><p>为了使不同计算机厂家生产的计算机能够相互通信，以便在更大的范围内建立计算机网络，国际标准化组织（ISO）在1978年提出了”开放系统互联参考模型”，即著名的OSI/RM模型（Open System Interconnection/Reference Model）。它将计算机网络体系结构的通信协议划分为七层，自下而上依次为：物理层（Physics Layer）、数据链路层（Data Link Layer）、网络层（Network Layer）、传输层（Transport Layer）、会话层（Session Layer）、表示层（Presentation Layer）、应用层（Application Layer）。其中第四层完成数据传送服务，上面三层面向用户。</p><p>除了标准的OSI七层模型以外，常见的网络层次划分还有TCP/IP四层协议以及TCP/IP五层协议，它们之间的对应关系如下图所示：</p><p><a href="https://mp.weixin.qq.com/s/9tVsCqp7y2xvzT1mwA9EBg" target="_blank" rel="noopener">硬核图解！断网了，还能ping通 127.0.0.1 吗？为什么？ (qq.com)</a></p><h1 id="应用层、表示层、会话层"><a href="#应用层、表示层、会话层" class="headerlink" title="应用层、表示层、会话层"></a>应用层、表示层、会话层</h1><p>HTTP协议、<br>PING是应用层命令，可以理解为它跟游戏或者聊天软件属于同一层。只不过聊天软件可以收发消息，还能点个赞什么的，有很多复杂的功能。而 ping 作为一个小软件，它的功能比较简单，就是<strong>尝试</strong>发送一个小小的消息到目标机器上，判断目的机器是否<strong>可达</strong>，其实也就是判断目标机器网络是否能连通。<br>ping应用的底层，用的是网络层的<strong>ICMP协议</strong>。<br><a href="https://mp.weixin.qq.com/s/9tVsCqp7y2xvzT1mwA9EBg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/9tVsCqp7y2xvzT1mwA9EBg</a></p><h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><p>TCP协议、UDP协议</p><h1 id="网路层"><a href="#网路层" class="headerlink" title="网路层"></a>网路层</h1><p><strong>IP协议</strong><br><strong>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。</strong><br>客户端的网络层不用关心应用层和传输层的东西，主要做的是通过查找路由表确定如何到达服务器，期间可能经过多个路由器。<br><strong>ICMP协议（Internet Control Message Protocol，因特网控制报文协议）</strong><br>虽然ICMP协议和IP协议<strong>都属于网络层协议</strong>，但其实<strong>ICMP也是利用了IP协议进行消息的传输</strong>。<br>设备：路由器<br>设备：网关（路由器、交换机）</p><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p>网络接口协议<br>ARP</p><h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><ol><li>电缆、总线<br>以太网、PCIe</li><li>接口<br>HDMI、TypeA、TypeB、USB3.0、USBmni、USBmicro、TypeC</li></ol><h1 id="一个举例"><a href="#一个举例" class="headerlink" title="一个举例"></a>一个举例</h1><p>在浏览器中输入  <strong><a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a></strong>  后执行的全部过程。</p><p>现在假设如果我们在客户端（客户端）浏览器中输入 <a href="http://www.baidu.com，" target="_blank" rel="noopener">http://www.baidu.com，</a> 而 baidu.com 为要访问的服务器（服务器），下面详细分析客户端为了访问服务器而执行的一系列关于协议的操作：</p><ul><li>1）客户端浏览器通过DNS解析到<a href="http://www.baidu.com的IP地址220.181.27.48，通过这个IP地址找到客户端到服务器的路径。客户端浏览器发起一个HTTP会话到220.161.27.48，然后通过TCP进行封装数据包，输入到网络层。" target="_blank" rel="noopener">www.baidu.com的IP地址220.181.27.48，通过这个IP地址找到客户端到服务器的路径。客户端浏览器发起一个HTTP会话到220.161.27.48，然后通过TCP进行封装数据包，输入到网络层。</a></li><li>2）在客户端的传输层，把HTTP会话请求分成报文段，添加源和目的端口，如服务器使用80端口监听客户端的请求，客户端由系统随机选择一个端口如5000，与服务器进行交换，服务器把相应的请求返回给客户端的5000端口。然后使用IP层的IP地址查找目的端。</li><li>3）客户端的网络层不用关系应用层或者传输层的东西，主要做的是通过查找路由表确定如何到达服务器，期间可能经过多个路由器，这些都是由路由器来完成的工作，不作过多的描述，无非就是通过查找路由表决定通过那个路径到达服务器。</li><li>4）客户端的链路层，包通过链路层发送到路由器，通过邻居协议查找给定IP地址的MAC地址，然后发送ARP请求查找目的地址，如果得到回应后就可以使用ARP的请求应答交换的IP数据包现在就可以传输了，然后发送IP数据包到达服务器的地址。</li></ul><h2 id="举例2"><a href="#举例2" class="headerlink" title="举例2"></a>举例2</h2><p>链接：<a href="https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?" target="_blank" rel="noopener">https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?</a><br>来源：牛客网  </p><p><strong>事件顺序</strong></p><p>(1) 浏览器获取输入的域名<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p>(2) 浏览器向DNS请求解析<a href="http://www.baidu.com的IP地址" target="_blank" rel="noopener">www.baidu.com的IP地址</a></p><p>(3) 域名系统DNS解析出百度服务器的IP地址</p><p>(4) 浏览器与该服务器建立TCP连接(默认端口号80)</p><p>(5) 浏览器发出HTTP请求，请求百度首页</p><p>(6) 服务器通过HTTP响应把首页文件发送给浏览器</p><p>(7) TCP连接释放</p><p>(8) 浏览器将首页文件进行解析，并将Web页显示给用户。</p><p><strong>涉及到的协议</strong></p><p>(1) 应用层：HTTP(WWW访问协议)，DNS(域名解析服务)</p><p>(2) 传输层：TCP(为HTTP提供可靠的数据传输)，UDP(DNS使用UDP传输)</p><p>(3) 网络层：IP(IP数据数据包传输和路由选择)，ICMP(提供网络传输过程中的差错检测)，ARP(将本机的默认网关IP地址映射成物理MAC地址)</p><p>主要考察五层协议栈的理解<br>1、应用层：DNS解析域名为目的IP，通过IP找到服务器路径，客户端向服务器发起HTTP会话，然后通过运输层TCP协议封装数据包，在TCP协议基础上进行传输</p><p>2、运输层：HTTP会话会被分成报文段，添加源、目的端口；TCP协议进行主要工作</p><p>3、网络层：为数据包选择路由，IP协议进行主要工作</p><p>4、数据链路层：相邻结点的可靠传输，ARP协议将IP地址转成MAC地址。</p><p>链接：<a href="https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?" target="_blank" rel="noopener">https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?</a><br>来源：牛客网  </p><p>浏览器解析目标域名，看浏览器缓存是否有目标域名的对应ip，如果没有通过操作系统的hosts文件看是否有对应记录，没有则进行DNS解析（先递归再迭代，通过本地DNS服务器-区域DNS服务器基本可以拿到解析ip，但是书中一般讲的是根据根节点-一级域名服务器的层层向下请求解析的办法，这个只会出现在第一次，之后各级都有相应的缓存了，而且会进行DNS的信息交换传递，所以后续基本不回请求到一级或者二级域名服务器，根节点服务器就更少了）；</p><p>2：拿到ip地址之后浏览器会调用系统的网络请求接口，生成套接字（也就是传输层的端口号），然后根据计算机安装的TCP/IP协议，进行层层封装，加装ip首部，根据目标ip以及自身掩码可以判断目标主机是否跟自己是同一个网络，如果是，这直接将目标ip的mac地址封装到数据帧首部中，如果找不到mac地址就ARP通过广播方式进行解析目标ip的mac地址；如果跟自己不是同一个网络，则直接将本地网关的mac地址封装到数据帧首部中，如果找不到mac地址就ARP通过广播方式进行解析网关ip的mac地址；</p><p>3：根据拿到的目标mac和目标ip，这下终于可以走出去了，发送到网关（如果是不同网络的话），网关也是个路由设备，按照路由算法的规则，路由表找寻目标网络的下一条ip以及对应的出端口发送出去，以此类推最终到达目标主机所在的网络路由器；</p><p>4：路由器收到之后只会解封前三层数据包，找到目标主机ip地址后确认在本地网络中存在，然后根据其mac地址发送到目标主机，主机收到之后按照之前来的寻址逻辑，将需求资源封装之后返回给请求主机浏览器，所以你就在浏览器看到目标资源信息了。至此寻址完成，过程大致不复杂，但是里面有很多细节很复杂，包括路由协议，路由协议算法，策略，拥塞控制，断掉重连等等，这就不表了</p><p>链接：<a href="https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?" target="_blank" rel="noopener">https://www.nowcoder.com/questionTerminal/f09d6db0077d4731ac5b34607d4431ee?</a><br>来源：牛客网  </p><p>1.浏览器获取域名</p><p>2.通过DNS协议获取域名对应服务器的ip地址</p><p>3.浏览器和对应的服务器通过三次握手建立TCP连接</p><p>4.浏览器通过HTTP协议向服务器发送数据请求</p><p>5.服务器将查询结果返回给浏览器</p><p>6.四次挥手释放TCP连接</p><p>7.浏览器渲染结果</p><p>涉及到的协议</p><p>应用层：HTTP和DNS</p><p>传输层：TCP UDP</p><p>网络层：IP ICMP ARP</p><h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><p><a href="https://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html" target="_blank" rel="noopener">互联网协议入门（一） - 阮一峰的网络日志 (ruanyifeng.com)</a><br><a href="https://www.bilibili.com/video/BV1fU4y1t7Ju/?spm_id_from=autoNext&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">交换机和路由器有什么区别？网关和路由又是什么意思？简单说网络2-交换机与路由器_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV19v4y1M7ac/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV19v4y1M7ac/?spm_id_from=333.337.search-card.all.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br><a href="https://www.bilibili.com/video/BV1Ag4y1J7HH/?spm_id_from=333.788.recommend_more_video.6&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">五分钟理解：交换机与路由器的区别和联系。为什么大学寝室里都是合伙买路由器却很少见哪个寝室合伙买交换机？交换机是必要的吗_哔哩哔哩_bilibili</a><br><a href="https://www.eet-china.com/mp/a62811.html" target="_blank" rel="noopener">干货！一万字16张图详解计算机网络协议-面包板社区 (eet-china.com)</a><br><a href="http://xueke.100pian.com/jisuanji/wangluoxieyi.php" target="_blank" rel="noopener">计算机网络协议大全-100pian综合网站</a><br><a href="https://www.eefocus.com/e/512707.html" target="_blank" rel="noopener">https://www.eefocus.com/e/512707.html</a><br><a href="https://blog.csdn.net/m0_47334080/article/details/106939302" target="_blank" rel="noopener">以太网与CAN的区别_can和以太网_怿星科技的博客-CSDN博客</a><br><a href="https://blog.csdn.net/wangshuaiwsws95/article/details/79847300?spm=1001.2014.3001.5502" target="_blank" rel="noopener">(83条消息) 你可能没有细究过的TCP/IP_tcp/ip services code_CodeSheep程序羊的博客-CSDN博客</a><br><a href="https://www.bilibili.com/video/BV1ym4y1B7EA/?spm_id_from=333.1007.tianma.2-2-4.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">CPU发展简史_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机基础 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 计算机底层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo项目部署|PUSH到Github有各种问题</title>
      <link href="/2022/12/05/1-xiang-mu/bo-ke-xiang-mu/ji-lu-yi-ci-hexo-xiang-mu-bu-shu-de-debug-guo-cheng/"/>
      <url>/2022/12/05/1-xiang-mu/bo-ke-xiang-mu/ji-lu-yi-ci-hexo-xiang-mu-bu-shu-de-debug-guo-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="正常部署方式"><a href="#正常部署方式" class="headerlink" title="正常部署方式"></a>正常部署方式</h1><p>当github仓库、git、Hexo准备就绪，想把自己的内容推送到Github上时，通过GitHub网址 ，<a href="https://jlcxxzj.github.io/" target="_blank" rel="noopener">可见jlcxxzj</a>,就可以愉快的访问时，一切都是那么简单，只需要：</p><h2 id="一、建立本地项目和Github的连接"><a href="#一、建立本地项目和Github的连接" class="headerlink" title="一、建立本地项目和Github的连接"></a>一、建立本地项目和Github的连接</h2><ol><li>打开Hexo项目根目录，右键打开git bash，然后输入自己的github账号信息命令：<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token function">git</span> config --global user.name <span class="token string">"jlcxxzj"</span> <span class="token function">git</span> config --global user.email <span class="token string">"2541597473@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>没有报错就说明用户信息是正确的，如果报错去Github设置看看自己的用户名和邮箱；接下来生成密钥SSH key，首先是确定要生成密钥的账户：<pre class="line-numbers language-bash"><code class="language-bash"> ssh-keygen -t rsa -C <span class="token string">"2541597473@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 继续输入下面命令，会产生一个密钥，也可在本地的用户根目录下<strong>.ssh</strong>文件夹找到产生的密钥：<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>生成密钥成功以后，打开<a href="https://github.com/jlcxxzj">github</a>，在右上角头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字任意，可按项目名称来，将第2步产生的密钥复制到框中，点击确定保存。</li><li>在第1步右键打开的git bash下输入<code>ssh -T git@github.com</code>，如果没有报错，出现你的用户名，那就成功了。<h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1>由于本机属于内网，互联网是没有办法直接访问的，因此需要使用内网穿透来使得其他设备可以访问到<br><a href="https://cloud.tencent.com/developer/article/2126247" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/2126247</a><br>主机IP可通过CMD输入ipconfig或者ipconfig/all来查看<br>选择https方式<h2 id="二、将自己的Hexo博客上传到github页面，不用搭服务器或者内网穿透就能远程访问"><a href="#二、将自己的Hexo博客上传到github页面，不用搭服务器或者内网穿透就能远程访问" class="headerlink" title="二、将自己的Hexo博客上传到github页面，不用搭服务器或者内网穿透就能远程访问"></a>二、将自己的Hexo博客上传到github页面，不用搭服务器或者内网穿透就能远程访问</h2></li><li>首先修改一下Hexo博客更目录下的_config.yml配置文件(注意，不是主题下面的_config.yml),修改一下部署的配置信息，repository修改为自己的github项目地址：<pre class="line-numbers language-bash"><code class="language-bash"> deploy:     type: <span class="token function">git</span>     repository: https://github.com/jlcxxzj/jlcxxzj.github.io.git     branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>正常情况下以下3步就可以部署到github页面访问1. <code>hexo clean</code>、<code>hexo g</code>、<code>hexo d</code></li><li>github访问地址 <a href="https://github.com/jlcxxzj/jlcxxzj.github.io.git，在具体的项目设置中，可以根本更改默认分支，访问的话也是访问默认的分支">https://github.com/jlcxxzj/jlcxxzj.github.io.git，在具体的项目设置中，可以根本更改默认分支，访问的话也是访问默认的分支</a></li><li>也可以本地访问， <code>hexo clean</code>、<code>hexo g</code>、<code>hexo s</code>，默认4000端口可访问，<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></li></ol><h1 id="各种意外情况"><a href="#各种意外情况" class="headerlink" title="各种意外情况"></a>各种意外情况</h1><h2 id="部署出现错误err-Error-Spawn-failed"><a href="#部署出现错误err-Error-Spawn-failed" class="headerlink" title="部署出现错误err: Error: Spawn failed"></a>部署出现错误err: Error: Spawn failed</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">##进入站点根目录</span><span class="token function">cd</span> /usr/local/src/hexo/hanyubolg/<span class="token comment" spellcheck="true">##删除git提交内容文件夹</span><span class="token function">rm</span> -rf .deploy_git/<span class="token comment" spellcheck="true">##执行</span><span class="token function">git</span> config --global core.autocrlf <span class="token boolean">false</span><span class="token comment" spellcheck="true">##最后</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Git出错：error-RPC-failed-curl-56-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#Git出错：error-RPC-failed-curl-56-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="Git出错：error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054"></a>Git出错：error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>出现这种原因的可能有好几种</p><h3 id="fatal-The-remote-end-hung-up-unexpectedly"><a href="#fatal-The-remote-end-hung-up-unexpectedly" class="headerlink" title="fatal: The remote end hung up unexpectedly"></a>fatal: The remote end hung up unexpectedly</h3><p><img src="https://upload-images.jianshu.io/upload_images/20074990-37e315ab227b135e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/566/format/webp" alt></p><ol><li>整体文件太大，修改文件大小的上限：<br><code>git config --global http.postBuffer 524288000</code><br>也可在项目中的.git文件夹，直接修改；通过下面命令查看是否修改成功：<br><code>git config --list</code></li><li>单个文件<strong>超过100M</strong>是不能上传的，部署的时候需要注意<h3 id="error-failed-to-push-some-refs-to-git"><a href="#error-failed-to-push-some-refs-to-git" class="headerlink" title="error: failed to push some refs to *.git"></a>error: failed to push some refs to *.git</h3>之前这种操作属于常规操作，没想到这次出了问题，感觉问题应该出在了工程创建方式上。我在 git 后台创建工程时勾选了自动添加 README.md 文件，可能导致了后续一系列问题。</li></ol><h2 id="部署的时候一直卡着不动的原因"><a href="#部署的时候一直卡着不动的原因" class="headerlink" title="部署的时候一直卡着不动的原因"></a>部署的时候一直卡着不动的原因</h2><p><a href="https://blog.csdn.net/qq_25333681/article/details/80879500" target="_blank" rel="noopener">https://blog.csdn.net/qq_25333681/article/details/80879500</a></p><h2 id="需要修改展示的branch分支页面时"><a href="#需要修改展示的branch分支页面时" class="headerlink" title="需要修改展示的branch分支页面时"></a>需要修改展示的branch分支页面时</h2><p>点击settings，在Pages的 <strong>Build and deployment</strong>修改<strong>Branch</strong>，需要等一会重新输入<a href="https://jlcxxzj.github.io/" target="_blank" rel="noopener">项目地址</a>，就能访问分支下的页面了。<br><img src="//github.com/jlcxxzj/blog.github.io/2022/12/05/1-xiang-mu/bo-ke-xiang-mu/ji-lu-yi-ci-hexo-xiang-mu-bu-shu-de-debug-guo-cheng/00d68c60-745b-11ed-aa4d-fdeb71e777c3.jpeg?v=1&type=image" alt></p><h2 id="Debug链接"><a href="#Debug链接" class="headerlink" title="Debug链接"></a>Debug链接</h2><p><a href="https://blog.csdn.net/u013250071/article/details/81203900" target="_blank" rel="noopener">修改.git文件夹</a></p>]]></content>
      
      
      <categories>
          
          <category> Debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github项目部署 </tag>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT学习|开始C++开发</title>
      <link href="/2022/12/05/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/qt-ji-chu/"/>
      <url>/2022/12/05/1-xiang-mu/qian-ru-shi-xi-tong-xiang-guan-xiang-mu/qt-ji-chu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="C-图形化编程QT"><a href="#C-图形化编程QT" class="headerlink" title="C++图形化编程QT"></a>C++图形化编程QT</h1><p><a href="https://www.bilibili.com/video/BV16L411e7jg/?buvid=Y944F79ED70FDE664A65A6B804467E1A4D35&is_story_h5=false&mid=4H%2BMr87eY0cuHLTicB5Sog%3D%3D&p=8&plat_id=116&share_from=ugc&share_medium=iphone&share_plat=ios&share_session_id=2877AE08-14DE-4B16-895D-8124A8983E92&share_source=WEIXIN&share_tag=s_i&timestamp=1682046993&unique_k=hz2cmpM&up_id=2071969122&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">1.4 父窗口1_哔哩哔哩_bilibili</a><br><a href="http://shouce.jb51.net/qt-beginning/3.html" target="_blank" rel="noopener">第0篇 开始学习Qt 与Qt Creator · Qt 快速入门系列教程 (jb51.net)</a><br><a href="https://www.woshipm.com/pd/708231.html" target="_blank" rel="noopener">特殊情况下的APP设计（3）：如何处理加载页面？ | 人人都是产品经理 (woshipm.com)</a><br><a href="https://blog.csdn.net/Revival_Liang/article/details/51940298" target="_blank" rel="noopener">安卓向服务器发送数据和服务器接收数据全过程_手机发往服务器端发送的参数怎么看_Revival_Liang的博客-CSDN博客</a><br><a href="https://www.cnblogs.com/manshufeier/p/9436380.html" target="_blank" rel="noopener">服务端主动推送数据到客户端 - manshufeier - 博客园 (cnblogs.com)</a></p><h1 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h1><p><a href="https://worktile.com/blog/know-739/" target="_blank" rel="noopener">socket和http区别 (worktile.com)</a></p><h3 id="okHttp："><a href="#okHttp：" class="headerlink" title="okHttp："></a><strong>okHttp：</strong></h3><p>OkHttp 是 Square 公司开源的针对 Java 和 Android 程序，封装的一个高性能 http 请求库。OKHttp 类似于 HttpUrlConnection， 是基于传输层实现应用层协议的网络框架。 而不止是一个 Http 请求应用的库。</p><p><a href="https://zhuanlan.zhihu.com/p/79571182" target="_blank" rel="noopener">OkHttp使用详解 - 知乎 (zhihu.com)</a><br><a href="https://blog.csdn.net/weixin_45203607/article/details/124204137" target="_blank" rel="noopener">(82条消息) Java-OkHttp使用教程_okhttp教程_胡安民的博客-CSDN博客</a><br><a href="https://blog.csdn.net/weixin_45203607/article/details/124204137" target="_blank" rel="noopener">(82条消息) Java-OkHttp使用教程_okhttp教程_胡安民的博客-CSDN博客</a><br><a href="https://huanmin.blog.csdn.net/article/details/128721537?spm=1001.2014.3001.5502" target="_blank" rel="noopener">(83条消息) Java-新年抽奖-消息自动化发送脚本_胡安民的博客-CSDN博客</a><br><a href="https://huanmin.blog.csdn.net/article/details/120252085?spm=1001.2014.3001.5502" target="_blank" rel="noopener">(83条消息) Web各大地图开发_web地图开发_胡安民的博客-CSDN博客</a><br><a href="https://blog.csdn.net/wangshuaiwsws95/article/details/107830452?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168199690016800213049783%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168199690016800213049783&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107830452-null-null.142^v85^insert_down1,239^v2^insert_chatgpt&utm_term=%E5%B5%8C%E5%85%A5%E5%BC%8F&spm=1018.2226.3001.4187" target="_blank" rel="noopener">(83条消息) 肝了半个月，我整理出了这篇嵌入式开发学习学习路线+知识点梳理）_嵌入式学习路线_CodeSheep程序羊的博客-CSDN博客</a><br><a href="https://blog.csdn.net/wangshuaiwsws95/article/details/118142438?spm=1001.2014.3001.5502" target="_blank" rel="noopener">(83条消息) 硬核！高频Linux命令大总结，建议收藏~_linux常用高频命令_CodeSheep程序羊的博客-CSDN博客</a><br><a href="https://blog.csdn.net/wangshuaiwsws95/article/details/105041767?spm=1001.2014.3001.5502" target="_blank" rel="noopener">(83条消息) 看完这篇，别人的开源项目结构应该能看懂了_毕设别人写的开源项目看不懂_CodeSheep程序羊的博客-CSDN博客</a></p><h1 id="嵌入式基础"><a href="#嵌入式基础" class="headerlink" title="嵌入式基础"></a>嵌入式基础</h1><p><a href="https://www.youtube.com/watch?v=4cV2VpEj-gI" target="_blank" rel="noopener">51单片机入门分享1：认识开发板和准备工作 - YouTube</a><br><a href="https://www.bilibili.com/video/BV1ym4y1B7EA/?spm_id_from=333.1007.tianma.2-2-4.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">CPU发展简史_哔哩哔哩_bilibili</a></p><h1 id="嵌入式GUI"><a href="#嵌入式GUI" class="headerlink" title="嵌入式GUI"></a>嵌入式GUI</h1><p><a href="https://getiot.tech/zh/lvgl/lvgl-intro" target="_blank" rel="noopener">LVGL 简介 – 人人都懂物联网 (getiot.tech)</a><br><a href="https://zhuanlan.zhihu.com/p/406294618" target="_blank" rel="noopener">开源轻量级显示框架LVGL简介 - 知乎 (zhihu.com)</a><br><a href="https://www.facebook.com/readmorejoy/posts/428397605686981/" target="_blank" rel="noopener">阅读，爱上书 - 圆胖肿的回答 因为你学的不是java，而是spring那些东西的api… | Facebook</a><br><a href="https://www.zhihu.com/question/453773250" target="_blank" rel="noopener">(1 封私信 / 41 条消息) 为什么工业软件开发一般用的都是QT？ - 知乎 (zhihu.com)</a></p><h3 id="QT和LVGL的区别？"><a href="#QT和LVGL的区别？" class="headerlink" title="QT和LVGL的区别？"></a>QT和LVGL的区别？</h3><p>作为一家国产芯片公司，这几年接到了很多国产化的需求，很多工业类客户希望用我们的芯片做工业控制、显示类设备的，我给他们推荐新兴的LVGL等框架，我说这个<strong>好看、火、轻量级、更适合嵌入式设备</strong><br>他们说：<strong>用QT的话，之前在其他芯片平台上做过的程序可以直接移植（复制）过来。。</strong><br><a href="https://www.bilibili.com/video/BV1Br4y1B7nG/?spm_id_from=333.337.search-card.all.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">这UI框架，棒极了！_哔哩哔哩_bilibili</a><br><a href="https://gitee.com/yoyoyes/esp32_lvgl_demo" target="_blank" rel="noopener">https://gitee.com/yoyoyes/esp32_lvgl_demo</a><br><a href="https://www.bilibili.com/video/BV17V4y1Z7dg/?spm_id_from=333.337.search-card.all.click" target="_blank" rel="noopener">https://www.bilibili.com/video/BV17V4y1Z7dg/?spm_id_from=333.337.search-card.all.click</a><br><a href="https://blog.csdn.net/qianshuyuankk/article/details/128405124" target="_blank" rel="noopener">(84条消息) Qt Creator 运行LVGL模拟器_lvgl qt_bitQ的博客-CSDN博客</a></p><h1 id="qt-creator-和qt-designer的区别"><a href="#qt-creator-和qt-designer的区别" class="headerlink" title="qt creator 和qt designer的区别"></a>qt creator 和qt designer的区别</h1><p><a href="https://zhuanlan.zhihu.com/p/355142235" target="_blank" rel="noopener">Qt Designer、Qt Quick Designer、Qt Creator有什么区别？ - 知乎 (zhihu.com)</a><br>qt creator是写qt的原生环境<br>qt designer是图形工具，<code>Qt Designer</code>是用于使用Qt小部件文件（.ui）设计和构建图形用户界面（GUI）的Qt工具，可以按所见即所得（WYSIWYG）的方式编写和自定义窗口或对话框，并使用不同的样式和分辨率对其进行测试。</p><p>之前做自动化测试使用pyqt开发，qdesigner就起到了关键作用，在PyQt应用程序中设计图形化内容，<code>Qt Designer</code>生成的.ui文件（实质上是XML格式的文件）通过pyuic5工具转换成.py文件。<br><code>Qt Designer</code>在安装Qt时安装，一般在以下路径中：<code>D:\Qt\Qt5.12.0\5.12.0\mingw73_64\bin\designer.exe</code>。它也可用于编辑Qt、C++应用程序的任何（.ui）文件，但是由于它仅允许编辑图形内容（而非C++逻辑），因此它非常受限制。</p><p>但是借助OpenGL图形加速的强大功能，可以实现完全可自定义的外观，触摸反应式元素以及平滑的动画过渡。</p><p>有关如何使用Qt Designer的快速教程，请参阅<code>Qt Designer</code>快速入门。</p><h1 id="用pyqt写GUI的好处"><a href="#用pyqt写GUI的好处" class="headerlink" title="用pyqt写GUI的好处"></a>用pyqt写GUI的好处</h1><p><a href="https://blog.csdn.net/weixin_30408165/article/details/99135174" target="_blank" rel="noopener">(85条消息) 什么是PyQt？_weixin_30408165的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机基础 </tag>
            
            <tag> 计算机编程 </tag>
            
            <tag> 图形化编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机高级编程语言是如何发展为如此庞杂的|C/C++/JAVA/PHP/RUBY,Rail/JAVAscript</title>
      <link href="/2022/12/05/2-diao-yan-xue-xi-si-kao/gen-zong-ren-gong-zhi-neng-gpt-dui-ge-xing-de-gai-bian/ji-suan-ji-gao-ji-bian-cheng-yu-yan-shi-ru-he-fa-zhan-wei-ru-ci-pang-za-de/"/>
      <url>/2022/12/05/2-diao-yan-xue-xi-si-kao/gen-zong-ren-gong-zhi-neng-gpt-dui-ge-xing-de-gai-bian/ji-suan-ji-gao-ji-bian-cheng-yu-yan-shi-ru-he-fa-zhan-wei-ru-ci-pang-za-de/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="计算机发展的三个时代"><a href="#计算机发展的三个时代" class="headerlink" title="计算机发展的三个时代"></a>计算机发展的三个时代</h1><p><a href="https://www.bilibili.com/video/BV1J24y1c7m3/?spm_id_from=333.1007.tianma.1-1-1.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">一个动画告诉你，年代久远的C/C++为什么还没有被新时代给淘汰呢？_哔哩哔哩_bilibili</a></p><h2 id="桌面端时代（C-S结构）"><a href="#桌面端时代（C-S结构）" class="headerlink" title="桌面端时代（C/S结构）"></a>桌面端时代（C/S结构）</h2><p>C和C++的天下（word、excel）</p><h2 id="互联网时代（B-S结构）"><a href="#互联网时代（B-S结构）" class="headerlink" title="互联网时代（B/S结构）"></a>互联网时代（B/S结构）</h2><p>（Java虚拟机、PHP、ruby、python解释器底层都是C/C++写的）<br>Java（WEB页面、前后端），早期的霸主<br>php（Facebook、yahoo、维基百科）、ruby on rails（hulu、twitter、github)层出不穷<br>python(数据处理、科学计算、爬虫、数据挖掘、桌面程序)<br>服务端（Java、C#、python、ruby、php）<br>浏览器端（Javascript 、node.js、vue）</p><h2 id="大数据、云计算时代（程序部署到云端）"><a href="#大数据、云计算时代（程序部署到云端）" class="headerlink" title="大数据、云计算时代（程序部署到云端）"></a>大数据、云计算时代（程序部署到云端）</h2><p>hadoop、spark、kafka、flink都是建立在Java和scala基础之上的<br>scipy、numpy、matplotglib、pandas等数据分析都是建立在Java之上的<br>云计算时代的C语言，go语言<br><strong>Java</strong>是一种是基于类的，并发的和面向对象的编程<strong>语言</strong>。 它专门设计为包含很少的实现依赖项，其应用程序上的编译代码或字节码可以在大多数操作系统上运行，包括Linux，Mac操作系统和Linux。 <strong>Go</strong>是一种过程式编程<strong>语言</strong>，于2009年作为开源编程<strong>语言</strong>推出。程序通过使用包进行组装，以有效管理依赖关系。该语言还支持采用类似于动态语言的模式的环境。<br><a href="https://cloud.tencent.com/developer/article/1839604" target="_blank" rel="noopener">一文快速了解进程、线程与协程 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h2 id="web3时代"><a href="#web3时代" class="headerlink" title="web3时代"></a>web3时代</h2><h1 id="C语言、C-和C-的区别"><a href="#C语言、C-和C-的区别" class="headerlink" title="C语言、C++和C#的区别"></a>C语言、C++和C#的区别</h1><p><a href="https://www.bilibili.com/video/BV1h14y1x714/?spm_id_from=autoNext&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">C语言、C++和C#的区别竟是如此，看完视频我悟了！_哔哩哔哩_bilibili</a><br>C语言：高冷，速度超快<br>C++：交互强了很多，太罗嗦了，速度很快<br>C#：微软做的，对象创建方便，速度降低，和C++可代码逻辑交互</p><h1 id="集成开发环境（IDE-比较"><a href="#集成开发环境（IDE-比较" class="headerlink" title="集成开发环境（IDE)比较"></a>集成开发环境（IDE)比较</h1><p><strong>集成开发环境</strong>（Integrated Development Environment)<br><a href="https://haicoder.net/c/c-ide.html" target="_blank" rel="noopener">什么是IDE-嗨客网 (haicoder.net)</a><br><a href="https://www.infoq.cn/article/pwajbi4wzsvxdlk0tfav" target="_blank" rel="noopener">2021年要考虑的10种最佳IDE软件_语言 &amp; 开发_WebCreek_InfoQ精选文章</a><br><a href="https://blog.csdn.net/lsely/article/details/126230317" target="_blank" rel="noopener">(84条消息) 五个美观好用的全能性IDE推荐(更新）_好用的ide_lsely的博客-CSDN博客</a></p><h2 id="VScode和vs最大的区别是提供了丰富的插件选择，页面简洁，理解方便"><a href="#VScode和vs最大的区别是提供了丰富的插件选择，页面简洁，理解方便" class="headerlink" title="VScode和vs最大的区别是提供了丰富的插件选择，页面简洁，理解方便"></a>VScode和vs最大的区别是提供了丰富的插件选择，页面简洁，理解方便</h2><p><a href="https://matpool.com/blog/610751b75a27e902e6a022f4/" target="_blank" rel="noopener">超全面！15 种 Python IDE 工具使用对比 (matpool.com)</a><br><a href="https://www.linuxmi.com/java-ide.html" target="_blank" rel="noopener">7 个最好的 Java IDE 比较 - Linux迷 (linuxmi.com)</a><br><a href="https://www.incredibuild.cn/blog/best-c-ides" target="_blank" rel="noopener">2021 最佳 C++ IDE 排行 - Incredibuild</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机编程语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端与后端 | 谁是未来的主宰？</title>
      <link href="/2022/12/05/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/di-si-ci-gong-ye-ge-ming-zui-ke-neng-fa-sheng-zai-na/"/>
      <url>/2022/12/05/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/di-si-ci-gong-ye-ge-ming-zui-ke-neng-fa-sheng-zai-na/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 前沿 </tag>
            
            <tag> 工业革命 </tag>
            
            <tag> 技术前沿 </tag>
            
            <tag> 智能化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新闻一览|  web3、币圈、区块链</title>
      <link href="/2022/12/05/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/web3-bi-quan/"/>
      <url>/2022/12/05/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/web3-bi-quan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="2022-12-05"><a href="#2022-12-05" class="headerlink" title="2022.12.05"></a>2022.12.05</h1><h1 id="2022-11-30"><a href="#2022-11-30" class="headerlink" title="2022.11.30"></a>2022.11.30</h1><p>综合红星新闻，极目新闻11月30日报道，俄罗斯亿万富翁，在良好天气的条件下突然坠机，成为最新一位死于神秘情况的加密货币商人。</p><p>有报道29日称，近日，53岁的俄罗斯亿万富翁维亚奇斯拉维·塔兰从瑞士飞往摩纳哥时，其搭乘的直升机在法国和意大利边境处坠毁。塔兰是机上唯一一名乘客，他与机上35岁的法国飞行员均遇难。目前，事故原因仍在调查中。据了解，俄罗斯驻法国大使馆已经证实了塔兰的死讯。</p><p>飞机坠毁事故原因仍在调查中 来源：红星新闻当地时间11月28日，福瑞斯金融集团发表官方声明称：“我们非常悲痛地确认联合创始人兼董事会主席维亚奇斯拉维·塔兰在直升机失事后去世。”据悉，当天塔兰是准备乘坐空中客车的H130机型从瑞士飞往摩纳哥。</p><p>原本这起坠机事故是场悲剧，但是一些巧合让人们对它有了许多疑惑。</p><p>有报道指出，事发时天气良好、飞行员经验丰富、当局也没有指出直升机存在操作不当的问题。更为神秘的是，塔兰坠机当天本来还有另外一位旅客原本计划搭乘这架直升机前往摩纳哥，但其在起飞前的最后一刻取消了这趟行程。目前暂不清楚该名旅客的具体信息。</p><p>此外，俄罗斯媒体在塔兰坠机后发表文章指出塔兰“有仇家”，他去世后留下了妻子和3个孩子。</p><p>11月25日，据Amber Group官网显示，联合创始人库兰德于11月23日在睡梦中意外去世，年仅30岁。他的公司和家人没有透露具体死因，只说了“非他杀”。今年10月底，29岁的加密货币开发商尼古拉·穆舍吉安（Nikolai Mushegian）在波多黎各的海滩上溺水身亡，此前他在推特上说，他担心有人会谋杀自己。</p>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前沿 </tag>
            
            <tag> web3 </tag>
            
            <tag> 币圈 </tag>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>增量学习 | 结合免疫学习思想！</title>
      <link href="/2022/12/04/3-zong-jie/bi-ye-lun-wen/zeng-liang-xue-xi/"/>
      <url>/2022/12/04/3-zong-jie/bi-ye-lun-wen/zeng-liang-xue-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="增量学习包括哪几类？"><a href="#增量学习包括哪几类？" class="headerlink" title="增量学习包括哪几类？"></a>增量学习包括哪几类？</h1><p><a href="https://zhuanlan.zhihu.com/p/384273982" target="_blank" rel="noopener">增量学习-学习总结（上） - 知乎 (zhihu.com)</a></p><h2 id="1-任务增量学习-Task-Incremental-Learning"><a href="#1-任务增量学习-Task-Incremental-Learning" class="headerlink" title="1. 任务增量学习(Task Incremental Learning)"></a>1. 任务增量学习(Task Incremental Learning)</h2><p>任务增量学习是指不同时刻到达的数据分属于不同的任务，同一任务的数据能够一个批次全部到达。由此导致的一个特点是，在一个任务中，我们可以获得当前任务的全量数据，从而可以遵循当前神经网络的学习范式，在独立同分布的假设下训练模型。同时，既然不同任务的输出互相独立，模型可以通过多头网络的方式实现。这也意味着，在预测阶段，我们需要根据需要指定输出头。</p><h2 id="2-类增量学习-Class-Incremental-Leraning"><a href="#2-类增量学习-Class-Incremental-Leraning" class="headerlink" title="2. 类增量学习(Class Incremental Leraning)"></a>2. 类增量学习(Class Incremental Leraning)</h2><p>类增量学习是指，不同时刻到达的数据属于同一任务的不同类别，类增量学习要求模型进行单头输出，并且能够增加输出的类别。相比于任务增量学习，类别增量学习前后数据之间的互相干扰更大，难度更高。</p><h2 id="3-域增量学习-Domain-Incremental-Learning"><a href="#3-域增量学习-Domain-Incremental-Learning" class="headerlink" title="3. 域增量学习(Domain Incremental Learning)"></a>3. 域增量学习(Domain Incremental Learning)</h2><p>域增量学习是指，不同时刻到达的数据属于同一任务的相同类别，但是数据分批次到达，且领域（domain）发生了变化，不同批次的数据不再符合静态同分布假设。在这个意义上，域增量学习与在线学习有相同之处，但增量学习突出强调了模型的抗遗忘能力。</p><h1 id="基于知识蒸馏的增量学习"><a href="#基于知识蒸馏的增量学习" class="headerlink" title="基于知识蒸馏的增量学习"></a>基于知识蒸馏的增量学习</h1><p><a href="https://www.johngo689.com/99261/#:~:text=%E5%9F%BA%E4%BA%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%E7%9A%84%E5%A2%9E%E9%87%8F%E5%AD%A6%E4%B9%A0%201%20%E7%8E%B0%E6%9C%89%E4%B8%80%E4%B8%AA%E5%9C%A8old%E6%95%B0%E6%8D%AE%E4%B8%8A%E8%AE%AD%E7%BB%83%E5%BE%97%E5%88%B0%E7%9A%84%E6%A8%A1%E5%9E%8BM%EF%BC%8C,2%20%E8%BE%93%E5%85%A5%E6%96%B0%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%BE%97%E5%88%B0%E7%9A%84%E8%BE%93%E5%87%BA%E6%98%AF%E6%97%A7%E6%A8%A1%E5%9E%8BM%E5%AF%B9%E6%96%B0%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%A7%E7%B1%BB%E5%88%AB%E9%A2%84%E6%B5%8B%E8%BE%93%E5%87%BAYo%EF%BC%8C%203%20%E7%94%A8%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BE%AE%E8%B0%83M%E5%BE%97%E5%88%B0M%E2%80%99%EF%BC%88M%E2%80%99%E5%8C%85%E6%8B%AC%E6%89%80%E6%9C%89%E7%B1%BB%E7%9A%84%E8%BE%93%E5%87%BA%EF%BC%89%EF%BC%8C" target="_blank" rel="noopener">FSCIL 小样本类增量学习_Johngo学长 (johngo689.com)</a></p><ol><li>现有一个在old数据上训练得到的模型M，</li><li>输入新数据，得到的输出是旧模型M对新数据的旧类别预测输出Yo，</li><li>用新数据微调M得到M’（M’包括所有类的输出）,</li></ol>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 增量学习 </tag>
            
            <tag> 免疫学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免疫学习 | 是自娱自乐还是前途无量！</title>
      <link href="/2022/12/03/3-zong-jie/bi-ye-lun-wen/mian-yi-xue-xi/"/>
      <url>/2022/12/03/3-zong-jie/bi-ye-lun-wen/mian-yi-xue-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="免疫学习"><a href="#免疫学习" class="headerlink" title="免疫学习"></a>免疫学习</h1><p>人工智能的兴起，涌现出许多生物启发的计算方法，如众所周知的神经网络模型、模糊数学、遗传算法等。这些方法通过模拟生物学隐含的基本原理（如基本交叉算子用于遗传算法）已经成功解决许多工程领域的问题。                                   </p><h1 id="二三章衔接"><a href="#二三章衔接" class="headerlink" title="二三章衔接"></a>二三章衔接</h1><h2 id="2章，在人体中，学习不是人脑的特有功能，免疫系统同样具有学习过程。"><a href="#2章，在人体中，学习不是人脑的特有功能，免疫系统同样具有学习过程。" class="headerlink" title="2章，在人体中，学习不是人脑的特有功能，免疫系统同样具有学习过程。"></a>2章，在人体中，学习不是人脑的特有功能，免疫系统同样具有学习过程。</h2><h2 id="3章，神经网络的特征提取能力与免疫记忆学习相辅相成，使得增量学习。"><a href="#3章，神经网络的特征提取能力与免疫记忆学习相辅相成，使得增量学习。" class="headerlink" title="3章，神经网络的特征提取能力与免疫记忆学习相辅相成，使得增量学习。"></a>3章，神经网络的特征提取能力与免疫记忆学习相辅相成，使得增量学习。</h2><h3 id="什么是学习？"><a href="#什么是学习？" class="headerlink" title="什么是学习？"></a>什么是学习？</h3><p>学习是人类或动物利用经验提高自己分析和处理问题的一种能力。</p><h3 id="植物的趋光性、向下性质是不是学习？"><a href="#植物的趋光性、向下性质是不是学习？" class="headerlink" title="植物的趋光性、向下性质是不是学习？"></a>植物的趋光性、向下性质是不是学习？</h3><p>如果从上面的定义来看，不属于，因为植物是对光和地面的一个反应，而没有用这种反应来生成经验，来提高处理类似的问题的能力，就好像植入了一段代码，当这样的时候怎么做，而不具备人工智能具有的发散性，去自发的思考和联想类似的情况。</p><p><strong>免疫系统对抗原应答的过程实际是一个学习过程。</strong></p><h3 id="免疫系统可长久记忆学习获得的知识，其记忆具有联想性质，即不仅可可识别记忆的抗原，而且可通过联想来识别相似的抗原。"><a href="#免疫系统可长久记忆学习获得的知识，其记忆具有联想性质，即不仅可可识别记忆的抗原，而且可通过联想来识别相似的抗原。" class="headerlink" title="免疫系统可长久记忆学习获得的知识，其记忆具有联想性质，即不仅可可识别记忆的抗原，而且可通过联想来识别相似的抗原。"></a>免疫系统可长久记忆学习获得的知识，其记忆具有联想性质，即不仅可可识别记忆的抗原，而且可通过联想来识别相似的抗原。</h3><p>比如当抗原初次应答时，免疫系统通过细胞分裂产生大量抗体，其中总会有一些会识别入侵的抗原，并与之结合，清除他们。在初次应答结束，一部分B细胞和T细胞会形成记忆细胞，记忆细胞会对以前遇到的抗原具有高于平均亲和力的亲和力，对这些遇到过的抗原的结构和特性有相应的抗体结构保存下来。这些保存下来的抗体就相当于经验，当二次应答时，如果遇到类似的抗原，他只需要凭自己的经验就可以更快的处理相同或类似抗原，因此二次应答不仅被同样病原体重新引发，也被与前面见过的病原体类似的新病原体所引发，即免疫记忆联想性。</p><p>所以免疫系统的学习是贯穿整个免疫应答过程的，而在应答过程结束后产生对入侵的特异抗原的记忆。这与人脑记住某一领域某一问题的知识、方法，以后对类似或同样问题就很容易解决的道理是一样的。</p><p>在第二章中，我们从模仿免疫系统的不同主体要素，包括抗原、抗体、B细胞、记忆细胞、疫苗等来构建了一个人工免疫识别系统，即SCLM免疫分类算法，机体在少量抗原的作用下建立初始的免疫系统，并通过抗原变异的方式产生疫苗来强化免疫系统的免疫识别能力，在机体免疫系统产生的抗体识别抗原的应答过程中，产生记忆细胞来建立二次免疫应答的快速反应能力，而且免疫系统会随着抗原产生的变异而调整自己的抗体和记忆细胞。</p><p>SCLM系统是一个动态和自适应的系统，能应对在少量抗原情况下，建立起初步的免疫系统，具有学习和记忆功能。这与人脑记住某一领域某一问题的知识、方法，以后对类似或同样问题就很容易解决的道理是一样的。但是当受人类大脑结构的启发而创造出来的人工神经网络比较的时候，人工免疫识别系统的浅度学习的特性，使得提出的SCLM算法不具有自动特征提取的能力，在算法的实际应用环境中，需要手工提取好相应的特征，供人工免疫识别算法学习，这使得手工特征提取能力的好坏直接决定了算法的性能，在工业环境下，这种方式无疑是成本高昂和难以实现的。此外，我们必须看到，SCLM免疫识别算法的动态特性，表现在对样本特征发生迁移的一定范围内具有自动调整记忆细胞的能力，这是一种连续学习能力，但是在由于不具备识别新类抗原的能力，这种识别能力是有限度的，具有一定的局限性。</p><p>人体内，免疫系统和神经系统是系统工作的，是一个有机整体，相辅相成。在这一章节中，我们从人体内的神经系统和免疫系统的机理出发，针对目前的神经网络算法的“灾难性遗忘”问题和人工免疫系统的浅度学习和不具备特征提取能力的问题，提出了一种基于免疫记忆功能的具有特征提取能力的增量学习算法。</p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 前沿 </tag>
            
            <tag> 技术前沿 </tag>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>南柯一梦还是方兴未艾 | 互联网没有历史！</title>
      <link href="/2022/12/03/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/hu-lian-wang-wei-shi-me-mei-you-li-shi/"/>
      <url>/2022/12/03/qi-ta-huo-zhe-jiao-du-li-ling-yu/ke-ji-hu-lian-wang-lun-tan/hu-lian-wang-wei-shi-me-mei-you-li-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="哪一年是互联网元年？"><a href="#哪一年是互联网元年？" class="headerlink" title="哪一年是互联网元年？"></a>哪一年是互联网元年？</h1><h1 id="门户网站和浏览器构成了互联网最初的样子"><a href="#门户网站和浏览器构成了互联网最初的样子" class="headerlink" title="门户网站和浏览器构成了互联网最初的样子"></a>门户网站和浏览器构成了互联网最初的样子</h1><p>雅虎、IE浏览器等早期元老，都已经退出了历史舞台。<br>那时候的网页还是静态的网页，当90年HTML超文本标记语言横空出世以后，到现在还是难以撼动，HTML就是纯文本文件，在将其中加了各种标记，使之产生连接、加粗、换行等各种效果。<br>DOM是文件对象模型，定义了HTML文件的标准格式</p><h1 id="静态页面变成动态页面"><a href="#静态页面变成动态页面" class="headerlink" title="静态页面变成动态页面"></a>静态页面变成动态页面</h1><p>从静态页面变成能播放动态画面，需要将一帧帧制作的画面呈现出来，最早是由Java实现的，但是Java播放动态的画面速度很慢要下载程序，很麻烦；<br>因此Java语言基础上生成了JavaScript，后续又用JQuery集成了JavaScript的常用方法；<br>另一方面，flash也问世，并在2000-2010年代取得了很大的成就；<br>当flash逐渐式微，Javascript仍然保持了强大的生命力；<br>2015年之后，node.js等新环境的产生，让Javascript不仅仅是前端的语言，可以独立于服务端部署，整个互联网生态在像前端转移</p><p># </p><h1 id="互联网有哪些Java“钱景”领域？"><a href="#互联网有哪些Java“钱景”领域？" class="headerlink" title="互联网有哪些Java“钱景”领域？"></a>互联网有哪些Java“钱景”领域？</h1><p><a href="https://user.guancha.cn/main/content?id=621134" target="_blank" rel="noopener">私募基金要上系统？来看看这20款全球资管系统大比拼_风闻 (guancha.cn)</a></p><h1 id="使用Java的几个主要行业"><a href="#使用Java的几个主要行业" class="headerlink" title="使用Java的几个主要行业"></a>使用Java的几个主要行业</h1><p><a href="https://blog.didispace.com/java-developer-2020-data/" target="_blank" rel="noopener">2020 Java开发者数据分析：中国已成为 Java 第一大国 | 程序猿DD (didispace.com)</a></p><ol><li>Java 程序员主要工作在 IT 服务(42%)和金融和金融技术(44%) ，但这并不是说 Java 不用于其他行业。</li><li>专家分析金融和金融科技行业主要是金融交易所、零售银行系统、创建计算引擎、开发自主定制工具和服务，以提高公司在市场上的竞争力。金融和金融科技基本上都建立在Java，所以这里没有什么可惊讶的。</li><li>IT 服务也是如此，因为许多非 IT 公司的工资系统和库存管理服务都是基于 Java 构建的。其他行业也很有意思。</li><li>由于 Android，移动开发可能很高，所以 Java 被用在这个能力上。大数据和数据分析是非常有趣的，因为这个行业是由 Python 引领的，但是在后端可能会有一些 Java 和 JVM 语言的用途。</li><li>当然是软件开发工具。目前使用 Java 构建 JetBrains。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 前沿 </tag>
            
            <tag> 技术前沿 </tag>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为秋招没我，漫漫江湖再见 | 纪念自己三年华为梦！</title>
      <link href="/2022/12/02/3-zong-jie/hua-wei-tuan-jian-huo-dong/"/>
      <url>/2022/12/02/3-zong-jie/hua-wei-tuan-jian-huo-dong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h2 id="为什么要参加评选？"><a href="#为什么要参加评选？" class="headerlink" title="为什么要参加评选？"></a>为什么要参加评选？</h2><p>研究生入学以来，自己一直希望提高自己的各方面能力，因此也参加了一些比赛和活动，有这个机会能证明过去一段时间的成果，检验过去三年来的所得，自然是想争取住这次机会的！</p><p># </p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>犹抱琵琶半遮面 | 第四次工业革命科技树将点在哪！</title>
      <link href="/2022/12/02/2-diao-yan-xue-xi-si-kao/di-si-ci-gong-ye-ge-ming-zui-ke-neng-fa-sheng-zai-na/"/>
      <url>/2022/12/02/2-diao-yan-xue-xi-si-kao/di-si-ci-gong-ye-ge-ming-zui-ke-neng-fa-sheng-zai-na/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="有心栽花花不开，无心插柳柳成荫"><a href="#有心栽花花不开，无心插柳柳成荫" class="headerlink" title="有心栽花花不开，无心插柳柳成荫"></a>有心栽花花不开，无心插柳柳成荫</h1><h2 id="1、第四次工业革命的关键标签是“智能化”"><a href="#1、第四次工业革命的关键标签是“智能化”" class="headerlink" title="1、第四次工业革命的关键标签是“智能化”"></a>1、第四次工业革命的关键标签是“智能化”</h2><p>按照目前学术界和产业界的共识，工业1.0是蒸汽机时代，工业2.0是电气化时代，工业3.0是信息化时代，工业4.0将是智能化时代。</p><p>21世纪第二个十年涌现出的一系列技术如 4G/5G通讯、大数据、人工智能、云计算、区块链、量子计算、新能源、火箭回收技术、web3.0、3D打印、碳纤维、石墨烯等等，这都意味着我们确实处于新一轮技术革命之中。</p><p>但是这些技术遍布计算机、通讯、能源、材料、机械、航天、生物等诸多领域，究竟哪些技术起到基石作用，最终将引领着智能化时代的到来呢？</p><h2 id="2、大数据-人工智能-云计算三者相辅相成是第四次工业革命基石型技术"><a href="#2、大数据-人工智能-云计算三者相辅相成是第四次工业革命基石型技术" class="headerlink" title="2、大数据+人工智能+云计算三者相辅相成是第四次工业革命基石型技术"></a>2、大数据+人工智能+云计算三者相辅相成是第四次工业革命基石型技术</h2><p>是这样吗？</p><h2 id="3、Gartner发布的2023年十大战略技术趋势"><a href="#3、Gartner发布的2023年十大战略技术趋势" class="headerlink" title="3、Gartner发布的2023年十大战略技术趋势"></a>3、Gartner发布的2023年十大战略技术趋势</h2><p>Gartner 杰出研究副总裁 Frances Karamouzis 表示：“为了在经济动荡时期增加企业机构的盈利，首席信息官和IT高管必须在继续加快数字化转型的同时，将目光从节约成本转向新的卓越运营方式。Gartner 2023年战略技术趋势围绕优化、扩展和开拓这三大主题，这些技术能够帮助企业机构优化韧性、运营或可信度、扩展垂直解决方案和产品交付并利用新的互动形式、更加快速地响应或机会进行开拓。”<br>按照顺序分别是：</p><ol><li>可持续性(Sustainability)</li><li>元宇宙(Metaverse)</li><li>超级应用(Superapps)</li><li>自适应AI(Adaptive AI)</li><li>数字免疫系统(Digital Immune System)</li><li>应用可观测性(Applied Observability)</li><li>AI信任、风险和安全管理(Trust,Risk and Security Management)</li><li>行业云平台(Industry Cloud Platforms)</li><li>平台工程(Platforms Engineering)</li><li>无线价值实现 (Wireless Value Realization)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 前沿 </tag>
            
            <tag> 工业革命 </tag>
            
            <tag> 技术前沿 </tag>
            
            <tag> 智能化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从邮件下发开始debug | 通过消息下发平台给自己发一份邮件</title>
      <link href="/2022/12/01/1-xiang-mu/java-xiang-mu/austin-xiang-mu/cong-you-jian-xia-fa-kai-shi-debug/"/>
      <url>/2022/12/01/1-xiang-mu/java-xiang-mu/austin-xiang-mu/cong-you-jian-xia-fa-kai-shi-debug/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="1-话不多说，先拿到代码"><a href="#1-话不多说，先拿到代码" class="headerlink" title="1.话不多说，先拿到代码"></a>1.话不多说，先拿到代码</h1><p><a href="https://github.com/jlcxxzj/Austin.Messageplatform">消息下发平台项目github地址</a><br>从GitHub上拷贝下来后端代码，有一般的IDEA开发环境就能直接跑起来，这是一个前后端分离的项目，我们还需要前端才能可视化界面。<br><a href="https://github.com/jlcxxzj/Austin.Messageplatform/tree/admin">消息下发平台项目前端github地址</a></p><h1 id="2-打开界面，发送第一条短信"><a href="#2-打开界面，发送第一条短信" class="headerlink" title="2.打开界面，发送第一条短信"></a>2.打开界面，发送第一条短信</h1><p>前端发送一条信息消息<br>后端从austin.web.controller.MessageTemplateController(后端接入要发送的信息)接入<br>在接入之前修改local.properties的配置信息，改发送渠道改为自己的信息<br>“/测试发送接口” 首先通过lombok和@Builder注解的结合对MessageParam和SendRequest类用建造者模式对属性赋值（是先实例化一个新的对象的）；MessageParam构建要发送信息的String参数。SendRequest中的messageTemplateId消息模板Id:去数据库查出整个模板的信息，MessageParam则是业务自行传入的参数（重要的是接收者以及文案的参数信息），而code则代表着当前请求要执行什么业务类型的（可基于该code扩展，后面会继续聊到）。<br>然后调用austin.service.api.service中SendService接口，又转而调用实现了SendService接口的austin.service.api.impl.service中的SendServiceImpl<br> Tip：SendService接口，在这里定义了两种发送的方法，单模板单文案发送接口和单模板多文案发送接口，因为很有可能业务方是需要一次批量执行的（如果只有Single接口，那就需要多次远程调用，这样对业务而言就不太合适了）</p><h1 id="12-02修改项目，将远程的数据库连接改为本地数据库连接，修application-properties配置文件的端口即可。"><a href="#12-02修改项目，将远程的数据库连接改为本地数据库连接，修application-properties配置文件的端口即可。" class="headerlink" title="12.02修改项目，将远程的数据库连接改为本地数据库连接，修application.properties配置文件的端口即可。"></a>12.02修改项目，将远程的数据库连接改为本地数据库连接，修application.properties配置文件的端口即可。</h1><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>项目来源:Java3y</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Kafka </tag>
            
            <tag> 消息下发平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12月4号| 临时党支部活动</title>
      <link href="/2022/11/30/3-zong-jie/12-yue-4-hao-lin-shi-dang-zhi-bu-huo-dong/"/>
      <url>/2022/11/30/3-zong-jie/12-yue-4-hao-lin-shi-dang-zhi-bu-huo-dong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="主题报告"><a href="#主题报告" class="headerlink" title="主题报告"></a>主题报告</h1><p>一、11 月 18 日 13:30 宝山会场：东区 9 号楼伯时会堂 《延安精神及其新时代价值》<br>二、11 月 25 日 13:30 宝山会场：东区 9 号楼伯时会堂 《传承红色基因，创建一流大学》<br>三、<strong>12 月 5 日</strong> <strong>13:30</strong> 宝山会场：东区 9 号楼伯时会堂 《高举伟大旗帜，谱写崭新篇章——认真学习《习近平谈治国理政》第四卷</p><h1 id="临时党支部任务要求"><a href="#临时党支部任务要求" class="headerlink" title="临时党支部任务要求"></a>临时党支部任务要求</h1><h2 id="分组讨论"><a href="#分组讨论" class="headerlink" title="分组讨论"></a>分组讨论</h2><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p>截至日期12月9号，<strong>暂定12月5号</strong></p><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>视频教学+两个议题的讨论</p><p>视频教学材料<br>《习近平新时代中国特色社会主义思想学习纲要》导读、《学习党史、新中国史，增强守初心担使命的坚定自觉》、《做学习践行党章的表率》<br>各临时党支部应组织集中观看学习三个教学视频，并开展讨论。讨论要做到紧扣学习内容，主题明确。</p><p>讨论议题为<br>1）什么是共产党员的党性？党性锻炼的主要内容包括哪些方面？加强党性锻炼的途径和方法是什么？<br>2）作为新时代学生党员，预备期间应该加强自己哪些方面的锻炼，在学习、工作、生活各个方面发挥好党员的先锋模范作用？</p><h2 id="实践教学"><a href="#实践教学" class="headerlink" title="实践教学"></a>实践教学</h2><h3 id="时间-1"><a href="#时间-1" class="headerlink" title="时间"></a>时间</h3><p>截至日期12月9号，<strong>暂定12月2号</strong></p><h3 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h3><p>社会实践、志愿服务通过各种途径，组织学生预备党员开展读书沙龙、志愿活动、微党课、参观红色教育基地、主题辩论或知识竞赛等多样的实践活动，把推动党员服务意识与加强党性修养结合起来，与培育和弘扬社会主义核心价值观结合起来，与我校校训、使命愿景结合起来，与推进基层服务型党组织建设结合起来。注重凝练办学点特色，在传承的基础上有所创新。</p><h1 id="临时党支部讨论结果"><a href="#临时党支部讨论结果" class="headerlink" title="临时党支部讨论结果"></a>临时党支部讨论结果</h1><p>经过临时党支部的讨论和投票，确定12月2号，在上第三次学习当天安排分组讨论和实践教学两项议题</p><blockquote><ol><li>分组讨论：上完课以后预定101房间？那提前一天要和吴老师预定</li><li>实践教学在上海大学校史馆（东区图书馆内右侧）</li></ol></blockquote><h1 id="提交材料"><a href="#提交材料" class="headerlink" title="提交材料"></a>提交材料</h1><h2 id="1-临时党支部提交材料"><a href="#1-临时党支部提交材料" class="headerlink" title="1. 临时党支部提交材料"></a>1. 临时党支部提交材料</h2><h3 id="上海大学校史馆参观要做学习记录"><a href="#上海大学校史馆参观要做学习记录" class="headerlink" title="上海大学校史馆参观要做学习记录"></a>上海大学校史馆参观要做学习记录</h3><p>学习结束后，每各临时党支部应提交一份 <strong>1 次活动实践或志愿服务的记录，包含活动新闻稿、各学员的活动感想（每人不少于500 字），并附 1-2 张活动照片</strong>。要求如下：<br>标题为《机自学院办学点第二十一期学生预备党员培训班第 x 临时党支部实践活动总结材料》，四号字黑体；<br>正文为小四宋体，1.5倍行距。<br>word 文档命名为：《机自学院办学点第二十一期学生预备党员培训班第 x 临时党支部实践活动总结材料》。请各临时党支部书记于 2022 年 12 月 19 日下午 15 点前，将电子版材料上报给办学点负责人。</p><h3 id="专题组织生活会"><a href="#专题组织生活会" class="headerlink" title="专题组织生活会"></a>专题组织生活会</h3><p>撰写党性分析材料结束后，要求各<strong>临时党支部召开一次专题组织生活会</strong>（暂定 12 月 16 日下午，地点为上海大学宝山校区东区、嘉定校区，教室待定），开展党性分析活动，广泛开展批评与自我批评，并邀请有关辅导员参加点评。每位学员都要对照党员标准，认真自我剖析，找准自身差距，进行不少于 5 分钟的党性分析</p><h2 id="2-个人材料"><a href="#2-个人材料" class="headerlink" title="2. 个人材料"></a>2. 个人材料</h2><p>认真撰写好党性分析材料。党性分析报告应结合自身情况，切忌空谈，决不可从网上复制，要求如下：<br>字数控制在 <strong>1500 字</strong>左右，标题为《机自学院办学点第二十一期学生预备党员培训班学员党性分析报告》，四号字黑体；标题下一列：学院、姓名、学号，小四号楷体；正文为小四宋体，1.5 倍行距。党性分析材料在 2022 年 12 月 17 日前发给各临时党支部书记汇总，邮件文件命名：第 X 临时党支部党性分析材料-姓名-学号（同时提交纸质版，A4 纸打印）。</p><p>党性分析材料主要包括：查摆存在问题、剖析思想根源、提出整改措施三个部分，并落脚到提升党性修养、发挥党员先锋模范作用上来。每位学员要提交一份纸质版的党性分析报告，字数 1500 字左右。</p><p>各临时党支部书记汇总后，请于 2022 年 12 月 19 日下午 15 点前，将纸质版、电子版材料（文件夹命名为：第 X 临时党支部党性分析材料-X 人，压缩打包发送）上报给办学点负责人。</p><h1 id="安排"><a href="#安排" class="headerlink" title="安排"></a>安排</h1><ol><li>讨论议题：租借教室（101）、观看视频准备、设备连接（晓强）、学习讨论</li><li>东区图书馆校史馆参观：拍照记录、活动感想</li><li>视频：今天我们有两项议程，第一个是学习视频材料，鉴于《习近平新时代中国特色社会主义思想学习纲要》导读、《学习党史、新中国史，增强守初心担使命的坚定自觉》、《做学习践行党章的表率》每一个视频都有一个半小时，我们今天挑一个《习近平新时代中国特色社会主义思想学习纲要》来看吧。</li><li>接下来，我们进行第二项议题，两个议题的讨论，为<br>1）什么是共产党员的党性？党性锻炼的主要内容包括哪些方面？加强党性锻炼的途径和方法是什么？<br>2）作为新时代学生党员，预备期间应该加强自己哪些方面的锻炼，在学习、工作、生活各个方面发挥好党员的先锋模范作用？<br>答：党性作为一个<strong>政党固有的本质特性</strong>，是衡量党员立场和觉悟的根本准绳，也是<strong>党员立身、立业、立言、立德的基石</strong>。我们党的性质以及它在长期的革命和建设的实践中所形成的区别于其他政党的特点，就是我们党的党性，也是每一个共产党员所应具有的党性，包括以下内容:(1)坚持以马克思列宁主义、毛泽东思想为行动指南;(2)为实现共产主义远大目标奋斗终身;(3)把全心全意为人民服务作为根本宗旨;(4)自觉遵守和维护党的团结统一和组织纪律;(5)始终同人民群众保持密切的联系;(6)勇于批评与自我批评，坚持真理，修正错误。</li></ol><p>由于党在各个阶段的历史任务不同，党性要求的侧重点有所不同。在新的历史时期，党性要求：坚定不移地贯彻执行党的基本路线，在思想上、政治上同党中央保持高度一致；清正廉洁，无私奉献，自觉抵制资本主义和封建主义思想的侵蚀，正确处理国家、集体、个人利益关系，同一切损害人民利益的行为作斗争；坚持把共产主义理想同党在现阶段任务结合起来，积极投身于建设中国特色社会主义的伟大实践中去，脚踏实地做好本职工作。</p><p>广大党员必须维护党的先进性和纯洁性，坚持马克思主义理论武装，坚定对中国特色社会主义、对共产主义的信仰信念，坚定对在党的领导下实现中华民族伟大复兴中国梦的信心，坚定正确的政治方向、增强政治定力，严明政治纪律、坚持党的领导，永葆共产党员政治上的坚定，思想和行动上的先进性。<strong>党员的党性不是自发形成的，也不是组织上入党就可以保持终身的，只有经过长期接受党性教育、自觉进行党性修养，在加强党性实践中才能不断养成和坚守。</strong></p><p>首先必须要立足于现实，从我们学生的这个身份出发具体而非抽象地来谈这个问题；其次必须立足于新时代的大背景，结合时代而非抽离时代地来谈这个问题。</p><p>从大的方面来看，党的二十大的召开，深刻回答了新时代发展中国特色社会主义的一系列重大问题，我们学生党员应当认真研读，这样才能更好的发挥自身的先锋模范作用。</p><p>作为学生党员，我们可以从以下几个方面入手：</p><p>从思想上来说，学生党员应当坚定自己的共产主义信念，加强自身的理论修养和政治品格的培养，切实提高自身的思想政治素养，坚定自己的理想信念，向党中央看齐。最后将正确的思想意识传播到青年学生之中，影响青年学生，发挥自身的先锋模范作用。</p><p>从学习上来说，学生党员应当严格要求自己，用知识武装自己的头脑。作为一名学生，学习是我们最为核心的任务。我们首先应当做到努力学习自己的专业知识，不仅仅是上课认真听讲，更要在课余多多参加学术活动，并从中有所收获；其次则是将我们在课堂上所学所想具体地联系到生活中，特别是联系个人实际与社会问题，从而更好地把握课堂中学到的内容。这样积极努力的理论联系实际的态度，有利于为其他同学做出表率，带动大家刻苦学习、学以致用，营造良好的学习氛围，从而发挥自身的先锋模范作用。</p><p>在工作中，学生党员应当对同学负责、对组织负责。学生党员在工作中应当为学生办实事，处处为组织与同学的利益着想，勇于创新。就个人而言，虽然我没有加入学生会，但我依旧会积极配合其他同学的工作开展，积极向组织提出改进工作的建议，发挥自身先锋模范作用。</p><p>在生活中，学生党员应当讲党性、重品行、做表率。“一个党员就是一面旗帜”，我们应该在生活中做好模范。生活中做好模范带头作用，首先可以从自己的宿舍入手，做好宿舍卫生，将自己的宿舍摆放干净整洁；其次，学生党员应当有高尚的品德，节约水电、给老人让座，主动帮助有困难的同学，这都是我们优良品德的体现；最后，学生党员应当在生活中团结同学，不能切断自身与同学之间的联系，既能向同学虚心请教，又能用自己的力量帮助同学，形成互帮互助的良好风气，发挥自身的先锋模范作用。</p><p>十九大报告强调“青年兴则国家兴，青年强则国家强。青年一代有理想、有本领、有担当，国家就有前途，民族就有希望”。学生党员发挥自身的先锋模范作用，既是党组织对学生党员的基本要求，也是我们义不容辞的光荣使命。我们应当从思想、学习、工作以及生活中全面地发挥好先锋模范作用，这样才能在同学中树立良好的党员形象，带领大家共同进步、积极进取，为实现中国梦打下扎实的基础。</p><p><strong>每一位党员都应树立这样的观念：在组织上入党，只是一个驿站，而不是终点；在思想上完全入党，是不懈追求和艰辛跋涉的终生目标，而加强党性修养，严格自律，重视自我改造、自我完善，正是思想上入党的必由之路。</strong></p><p>两个议题：</p><ol><li>我们党中国工人阶级的先锋队的性质以及它在长期的革命和建设的实践中所逐渐形成的区别于其他政党的特点，就是中国共产党的党性。</li><li>党性是一个政党的本性，是其固有的本质特性。是衡量党员立场和觉悟的根本准绳，也是党员<strong>学习、生活、工作、表达、道德的基石</strong>。</li><li>党员的党性不是自发形成的，这需要党员长期接受党性教育、自觉进行党性修养，在加强党性实践中才能不断养成和坚守。</li><li>作为学生党员，加强党性锻炼，首先必须要立足于现实，从我们学生的这个身份出发具体而非抽象地来谈这个问题；其次必须立足于新时代的大背景，结合时代而非抽离时代地来谈这个问题。</li><li>在思想上，我们应当坚定自己的共产主义信念，加强自身的理论修养和政治品格的培养；在工作中，对同学负责、对组织负责。多为学生办实事，处处为组织与同学的利益着想，勇于创新。在生活里，重品行、做表率，团结同学，既能向同学虚心请教，又能用自己的力量帮助同学。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 活动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社团 </tag>
            
            <tag> 活动 </tag>
            
            <tag> 参观 </tag>
            
            <tag> 党史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华山论剑 | 论坛下畅所欲言</title>
      <link href="/2022/11/30/1-xiang-mu/lun-tan-xiang-mu/"/>
      <url>/2022/11/30/1-xiang-mu/lun-tan-xiang-mu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="本地项目地址"><a href="#本地项目地址" class="headerlink" title="本地项目地址"></a>本地项目地址</h1><p>本地地址：D:\javafile\Austin\预研项目\开源论坛<br>开源论坛2还没有调试</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> 论坛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos虚拟机的使用 | 将程序备份到独立的虚拟机上面去</title>
      <link href="/2022/11/30/2-diao-yan-xue-xi-si-kao/centos-xu-ni-ji-de-shi-yong/"/>
      <url>/2022/11/30/2-diao-yan-xue-xi-si-kao/centos-xu-ni-ji-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h1><h2 id="先引入一个思考，虚拟机的部署和docker的部署有什么区别呢？"><a href="#先引入一个思考，虚拟机的部署和docker的部署有什么区别呢？" class="headerlink" title="先引入一个思考，虚拟机的部署和docker的部署有什么区别呢？"></a>先引入一个思考，虚拟机的部署和docker的部署有什么区别呢？</h2><p>我的思考是虚拟机拥有独立的内存的存储空间，是独立的空间，而docker本质上是一个程序，是一个进程，但是这个进程又较好的处理了底层的隔离性质，使得不会受操作系统的影响。</p><h1 id="在自己的电脑上部署一台自己的虚拟机"><a href="#在自己的电脑上部署一台自己的虚拟机" class="headerlink" title="在自己的电脑上部署一台自己的虚拟机"></a>在自己的电脑上部署一台自己的虚拟机</h1><h2 id="我使用的时2020年版的CentOS-7-64-位，2022年末已经是最新版的，如果要下最新版的可以去官网下载最新版本-安装教程："><a href="#我使用的时2020年版的CentOS-7-64-位，2022年末已经是最新版的，如果要下最新版的可以去官网下载最新版本-安装教程：" class="headerlink" title="我使用的时2020年版的CentOS 7 64 位，2022年末已经是最新版的，如果要下最新版的可以去官网下载最新版本,安装教程："></a>我使用的时2020年版的CentOS 7 64 位，2022年末已经是最新版的，如果要下最新版的可以去官网下载最新版本,安装教程：</h2><p><a href="https://blog.csdn.net/BADAO_LIUMANG_QIZHI/article/details/104803494" target="_blank" rel="noopener">(62条消息) CentOS7 64位下载配置与安装教程(超详细图文教程)_霸道流氓气质的博客-CSDN博客</a><br>按照教程安装完毕以后就可以使用注册的账号登录自己的虚拟机了；<br>而那些Linux的指令也可以用上 了，这边再回顾一下之前的Linux知识；</p><h2 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h2><p>熟悉我的编程经历的人可能知道，当我在经历了本科断断续续的学习C语言和Java的知识，当我在读研以后确定工作方向以后，我对计算机的了解还处于比一知半解还一知半解的阶段，非计算机科班对计算机知识的匮乏让好不容易接触到的一点关于编程的知识很容易就忘的九霄云外了。没有掌握好计算机知识的基础，自上而下的学习，当自己好不容易以为搭好了基础的知识框架，建立好计算机的大厦，只需要往里面填充新的技术栈时，一个突如其来的之前没有掌握的基础知识，让自己的知识框架便轰然倒坍，又得重新构建，这个过程周而复始，而自己身边又没有能理解到我的学习状态，帮我理清楚脉络的好兄弟，因此只有一点点往计算机的大厦下探，不断推倒重来，终于，在步入研三的那个暑假，终于结束了这个痛苦的过程，在计算机的根基上搭建好了自己的知识框架。以后任何新的技术栈还是成为代码屎山的应用，都能确定他所处的位置了；当然，知道的越多，不知道的东西也越多，但是经历过这个阶段的自己，早已“轻舟已过万重山”了。</p><p>当我度过了那个探底的通过过程以后，之前学习的几个小项目突然就不再是云里雾里的了，代码逻辑、模块功能、环境搭建、资源下载、bug解决都有一条线在告诉自己，或许这样做，可以把这个问题解决了。</p><p>于是乎，我想再找找项目做，这次要做的项目不是之前的漫无目的，什么商城项目、医疗平台等…….</p><p>一直就有一种归类和分享的欲望，因此做一个知识总结和分享的平台就成了我希望点开的自己能独立修改开源项目的第一个方向。</p><h1 id="开始自己接触到的是论坛而不是项目"><a href="#开始自己接触到的是论坛而不是项目" class="headerlink" title="开始自己接触到的是论坛而不是项目"></a>开始自己接触到的是论坛而不是项目</h1><p>需求导向，当我想做归类和分享的时候，凭感觉找到的关键词是论坛，于是在B站上我就搭建和修改了第一个独立项目，论坛项目</p><p>项目地址：<a href="https://github.com/codedrinker/community">https://github.com/codedrinker/community</a><br>B站学习地址为：<br><a href="https://www.bilibili.com/video/BV1r4411r7au/?spm_id_from=333.788.video.desc.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1r4411r7au/?spm_id_from=333.788.video.desc.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>而在本地的路径为D:\javafile\Austin\预研项目\开源论坛</p><p>在这个项目里，用到的技术栈为：<br>Springboot<br>H2数据库<br>Bootstrap前端渲染<br>templates前端显示</p><p>可以发现，这个项目用到的技术栈整体而言比较简单和老，但是当这个项目搭建起来以后，能够在论坛里面发言的时候还是成就感满满的</p><h1 id="为什么从论坛迁移到博客"><a href="#为什么从论坛迁移到博客" class="headerlink" title="为什么从论坛迁移到博客"></a>为什么从论坛迁移到博客</h1><p>本地地址：D:\javafile\Austin\预研项目\开源论坛<br>在做论坛的时候，自己修改的项目的缺点也逐渐暴露了出来，体现在以下几点：</p><ol><li>页面太过古老；由于技术栈比较老，整个论坛的页面呈现着10年的观感，当跑通项目以后的成就感慢慢消失之后，对这个项目的兴趣也就没有那么大了；</li><li>知识没有办法分类；由于是基础的版本，有互动性，却对自己发布的贴文不具有归档和分类功能，再次寻找就变的很困难；</li></ol><p>于是，当看到其他大佬，内容精彩，界面酷炫的博客以后，诞生了做自己博客的想法</p><h1 id="首先做的是平铺直叙的博客"><a href="#首先做的是平铺直叙的博客" class="headerlink" title="首先做的是平铺直叙的博客"></a>首先做的是平铺直叙的博客</h1><p>教学视频<br><a href="https://www.bilibili.com/video/BV1nE411r7TF/?spm_id_from=333.788.recommend_more_video.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener"><strong>https://www.bilibili.com/video/BV1nE411r7TF/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</strong></a><br>项目出处<br><a href="https://github.com/WuDaoJiuXiao/jx-blog"><strong>https://github.com/WuDaoJiuXiao/jx-blog</strong></a></p><p>技术栈：<br>Springboot<br>MYSQL数据库<br>Mybatis的orm<br>Bootstrap前端渲染<br>templates前端显示</p><p>选择的原因是：</p><ol><li><strong>后台登录和web部分分离的好，给人耳目一心的感觉</strong></li><li><strong>后台查看日志方便，用于统计后端的操作记录，方便debug,数据库操作清晰明了</strong></li></ol><p>缺点：<br>唯一的缺点就是前端显示页面不够酷炫</p><h1 id="果断上马主题好看酷炫的Hexo项目"><a href="#果断上马主题好看酷炫的Hexo项目" class="headerlink" title="果断上马主题好看酷炫的Hexo项目"></a>果断上马主题好看酷炫的Hexo项目</h1><p>这个项目一上马确实给人耳目一新的感觉，也确实方便增添文章，分享的搭建过程也很多了，目前的博客也是用的这个。<br>缺点：</p><ol><li>我的初心是一个后端开发工程师，我需要的不仅仅是一个展示页面的工具，我要的是前后端全流程的搭建过程，Hexo这种简单部署还是让我觉得少了点什么</li><li>上线部署的时候要传到github，由于被墙经常传不上去，使得整个部署过程很麻烦</li><li>文件一多了以后，大小太大，PUSH速度慢，还容易失败</li><li></li></ol><h1 id="新的Springboot-Vue的博客"><a href="#新的Springboot-Vue的博客" class="headerlink" title="新的Springboot+Vue的博客"></a>新的Springboot+Vue的博客</h1><p>个人博客为springboot+vue,问题是，vue文件之间的跳转存在问题，调试结果转段位是路径问题，在路径前多加了/,后续有需要可debug。路径为：<strong>D:\javafile\Austin\预研项目\个人博客</strong><br>之前没有跑通，vue文件的路径有问题，项目的BUG过多，就没有一直做下去</p><p><strong>而最近看到一个不错的Springboot+Vue的博客项目，有空可以学习以下：</strong><br>学习地址为：<br><a href="https://www.bilibili.com/video/BV1oP411T7hA/?spm_id_from=333.880.my_history.page.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1oP411T7hA/?spm_id_from=333.880.my_history.page.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>项目地址为：<br><a href="https://github.com/linhaojun857/aurora">https://github.com/linhaojun857/aurora</a><br>在本地文件夹的项目源码：<br>D:\javafile\Austin\预研项目\个人博客-还木有调</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内核 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客的版本迭代 | 做一个适合你的专属博客吧！</title>
      <link href="/2022/11/30/1-xiang-mu/bo-ke-xiang-mu/ge-ren-bo-ke-de-bu-tong-ban-ben/"/>
      <url>/2022/11/30/1-xiang-mu/bo-ke-xiang-mu/ge-ren-bo-ke-de-bu-tong-ban-ben/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="为什么想做个人博客？"><a href="#为什么想做个人博客？" class="headerlink" title="为什么想做个人博客？"></a>为什么想做个人博客？</h1><p>熟悉我的编程经历的人可能知道，当我在经历了本科断断续续的学习C语言和Java的知识，当我在读研以后确定工作方向以后，我对计算机的了解还处于比一知半解还一知半解的阶段，非计算机科班对计算机知识的匮乏让好不容易接触到的一点关于编程的知识很容易就忘的九霄云外了。没有掌握好计算机知识的基础，自上而下的学习，当自己好不容易以为搭好了基础的知识框架，建立好计算机的大厦，只需要往里面填充新的技术栈时，一个突如其来的之前没有掌握的基础知识，让自己的知识框架便轰然倒坍，又得重新构建，这个过程周而复始，而自己身边又没有能理解到我的学习状态，帮我理清楚脉络的好兄弟，因此只有一点点往计算机的大厦下探，不断推倒重来，终于，在步入研三的那个暑假，终于结束了这个痛苦的过程，在计算机的根基上搭建好了自己的知识框架。以后任何新的技术栈还是成为代码屎山的应用，都能确定他所处的位置了；当然，知道的越多，不知道的东西也越多，但是经历过这个阶段的自己，早已“轻舟已过万重山”了。</p><p>当我度过了那个探底的通过过程以后，之前学习的几个小项目突然就不再是云里雾里的了，代码逻辑、模块功能、环境搭建、资源下载、bug解决都有一条线在告诉自己，或许这样做，可以把这个问题解决了。</p><p>于是乎，我想再找找项目做，这次要做的项目不是之前的漫无目的，什么商城项目、医疗平台等…….</p><p>一直就有一种归类和分享的欲望，因此做一个知识总结和分享的平台就成了我希望点开的自己能独立修改开源项目的第一个方向。</p><h1 id="开始自己接触到的是论坛而不是项目"><a href="#开始自己接触到的是论坛而不是项目" class="headerlink" title="开始自己接触到的是论坛而不是项目"></a>开始自己接触到的是论坛而不是项目</h1><p>需求导向，当我想做归类和分享的时候，凭感觉找到的关键词是论坛，于是在B站上我就搭建和修改了第一个独立项目，论坛项目</p><p>项目地址：<a href="https://github.com/codedrinker/community">https://github.com/codedrinker/community</a><br>B站学习地址为：<br><a href="https://www.bilibili.com/video/BV1r4411r7au/?spm_id_from=333.788.video.desc.click&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1r4411r7au/?spm_id_from=333.788.video.desc.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>而在本地的路径为D:\javafile\Austin\预研项目\开源论坛</p><p>在这个项目里，用到的技术栈为：<br>Springboot<br>H2数据库<br>Bootstrap前端渲染<br>templates前端显示</p><p>可以发现，这个项目用到的技术栈整体而言比较简单和老，但是当这个项目搭建起来以后，能够在论坛里面发言的时候还是成就感满满的</p><h1 id="为什么从论坛迁移到博客"><a href="#为什么从论坛迁移到博客" class="headerlink" title="为什么从论坛迁移到博客"></a>为什么从论坛迁移到博客</h1><p>本地地址：D:\javafile\Austin\预研项目\开源论坛<br>在做论坛的时候，自己修改的项目的缺点也逐渐暴露了出来，体现在以下几点：</p><ol><li>页面太过古老；由于技术栈比较老，整个论坛的页面呈现着10年的观感，当跑通项目以后的成就感慢慢消失之后，对这个项目的兴趣也就没有那么大了；</li><li>知识没有办法分类；由于是基础的版本，有互动性，却对自己发布的贴文不具有归档和分类功能，再次寻找就变的很困难；</li></ol><p>于是，当看到其他大佬，内容精彩，界面酷炫的博客以后，诞生了做自己博客的想法</p><h1 id="首先做的是平铺直叙的博客"><a href="#首先做的是平铺直叙的博客" class="headerlink" title="首先做的是平铺直叙的博客"></a>首先做的是平铺直叙的博客</h1><p>教学视频<br><a href="https://www.bilibili.com/video/BV1nE411r7TF/?spm_id_from=333.788.recommend_more_video.0&vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener"><strong>https://www.bilibili.com/video/BV1nE411r7TF/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</strong></a><br>项目出处<br><a href="https://github.com/WuDaoJiuXiao/jx-blog"><strong>https://github.com/WuDaoJiuXiao/jx-blog</strong></a></p><p>技术栈：<br>Springboot<br>MYSQL数据库<br>Mybatis的orm<br>Bootstrap前端渲染<br>templates前端显示</p><p>选择的原因是：</p><ol><li><strong>后台登录和web部分分离的好，给人耳目一心的感觉</strong></li><li><strong>后台查看日志方便，用于统计后端的操作记录，方便debug,数据库操作清晰明了</strong></li></ol><p>缺点：<br>唯一的缺点就是前端显示页面不够酷炫</p><h1 id="果断上马主题好看酷炫的Hexo项目"><a href="#果断上马主题好看酷炫的Hexo项目" class="headerlink" title="果断上马主题好看酷炫的Hexo项目"></a>果断上马主题好看酷炫的Hexo项目</h1><p>这个项目一上马确实给人耳目一新的感觉，也确实方便增添文章，分享的搭建过程也很多了，目前的博客也是用的这个。<br>缺点：</p><ol><li>我的初心是一个后端开发工程师，我需要的不仅仅是一个展示页面的工具，我要的是前后端全流程的搭建过程，Hexo这种简单部署还是让我觉得少了点什么</li><li>上线部署的时候要传到github，由于被墙经常传不上去，使得整个部署过程很麻烦</li><li>文件一多了以后，大小太大，PUSH速度慢，还容易失败</li><li></li></ol><h1 id="新的Springboot-Vue的博客"><a href="#新的Springboot-Vue的博客" class="headerlink" title="新的Springboot+Vue的博客"></a>新的Springboot+Vue的博客</h1><p>个人博客为springboot+vue,问题是，vue文件之间的跳转存在问题，调试结果转段位是路径问题，在路径前多加了/,后续有需要可debug。路径为：<strong>D:\javafile\Austin\预研项目\个人博客</strong><br>之前没有跑通，vue文件的路径有问题，项目的BUG过多，就没有一直做下去</p><p><strong>而最近看到一个不错的Springboot+Vue的博客项目，有空可以学习以下：</strong><br>学习地址为：<br><a href="https://www.bilibili.com/video/BV1oP411T7hA/?spm_id_from=333.880.my_history.page.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1oP411T7hA/?spm_id_from=333.880.my_history.page.click&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>项目地址为：<br><a href="https://github.com/linhaojun857/aurora">https://github.com/linhaojun857/aurora</a><br>在本地文件夹的项目源码：<br>D:\javafile\Austin\预研项目\个人博客-还木有调</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卫星洋口| 不一样的视角</title>
      <link href="/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/hang-pai/wei-xing-yang-kou/"/>
      <url>/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/hang-pai/wei-xing-yang-kou/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="BGM"><a href="#BGM" class="headerlink" title="BGM"></a>BGM</h1><p>BGM：景天-护甲 麦振鸿<br><a href="https://www.bilibili.com/video/BV17P4y1E7hx/?spm_id_from=pageDriver&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV17P4y1E7hx/?spm_id_from=pageDriver&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a><br>BGM：故乡的原风景-宗次郎<br><a href="https://www.bilibili.com/video/BV1hq4y1k7dc/?spm_id_from=pageDriver&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1hq4y1k7dc/?spm_id_from=pageDriver&amp;vd_source=adc8ab19a7ced8573b74879e4d41557b</a></p><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1>]]></content>
      
      
      <categories>
          
          <category> 兴趣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
            <tag> 卫星 </tag>
            
            <tag> 中国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AIGC开源AI绘画工具部署教程 |</title>
      <link href="/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/ren-gong-zhi-neng-mo-xing/aigc-kai-yuan-ai-hui-hua-gong-ju-bu-shu-jiao-cheng/"/>
      <url>/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/ren-gong-zhi-neng-mo-xing/aigc-kai-yuan-ai-hui-hua-gong-ju-bu-shu-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="学习地址"><a href="#学习地址" class="headerlink" title="学习地址"></a>学习地址</h1><p><a href="https://cgexe.com/39458/" target="_blank" rel="noopener">Stable Diffusion 开源AI绘画工具部署教程&amp;一键启动_可动程序 (cgexe.com)</a><br><a href="https://www.youtube.com/watch?v=DWmWwYsPfKs&t=610s" target="_blank" rel="noopener">用AI画图赚钱，让计算机成为你的金矿 - YouTube</a><br><a href="https://zhuanlan.zhihu.com/p/557133689" target="_blank" rel="noopener">可以单机跑的AI绘画模型–Stable-Diffusion相关资料 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> AIGC </tag>
            
            <tag> Stable Diffusion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝叶斯公式的前世今生大| 为什么这个简单的公式这么难理解</title>
      <link href="/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/"/>
      <url>/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="1-贝叶斯公式的定义"><a href="#1-贝叶斯公式的定义" class="headerlink" title="1.贝叶斯公式的定义"></a>1.贝叶斯公式的定义</h1><p><a href="https://zhuanlan.zhihu.com/p/366454777" target="_blank" rel="noopener">贝叶斯公式简介及示例讲解 - 知乎 (zhihu.com)</a><br><img src="//github.com/jlcxxzj/blog.github.io/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/da209350-e173-11ed-881e-294a20de6020.jpeg?v=1&type=image" alt></p><h3 id="从中我们可以发现从定义上来说贝叶斯公式并不复杂，但是如何结合具体场景具体分析，应用贝叶斯的思想，仍然是一个具有挑战性的问题。"><a href="#从中我们可以发现从定义上来说贝叶斯公式并不复杂，但是如何结合具体场景具体分析，应用贝叶斯的思想，仍然是一个具有挑战性的问题。" class="headerlink" title="从中我们可以发现从定义上来说贝叶斯公式并不复杂，但是如何结合具体场景具体分析，应用贝叶斯的思想，仍然是一个具有挑战性的问题。"></a>从中我们可以发现从定义上来说贝叶斯公式并不复杂，但是如何结合具体场景具体分析，应用贝叶斯的思想，仍然是一个具有挑战性的问题。</h3><p><img src="//github.com/jlcxxzj/blog.github.io/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/e291d490-e173-11ed-881e-294a20de6020.jpeg?v=1&type=image" alt><br> 对于证据，即无论所求事件A如何，事件B的可能性，一般通过联合分布求边缘分布或者从离散角度的（全概率公式）来计算。而先验概率，是目前已被认知的一件事情出现的可能性，被认为是当前的“真理”，和频率派不同，贝叶斯派一开始不奢求由大量的样本来估计总体的分布，而是希望通过少量的数据给出一个不是那么可靠的“真理”，在通过新的观察数据不断去学习，从而优化这一个过程。</p><h2 id="贝叶斯求概率的示例"><a href="#贝叶斯求概率的示例" class="headerlink" title="贝叶斯求概率的示例"></a>贝叶斯求概率的示例</h2><p> <img src="//github.com/jlcxxzj/blog.github.io/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/774c19e0-e176-11ed-881e-294a20de6020.jpeg?v=1&type=image" alt><br> <img src="//github.com/jlcxxzj/blog.github.io/2022/11/30/qi-ta-huo-zhe-jiao-du-li-ling-yu/gao-deng-shu-xue/bei-xie-si-gong-shi-wei-shi-me-zhe-me-nan-li-jie/7c41c8f0-e176-11ed-881e-294a20de6020.jpeg?v=1&type=image" alt></p><h1 id="2-贝叶斯公式在机器学习上的应用"><a href="#2-贝叶斯公式在机器学习上的应用" class="headerlink" title="2.贝叶斯公式在机器学习上的应用"></a>2.贝叶斯公式在机器学习上的应用</h1><p> 贝叶斯公式的难理解，不是在套公式计算，而是理解这种思想，并将这种思想发散到其他领域，而这无疑是困难的。首先的问题是如何将物理环境下的场景抽象为可理解的贝叶斯的估计场景，也就是如何建立现实和抽象环境的对应，物理和数学的匹配。<br> <strong>其次，要理解，在机器学习中，贝叶斯被用于分类，而贝叶斯分类的原理部分具有和贝叶斯概率不一样的理解方式</strong><br> 朴素贝叶斯分类，即将某个样本分类为一类的概率，求的是概率最大值<br> <a href="https://zhuanlan.zhihu.com/p/70456350" target="_blank" rel="noopener">机器学习之6——贝叶斯分类器(Bayes Classifier) - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贝叶斯学派 </tag>
            
            <tag> 贝叶斯公式 </tag>
            
            <tag> 频率学派 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消息管理平台（1） | 我有那么多消息要收发吗？</title>
      <link href="/2022/11/30/1-xiang-mu/java-xiang-mu/austin-xiang-mu/austin-xiang-mu/"/>
      <url>/2022/11/30/1-xiang-mu/java-xiang-mu/austin-xiang-mu/austin-xiang-mu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="1-先分析需求"><a href="#1-先分析需求" class="headerlink" title="1.先分析需求"></a>1.先分析需求</h1><p>信息是这个时代的最本质的特征，各种渠道的信息来源，让我们应接不暇。<br>在工作中，很多时候我们不止在被动的接收信息，也有很多消息下发的场景，社区工作人员给每一位居民发送节日问候、公司老板给每位员工发放假通知（不太可能）、开网店的小王要给粉丝发优惠券、平台推送广告给目标群体······。在这些场景下，作为消息发送方，有大量的发送各种渠道消息的需求，而又不可能手工完成的；有人会说，不是有群发短信功能可以实现，那如果小王不止在发手机消息呢，他也想QQ、微信、小红书通知到每一位粉丝呢？<br>计算机的目的是要解放双手，那这就是社会的需求。</p><h1 id="2-核心功能"><a href="#2-核心功能" class="headerlink" title="2.核心功能"></a>2.核心功能</h1><p>austin项目是<strong>消息推送平台</strong>的实现，它的<strong>核心功能</strong>：统一的接口发送各种类型消息，对消息生命周期全链路追踪<br><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/1285871/1648816455443-f13e4123-7084-4152-bb3f-4c4a98b1aa37.jpeg" alt><br><strong>项目出现意义</strong>：只要公司内有发送消息的需求，都应该要有类似austin的项目，对各类消息进行统一发送处理。这有利于对功能的收拢，以及提高业务需求开发的效率<br><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/1285871/1648816455480-a614eda4-60bf-45c5-8bae-3d56221f520a.jpeg" alt></p><h1 id="3-系统项目架构"><a href="#3-系统项目架构" class="headerlink" title="3.系统项目架构"></a>3.系统项目架构</h1><p>austin项目<strong>核心流程</strong>：austin-api接收到发送消息请求，直接将请求进MQ。austin-handler消费MQ消息后由各类消息的Handler进行发送处理<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1285871/1648816455487-4b7c0596-2c47-4047-8d3b-ba0f5fb69f71.png" alt><br><strong>Question</strong> ：为什么发个消息需要MQ？</p><p><strong>Answer</strong>：发送消息实际上是调用各个服务提供的API，假设某消息的服务超时，austin-api如果是直接调用服务，那存在<strong>超时</strong>风险，拖垮整个接口性能。MQ在这是为了做异步和解耦，并且在一定程度上抗住业务流量。</p><p><strong>Question</strong>：能简单说下接入层做了什么事吗？</p><p><strong>Answer</strong>：<br><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/1285871/1648816455463-bcf3ef2e-5ec4-452e-b8a2-5a263474d9d5.jpeg" alt><br><strong>Question</strong>：austin-stream和austin-datahouse的作用？</p><p><strong>Answer</strong>：austin-handler在发送消息的过程中会做些<strong>通用业务处理</strong>以及<strong>发送消息</strong>，这个过程会产生大量的日志数据。日志数据会被收集至MQ，由austin-stream流式处理模块进行消费并最后将数据写入至austin-datahouse</p><p><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/1285871/1648816455469-ea061a57-7948-415c-b930-5f368703a228.jpeg" alt><br><strong>Question</strong>：austin-admin和austin-web和austin-cron的作用？</p><p><strong>Answer</strong>：autsin-admin是austin项目的前端项目，可通过它实现对管理消息以及查看消息下发的情况，而austin-web则是提供相关的接口给到austin-admin进行调用（austin项目是前后端分离的）</p><p>业务方可操作austin-admin管理后台调用austin-web创建<strong>定时</strong>发送消息，austin-cron就承载着定时任务处理的工作</p><h1 id="技术探索"><a href="#技术探索" class="headerlink" title="技术探索"></a>技术探索</h1><p><a href="https://blog.didispace.com/nacos-yuanli-1/" target="_blank" rel="noopener">Nacos配置中心原理 | 程序猿DD (didispace.com)</a></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>项目来源:Java3y</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Kafka </tag>
            
            <tag> 消息下发平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工欲善其事必先利其器| 这些工具用起来吧</title>
      <link href="/2022/11/29/2-diao-yan-xue-xi-si-kao/tool/tool/"/>
      <url>/2022/11/29/2-diao-yan-xue-xi-si-kao/tool/tool/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="书写类"><a href="#书写类" class="headerlink" title="书写类"></a>书写类</h1><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><p><a href="https://markdown.com.cn/basic-syntax/blockquotes.html" target="_blank" rel="noopener">Markdown官方文档</a><br><a href="https://blog.didispace.com/markdown-convert-to-weixin/" target="_blank" rel="noopener">如何将Markdown文章轻松地搬运到微信公众号并完美地呈现代码内容 | 程序猿DD (didispace.com)</a><br><a href="https://blog.didispace.com/blog-tools-1/" target="_blank" rel="noopener">博客搭建攻略（一）：平台选择 | 程序猿DD (didispace.com)</a><br><a href="https://blog.didispace.com/blog-tools-2/" target="_blank" rel="noopener">博客搭建攻略（二）：工具推荐 | 程序猿DD (didispace.com)</a><br><a href="https://blog.didispace.com/tj-opensource-markdown-editor-milkdown/" target="_blank" rel="noopener">推荐一款超好用的Markdown编辑器 | 程序猿DD (didispace.com)</a><br><a href="https://www.leejean.top/article/48" target="_blank" rel="noopener">Gitee+PicGo搭建图床 | LeeBlog (leejean.top)</a></p><h1 id="创造收益"><a href="#创造收益" class="headerlink" title="创造收益"></a>创造收益</h1><p><a href="https://blog.didispace.com/blog-tools-3/" target="_blank" rel="noopener">博客搭建攻略（三）：创造收益 | 程序猿DD (didispace.com)</a><br><a href="https://blog.didispace.com/blog-10000000-pv/" target="_blank" rel="noopener">独立博客，从零到千万访问，这三年我都做了什么 | 程序猿DD (didispace.com)</a></p><h1 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h1><p><a href="https://blog.didispace.com/zilv-and-jianchi/" target="_blank" rel="noopener">你这辈子最引以为傲的是什么？ | 程序猿DD (didispace.com)</a></p><h1 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h1><p><a href="https://www.huihuige.xyz/%e7%94%9f%e6%b4%bb%e5%b8%b8%e8%af%86/%e7%94%b5%e8%84%91%e5%a5%bd%e7%94%a8%e5%b0%8f%e5%b7%a5%e5%85%b7%e5%8f%8a%e5%bf%ab%e6%8d%b7%e9%94%ae.html" target="_blank" rel="noopener">电脑好用小工具及快捷键电脑好用小工具及快捷键 - 辉辉的魔法空间 (huihuige.xyz)</a></p><h1 id="java后端开发"><a href="#java后端开发" class="headerlink" title="java后端开发"></a>java后端开发</h1><ol><li><a href="https://pdai.tech/md/java/basic/java-basic-oop.html" target="_blank" rel="noopener">Java全栈知识体系</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzU4NzA3MTc5Mg==&mid=2247485892&idx=1&sn=9b1e9ec6847f221c149d33e8c1d07dd0&chksm=fdf0e19bca87688dd459173312a0cd2f090d10257a9845556c5dc666d584d9d16c6982684cd3&scene=178&cur_album_id=2137264927726764033#rd" target="_blank" rel="noopener">java3y的对线面试官</a></li><li><a href="https://blog.didispace.com/spring-boot-learning-2x/" target="_blank" rel="noopener">Spring Boot 2.x基础教程 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/intellij-idea-keyboard-shortcuts/" target="_blank" rel="noopener">我最常用的IntelliJ IDEA快捷键 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/intellij-idea-zhuangbi-top-5/" target="_blank" rel="noopener">IntelliJ IDEA插件系列：五大装逼神器 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/intellij-idea-some-features-sam-1/" target="_blank" rel="noopener">IntelliJ IDEA神器居然还有这些小技巧 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/moyu-thief-book/" target="_blank" rel="noopener">最强摸鱼神器：开着IDEA看股票，看小说… | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/interview-001/" target="_blank" rel="noopener">设计模式的面试题（总结最全面的一篇） | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/opensource-justauth/" target="_blank" rel="noopener">一款小而全而美的第三方登录开源组件 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/tj-opensouce-lowcode-sparrow/" target="_blank" rel="noopener">如何做一个低代码平台？这个开源项目看看！ | 程序猿DD (didispace.com)</a> </li><li><a href="https://blog.didispace.com/tj-opensource-onlineclass/" target="_blank" rel="noopener">如何快速搭建一个在线互动教室 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/tj-opensource-zaixianshipin/" target="_blank" rel="noopener">一个不错的在线影视开源项目 | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/tj-opensource-markdown2ppt-slidev/" target="_blank" rel="noopener">Slidev：用Markdown的方式来做PPT | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/tj-opensource-oa/" target="_blank" rel="noopener">开源OA办公自动化系统，看过的小伙伴都竖起大拇指！ | 程序猿DD (didispace.com)</a></li><li><a href="https://blog.didispace.com/tj-opensource-wechat/" target="_blank" rel="noopener">可能是效果最像的微信开源复刻项目 | 程序猿DD (didispace.com)</a></li><li><a href="https://itmuch.com/" target="_blank" rel="noopener">周立的博客 - 关注Spring Cloud、Docker (itmuch.com)</a></li><li><a href="https://www.leejean.top/article/6" target="_blank" rel="noopener">https://www.leejean.top/article/6</a></li><li><a href="https://qiucode.cn/?from=www.bedebug.com" target="_blank" rel="noopener">秋码分享 | 一个游离于山间之上的Java爱好者 (qiucode.cn)</a></li></ol><h1 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h1><p><a href="https://blog.didispace.com/devops-for-small-team/" target="_blank" rel="noopener">https://blog.didispace.com/devops-for-small-team/</a></p><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><ol><li><p>江南一点雨的前后端分离项目</p></li><li><p><a href="https://www.kancloud.cn/hanxt/vue-spring/1590656" target="_blank" rel="noopener">子模块介绍 · 【实战开发】DongBB-前后端分离RBAC权限管理系统 · 看云 (kancloud.cn)</a></p></li><li><p>低代码平台RPA</p></li><li><p>Austin消息管理平台</p></li><li><p>仿博客园论坛项目</p></li><li><p>前后端一体的基于bootstrap的个人博客项目</p></li><li><p>前后端分离的基于VUE的个人博客项目</p></li><li><p>以hexo前端展示markdown文件的人博客项目</p></li><li><p><a href="https://blog.didispace.com/tj-opensource-subtlechat/" target="_blank" rel="noopener">SpringBoot + Vue开发的网页版聊天室 | 程序猿DD (didispace.com)</a></p></li><li><p><a href="https://www.kancloud.cn/hanxt/vue-spring/1590656" target="_blank" rel="noopener">子模块介绍 · 【实战开发】DongBB-前后端分离RBAC权限管理系统 · 看云 (kancloud.cn)</a></p></li></ol><h1 id="学习大佬的博客项目"><a href="#学习大佬的博客项目" class="headerlink" title="学习大佬的博客项目"></a>学习大佬的博客项目</h1><p><a href="https://xiaoyou66.com/" target="_blank" rel="noopener">小游网 (xiaoyou66.com)</a><br><a href="https://chen-shang.github.io/" target="_blank" rel="noopener">这么些年的技术总结 (chen-shang.github.io)</a><br>*<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">闪烁之狐 (blinkfox.github.io)</a><br>*<a href="http://luokangyuan.com/" target="_blank" rel="noopener">青松一点 (luokangyuan.com)</a><br><a href="https://www.lichong.work/" target="_blank" rel="noopener">Ric‘s ’Blog | 李冲的博客 | java 前端 全栈 网络 运维工程师 程序员 的 技术分享平台 (lichong.work)</a><br><a href="https://blog.didispace.com/" target="_blank" rel="noopener">程序猿DD | Java | Spring Boot | Spring Cloud | 最新干货分享 (didispace.com)</a><br>*<a href="https://sitoi.cn/" target="_blank" rel="noopener">Sitoi</a><br><a href="https://yafine-blog.cn/" target="_blank" rel="noopener">过客～励む - 有志者事竟成 (yafine-blog.cn)</a><br><a href="https://cwlrin.wiki/" target="_blank" rel="noopener">七葉の喫茶ステラ – Ciallo～(∠・ω&lt; )⌒★ (cwlrin.wiki)</a><br><a href="http://zimug.com/#/" target="_blank" rel="noopener">字母哥博客 (zimug.com)</a><br><a href="https://styunlen.cn/" target="_blank" rel="noopener">九仞之行 – 严于律己，宽以待人，深自警省，讷言敏行 (styunlen.cn)</a><br><a href="https://arctee.cn/" target="_blank" rel="noopener">破壳Ai (arctee.cn)</a><br><a href="https://ghser.com/" target="_blank" rel="noopener">一叶三秋⚡️ - 哔哩哔哩 (゜-゜)つロ 干杯~ (ghser.com)</a><br><a href="https://www.lyr-2000.xyz/" target="_blank" rel="noopener">学习javaweb (lyr-2000.xyz)</a><br><a href="https://www.bedebug.com/" target="_blank" rel="noopener">在码圈-专注编程技术分享-代码改变未来，努力coding (bedebug.com)</a><br><a href="https://www.bedebug.com/archives/01001" target="_blank" rel="noopener">4年，从代码搬运工到架构师，成功的“催化剂”是什么? | 在码圈-专注编程技术分享-代码改变未来，努力coding (bedebug.com)</a><br><a href="https://yjblogs.cn/" target="_blank" rel="noopener">勇杰的博客 (yjblogs.cn)</a><br><a href="https://www.zhen-t.com/blog/" target="_blank" rel="noopener">Zt’s Blog (zhen-t.com)</a><br><a href="https://networkos.club/" target="_blank" rel="noopener">不明のNetWorkOS</a><br><a href="https://seayj.cn/" target="_blank" rel="noopener">SeaYJ’s Blog</a><br><a href="https://www.wujunshen.cn/posts/987247817.html" target="_blank" rel="noopener">Zookeeper - 咖啡猫 (wujunshen.cn)</a></p><h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><p><a href="https://www.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰的个人网站 - Ruan YiFeng’s Personal Website</a><br><a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod</a></p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p><a href="https://alili.tech/" target="_blank" rel="noopener">Hello Alili | 前端大爆炸! - WEB BANG! BANG!! BANG!!!</a></p><h1 id="奇趣"><a href="#奇趣" class="headerlink" title="奇趣"></a>奇趣</h1><p><a href="https://www.manction.com/" target="_blank" rel="noopener">月光海岸 (manction.com)</a><br><a href="https://www.720yun.com/u/6a025wrdu1g" target="_blank" rel="noopener">Manction的主页 ｜ 720云VR全景制作网-全景图片拍摄,3D效果图展示首选平台 (720yun.com)</a><br><a href="https://kmakise.cn/?p=114" target="_blank" rel="noopener">【翻车】固体火箭发动机A【KNSU】 - 未来道具研究所 (kmakise.cn)</a></p><h1 id="域名-服务器"><a href="#域名-服务器" class="headerlink" title="域名/服务器"></a>域名/服务器</h1><p><a href="https://kmakise.cn/?p=114" target="_blank" rel="noopener">【翻车】固体火箭发动机A【KNSU】 - 未来道具研究所 (kmakise.cn)</a></p><h1 id="springboot学习"><a href="#springboot学习" class="headerlink" title="springboot学习"></a>springboot学习</h1><p><a href="https://geek-docs.com/spring-boot/spring-boot-tutorials/crudrepository.html" target="_blank" rel="noopener">https://geek-docs.com/spring-boot/spring-boot-tutorials/crudrepository.html</a></p><h1 id="编程技巧和规范"><a href="#编程技巧和规范" class="headerlink" title="编程技巧和规范"></a>编程技巧和规范</h1><p><a href="https://blog.didispace.com/cxy-wsm-zml-1/" target="_blank" rel="noopener">https://blog.didispace.com/cxy-wsm-zml-1/</a></p><h1 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h1><p><a href="https://blog.didispace.com/ai-is-easy-by-easydl/" target="_blank" rel="noopener">最近又Get个新技能，不是全栈也能用技术倒腾点东西赚零花钱了！ | 程序猿DD (didispace.com)</a><br><a href="https://www.cbedai.net/2018/11/18/whatisnn/" target="_blank" rel="noopener">https://www.cbedai.net/2018/11/18/whatisnn/</a></p><h1 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h1><p><a href="https://www.springcloud.cc/" target="_blank" rel="noopener">Spring Cloud中文网-官方文档中文版</a></p><ul><li><a href="http://spring4all.com/" target="_blank" rel="noopener">Spring For All社区</a></li><li><a href="https://springcloud.cc/" target="_blank" rel="noopener">Spring Cloud中文网</a></li><li><a href="https://springboot.io/" target="_blank" rel="noopener">Spring Boot中文社区</a></li><li><a href="https://vim.ink/" target="_blank" rel="noopener">Vim教程网</a></li><li><a href="https://www.flyfun.site/" target="_blank" rel="noopener">飞趣社区</a></li><li><a href="https://www.itsvse.com/" target="_blank" rel="noopener">架构师<em>程序员_码农网</em>.net core c#论坛 (itsvse.com)</a></li><li><a href="https://www.1024fuli.com/" target="_blank" rel="noopener">互联网技术社区|福缘小草|程序员技术博客 (1024fuli.com)</a></li></ul><blockquote><p>互换链接请</p></blockquote><h1 id="博客内容分享参考"><a href="#博客内容分享参考" class="headerlink" title="博客内容分享参考"></a>博客内容分享参考</h1><p>准则：<br>1.做自己原创性的</p><ul><li>写别人没写过的东西</li><li>一些个人的思考</li><li>记录平时碰到但搜索不到的问题解决方案</li></ul><p><a href="https://blog.didispace.com/IntelliJ-IDEA-with-Avengers-bg/" target="_blank" rel="noopener">复仇者联盟与IntelliJ IDEA也很配哦~ | 程序猿DD (didispace.com)</a></p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><p><a href="https://www.bedebug.com/archives/learn-os-review" target="_blank" rel="noopener">https://www.bedebug.com/archives/learn-os-review</a></p><h1 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h1><p><a href="https://www.tjzzz.com/posts/3e43195a.html" target="_blank" rel="noopener">02《穷爸爸富爸爸》 罗伯特·清崎丨读书笔记 | 编程与诗|飒白的个人博客|飒白的闲话仓库|一位主播和程序员的奇妙组合体 (tjzzz.com)</a></p><h1 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h1><p><a href="https://www.tjzzz.com/posts/ea6625ec.html" target="_blank" rel="noopener">茫茫摄影路：好照片的基本三要素 | 编程与诗|飒白的个人博客|飒白的闲话仓库|一位主播和程序员的奇妙组合体 (tjzzz.com)</a></p><h1 id="素材和工具"><a href="#素材和工具" class="headerlink" title="素材和工具"></a>素材和工具</h1><p><a href="https://www.bedebug.com/links" target="_blank" rel="noopener">https://www.bedebug.com/links</a></p><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p><a href="https://www.kancloud.cn/hanxt/docker/2704628#__5" target="_blank" rel="noopener">https://www.kancloud.cn/hanxt/docker/2704628#__5</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>工具是学习新知识的利器，合适的工具让学习知识不再枯燥</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 项目 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 书写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用好玩的新技术| 好精彩的世界(Grafana )</title>
      <link href="/2022/11/29/2-diao-yan-xue-xi-si-kao/tool/yu-yan-ji-neng/"/>
      <url>/2022/11/29/2-diao-yan-xue-xi-si-kao/tool/yu-yan-ji-neng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h1 id="在消息管理平台项目中用到的普罗米修斯和Grafana"><a href="#在消息管理平台项目中用到的普罗米修斯和Grafana" class="headerlink" title="在消息管理平台项目中用到的普罗米修斯和Grafana"></a>在消息管理平台项目中用到的普罗米修斯和Grafana</h1><p><a href="https://mp.weixin.qq.com/s/MihaY_d27AX9cPWPm-H2bA" target="_blank" rel="noopener">资深用户强烈推荐最优秀的“中文”开源时序BI平台Grafana (qq.com)</a></p><h2 id="普罗米修斯"><a href="#普罗米修斯" class="headerlink" title="普罗米修斯"></a>普罗米修斯</h2><p>监控</p><h2 id="Grafana-介绍"><a href="#Grafana-介绍" class="headerlink" title="Grafana 介绍"></a>Grafana 介绍</h2><p>这是一个典型的dashboard，包含时序趋势图，Threshold（阈值）监测的Alert（告警）。</p><p>刚开始的时候的Grafana很单纯，就是一个时序BI(Business Intelligence),指<strong>用现代数据仓库技术、线上分析处理技术、数据挖掘和数据展现技术进行数据分析以实现商业价值</strong>。</p><p>Grafana最开始的定位就是一个BI（商业智能），不过它侧重于时序相关的商业智能，在IT运维圈火爆后就强势出圈了。  </p><p>这张图称为一个dashboard（报表），里面每个panel（组件）都可以单独配置。这是一个典型的dashboard，包含时序趋势图，Threshold（阈值）监测的Alert（告警）。</p><p>Grafana比较强悍的一点是，只要你的数据库性能够牛，<strong>在dashboard上显示多年数据都毫无压力，比如可以轻松加载一年的数据</strong>。</p><p><strong>（汉化尚未成功，Grafana尚需努力啊）</strong><br>时序的插件最经典的就是趋势图，我们也可以添加其它的插件，有Grafana原生的，也有社区版或者第三方公司的。</p><p>插件可以分为多种，一种是可视化插件，一种是数据源插件，还有就是数据源+可视化组合插件。我们先讨论可视化，毕竟BI就是为了“颜面”。</p><p><a href="https://grafana.com/grafana/plugins/?type=panel" target="_blank" rel="noopener">https://grafana.com/grafana/plugins/?type=panel</a></p><p>这是Grafana 插件库，多达100+可视化插件。</p><p>部分原生的可视化插件，趋势图，柱状图，统计数值，仪表盘，表格，饼图，状态图，热力图，纯文字，词云，玫瑰图等</p><p>时序分析是预测分析中最重要的任务之一。使用预测的地方数不胜数：  </p><ul><li>使用过去的销售量和相关数据序列（如天气、商品价格等）预测销售量</li><li>根据过去的模式提出库存需求建议</li><li>分析仪表数据并预测使用高峰期何时出现</li><li>您将创建一个时序模型，用来预测产品在世界各地的销售量。您将为每个地区生成单独的模型，并了解如何使用交叉预测。</li></ul><p>作为 Adventure Works Cycles 的销售分析人员，您需要预测下一年产品的销售量，特别是已要求您比较不同区域和产品线的预测值。此外，您还需要确定不同产品的销售量在一年中是否有波动。  </p><p>为了找到所需的信息，在本课程中您将按三个区域汇总公司每月的销售数据：欧洲、北美洲和太平洋地区。  </p><p>完成本课程中的任务之后，您便能回答下列问题：  </p><ul><li>不同型号自行车的销售量如何随时间变化？</li><li>这三个区域的销售模式之间是否存在差异？</li><li>我们能预测销售旺季吗？</li></ul><p>本课程可以分两部分完成：  </p><ul><li>第一部分介绍如何创建和使用时序模型的基本知识。<a href="http://technet.microsoft.com/zh-cn/jj651015.aspx" title="视频" target="_blank" rel="noopener">时序分析演示 1 部分</a></li><li>第二部分您可以学习如何使用时间系列查看器中，并会来理解时间序列模型。<a href="http://technet.microsoft.com/zh-cn/jj651016.aspx" title="视频" target="_blank" rel="noopener">时序分析演示 2部分</a><a href="http://technet.microsoft.com/zh-cn/jj651015.aspx" title="视频" target="_blank" rel="noopener"></a></li></ul><h3 id="相关资源"><a href="#相关资源" class="headerlink" title="**相关资源"></a>**相关资源</h3><p>有关更多信息，请参阅<br><a href="http://technet.microsoft.com/zh-cn/library/ms174923(v=sql.105).aspx" target="_blank" rel="noopener">http://technet.microsoft.com/zh-cn/library/ms174923(v=sql.105).aspx</a>  </p><p>注意：您还可以使用 Excel 数据挖掘外接程序中的预测工具来创建时序预测。  </p><p>使用预测工具可以根据 Excel 数据表或其他数据源中的数据进行预测，而且可以选择查看与每个预测值关联的概率。例如，如果数据包含一个日期列，另外还包含一个显示该月每天总销售量的列  </p><p>则您可以预测将来某些天的销售量。还可以指定要进行的预测天数。例如，可以预测 5 天或 30 天。<br>CodePlex 的示例数据：<a href="http://sqlserversamples.codeplex.com/" target="_blank" rel="noopener">http://sqlserversamples.codeplex.com/</a>  </p><h3 id="演练"><a href="#演练" class="headerlink" title="演练"></a><strong>演练</strong></h3><p>时序教程的完整演练可在 MSDN 上找到，网址为：<a href="http://msdn.microsoft.com/zh-cn/library/cc879271.aspx" target="_blank" rel="noopener">http://msdn.microsoft.com/zh-cn/library/cc879271.aspx</a></p><p># </p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>工具是学习新知识的利器，合适的工具让学习知识不再枯燥</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 项目 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 书写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo|Hexo-Matery主题搭建</title>
      <link href="/2022/11/29/1-xiang-mu/bo-ke-xiang-mu/hexo-matery-build/"/>
      <url>/2022/11/29/1-xiang-mu/bo-ke-xiang-mu/hexo-matery-build/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h2 id="首先感谢大佬的分享"><a href="#首先感谢大佬的分享" class="headerlink" title="首先感谢大佬的分享"></a>首先感谢大佬的分享</h2><p><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">韦阳的搭建教程</a><br><a href="https://zhuanlan.zhihu.com/p/44213627" target="_blank" rel="noopener">其他教程</a></p><p>22年9月的时候开始搭建了第一个自己的独立博客，到现在也稍见完整了。很多小伙伴应该也想过搭建一个自己的博客，网上也有一堆详细教程。我在此稍稍总结一下具体的搭建步骤，另外网上很少有修改博客源码的个性化教程，我就稍稍分享一下我的一些修改经验，更多的个性化操作需要你自己以后去摸索。</p><p>欢迎大家支持。</p><p>我不是一个前端程序员，有些东西不是很了解，写的有问题或有改进的地方请大家指出。</p><p>首先要了解一下我们搭建博客要用到的框架。Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。相信很多小伙伴写工程都写过README.md文件吧，对，就是这个格式的！写完后只需两三条命令即可将生成的网页上传到你的github上，然后别人就可以看到你的网页啦。是不是很简单？你无需关心网页源代码的具体细节，你只需要用心写好你的博客内容就行。</p><p><strong>目录结构</strong></p><ul><li>安装Node.js</li><li>添加国内镜像源</li><li>安装Git</li><li>注册Github账号</li><li>安装Hexo</li><li>连接Github与本地</li><li>写文章、发布文章</li><li>绑定域名</li><li>备份博客源文件</li><li>博客源代码下载</li><li>个性化设置（matery主题）</li><li>常见问题及解答（FAQ）</li><li>个性化设置（beantech主题，已停更）</li></ul><p>(<a href="https://www.jianshu.com/p/d5366a54a0fd" target="_blank" rel="noopener">IntelliJ IDEA连接Github - 简书 (jianshu.com)</a></p><h2 id="备份博客源文件"><a href="#备份博客源文件" class="headerlink" title="备份博客源文件"></a>备份博客源文件</h2><p>有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到github上面。</p><p>首先在github博客仓库下新建一个分支<code>hexo</code>，然后<code>git clone</code>到本地，把<code>.git</code>文件夹拿出来，放在博客根目录下。</p><p>然后<code>git branch -b hexo</code>切换到<code>hexo</code>分支，然后<code>git add .</code>，然后<code>git commit -m &quot;xxx&quot;</code>，最后<code>git push origin hexo</code>提交就行了。</p><p>当然我新建了一个仓库存放了源文件，具体效果可以看我的博客源文件仓库：</p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p><a href="https://cwlrin.wiki/" target="_blank" rel="noopener">七葉の喫茶ステラ – Ciallo～(∠・ω&lt; )⌒★ (cwlrin.wiki)</a><br><a href="https://pnkx.top/homepage" target="_blank" rel="noopener">pei你看雪 (pnkx.top)</a></p><h2 id="主题个性化设置"><a href="#主题个性化设置" class="headerlink" title="主题个性化设置"></a>主题个性化设置</h2><h3 id="matery主题"><a href="#matery主题" class="headerlink" title="matery主题"></a>matery主题</h3><p><a href="https://juejin.cn/post/6844904132608786446" target="_blank" rel="noopener">Hexo-theme-matery主题魔改记录 - 掘金 (juejin.cn)</a><br><a href="https://chen-shang.github.io/2019/08/15/hexo/hexo-theme-matery-zhu-ti-you-hua/" target="_blank" rel="noopener">hexo-theme-matery主题优化 | 这么些年的技术总结 (chen-shang.github.io)</a><br><a href="https://chen-shang.github.io/2019/08/15/hexo/hexo-theme-matery-zhu-ti-you-hua/" target="_blank" rel="noopener">hexo-theme-matery主题优化 | 这么些年的技术总结 (chen-shang.github.io)</a><br><a href="https://blog.csdn.net/kuashijidexibao/article/details/112971657?spm=1001.2014.3001.5506" target="_blank" rel="noopener">(62条消息) Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客</a><br><a href="https://yjblogs.cn/posts/Start-the-blogging-journey" target="_blank" rel="noopener">开始博客之旅 | 勇杰的博客 (yjblogs.cn)</a></p><h3 id="做出了哪些个性化设置"><a href="#做出了哪些个性化设置" class="headerlink" title="做出了哪些个性化设置"></a>做出了哪些个性化设置</h3><ol><li>在themes/matery/layout/_widget/dream.ejs中添加了梦想的语句，注释了原来放入照片的部分</li><li>themes/matery/layout/_partial/bg-cover-content.ejs切换banner图，自己加了## 每日诗词（没有成功）</li><li>添加看板娘<a href="https://blog.csdn.net/qq_36239569/article/details/104104894" target="_blank" rel="noopener">(62条消息) Hexo添加Live2D看板娘最新教程_飞萤乱入帘的博客-CSDN博客_hexo live2d</a></li><li>banner冒泡功能<a href="https://blog.csdn.net/weixin_43662760/article/details/122311008" target="_blank" rel="noopener">(62条消息) Matery主题自定义(三)页面特效_Dream_ruins的博客-CSDN博客</a></li><li>背景：<a href="https://blog.csdn.net/cungudafa/article/details/106278206" target="_blank" rel="noopener">(62条消息) hexo（matery）背景、滚动条优化+增加点击跳评论_cungudafa的博客-CSDN博客_matery轮播图</a></li><li>樱花飘动<a href="https://blog.csdn.net/kuashijidexibao/article/details/112971657" target="_blank" rel="noopener">(62条消息) Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客</a></li></ol><h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><p><a href="https://marmalade.vip/Materysettings2.html" target="_blank" rel="noopener">Hexo-Matery主题细致美化(下) | Marmalade’s Blog</a><br>类似博客：<a href="https://www.lixl.cn/" target="_blank" rel="noopener">悟尘记 - 李小龙的博客网站 (lixl.cn)</a></p><h3 id="外界访问"><a href="#外界访问" class="headerlink" title="外界访问"></a>外界访问</h3><p><a href="https://blog.csdn.net/weixin_29092579/article/details/112100678" target="_blank" rel="noopener">https://blog.csdn.net/weixin_29092579/article/details/112100678</a><br><a href="https://cloud.tencent.com/developer/article/1471071" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1471071</a><br><a href="https://xmq.plus/" target="_blank" rel="noopener">https://xmq.plus/</a></p><h3 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h3><p><a href="https://www.jianshu.com/p/c60ad2a33a1e" target="_blank" rel="noopener">https://www.jianshu.com/p/c60ad2a33a1e</a></p><h3 id="部署失败的原因"><a href="#部署失败的原因" class="headerlink" title="部署失败的原因"></a>部署失败的原因</h3><p><a href="http://biglee.top/2021/05/18/hexo-%E9%83%A8%E7%BD%B2%E4%B8%AD%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91/" target="_blank" rel="noopener">是因为node版本太高的原因</a><br><a href="https://blog.csdn.net/u013250071/article/details/81203900" target="_blank" rel="noopener">文件太大导致失败</a><br><a href="https://www.jianshu.com/p/c60ad2a33a1e" target="_blank" rel="noopener">没有清理干净deploy文件夹</a><br><a href="https://www.zhihu.com/question/363375161" target="_blank" rel="noopener">https://www.zhihu.com/question/363375161</a><br><a href="https://blog.csdn.net/weixin_38450840/article/details/80701173" target="_blank" rel="noopener">推的文件太大，改配置文件</a><br><a href="https://bbs.huaweicloud.com/blogs/307384" target="_blank" rel="noopener">少了readme.md文件</a><br><a href="https://www.jianshu.com/p/fb2b6a19436a" target="_blank" rel="noopener"># Git出错：error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054</a><br><a href="https://blog.csdn.net/qq_25333681/article/details/80879500" target="_blank" rel="noopener">卡着不动</a><br><a href="https://blog.csdn.net/vicky_yongqi/article/details/108348199" target="_blank" rel="noopener">(62条消息) 解决git报错：‘fatal: unable to access ‘https://XXX: Failed onnect to github. com port 443: Timed out_vicky_yongqi的博客-CSDN博客_fatal: unable to access 443</a></p><h3 id="个性化matery"><a href="#个性化matery" class="headerlink" title="个性化matery"></a>个性化matery</h3><p><a href="https://yafine-blog.cn/posts/12b4.html" target="_blank" rel="noopener">Hexo+Github 博客搭建之 Matery 主题个性化修改篇（二） | 过客～励む (yafine-blog.cn)</a><br><a href="https://seayj.cn/articles/33818/?utm_source=wechat_session&utm_medium=social&utm_oi=744634013838237696" target="_blank" rel="noopener">hexo[Matery] 玩转 Markdown | SeaYJ’s Blog</a><br><a href="https://yangchaoyi.vip/posts/520520/" target="_blank" rel="noopener">【源码开放】Hexo+Github 博客butterfly 和 matery 主题 搭建完全教程【整理】 | 超逸の博客 (yangchaoyi.vip)</a></p><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这篇心得体会的框架，很多体会都是从<a href="https://godweiyang.com/" target="_blank" rel="noopener">韦阳的博客</a>来的，我是在他的感悟里修改，添加了自己的体会，甚至包括这个博客的搭建过程，感谢大佬的分享，我也争取多分享干货。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Student work | 优秀学生、优秀学生干部评选</title>
      <link href="/2022/11/28/3-zong-jie/you-xiu-xue-sheng-you-xiu-xue-sheng-gan-bu-ping-xuan/"/>
      <url>/2022/11/28/3-zong-jie/you-xiu-xue-sheng-you-xiu-xue-sheng-gan-bu-ping-xuan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h2 id="为什么要参加评选？"><a href="#为什么要参加评选？" class="headerlink" title="为什么要参加评选？"></a>为什么要参加评选？</h2><p>研究生入学以来，自己一直希望提高自己的各方面能力，因此也参加了一些比赛和活动，有这个机会能证明过去一段时间的成果，检验过去三年来的所得，自然是想争取住这次机会的！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社团 </tag>
            
            <tag> 博客 </tag>
            
            <tag> 记录 </tag>
            
            <tag> 在校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Think and Future| 关于最近的感悟</title>
      <link href="/2022/11/27/3-zong-jie/think-and-future/"/>
      <url>/2022/11/27/3-zong-jie/think-and-future/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="秋招告一段落，尘埃是否落定？"><a href="#秋招告一段落，尘埃是否落定？" class="headerlink" title="秋招告一段落，尘埃是否落定？"></a>秋招告一段落，尘埃是否落定？</h2><p>2022年是光怪陆离的一年，当大家还在为防疫争论不休时，步入秋招的学生们已经被裹挟进时代的洪流中，还未步入江湖的我们，多少都感觉到了个体在其中是那么微不足道而又身不由己。</p><p>从2020年初入上大时的意气风发，一心要从机械的天坑专业（自己当时认为）跳入互联网的康庄大道中；彼时，互联网的大潮还没有褪去，身处互联网行业的巨擘大佬已经看到互联网的流量见顶，纷纷开始谋求新的赛道。但是在互联网，群狼环伺，又有哪家公司能在短时间内能甩开其他竞争者。于是，这些互联网公司开始份其他行业的蛋糕，从京东买菜，到美团买菜，开始向摊贩要流量。更有追求的马云，在外滩振臂一呼，就迅速消失在了众人视野中。而反垄断措施的出台，给了这些巨头们敲响了丧钟，一下子纷纷自危，要节衣缩食，抵抗寒冬。可是，眼看起高楼，宴宾客，等自己收拾好衣冠，准备步入时，楼却塌了…….</p><p>从4月份开始准备实习时，由于受小论文的影响，并没有好好准备实习面试。</p><p>第二次就是 2017 年暑假了，当时自己建了个人博客，域名是：<a href="https://godweiyang.com/" target="_blank" rel="noopener">godweiyang.com</a>。当时的想法是，个人博客好好看，有各种主题，如果会点前端知识，还能自己魔改。个人博客主要更新的就是自然语言处理的知识了，主要都是些论文的阅读赏析。另外还更新一些计算机相关的基础知识，主要考虑到绝大多数人并不会对枯燥又专业的自然语言处理感兴趣。算法题解的话最近也开始更新起来了，主要写一些 LeetCode上面的题解。</p><p>最后就是知乎专栏和微信公众号了，这两个平台是最近才搞的，主要把个人博客的文章同步更新过去，内容都差不多。微信公众号本来不想搞的，不支持 markdown ，写起来挺麻烦的。但是考虑到以后的发展，以及可能会有一些变现的操作，还是重操旧业了（其实我公众号两年前就注册过了，只是一直没有更新）。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6W2H| 写博客的一些反思和规划</title>
      <link href="/2022/11/27/1-xiang-mu/bo-ke-xiang-mu/xie-bo-ke-de-yi-xie-fan-si-he-gui-hua/"/>
      <url>/2022/11/27/1-xiang-mu/bo-ke-xiang-mu/xie-bo-ke-de-yi-xie-fan-si-he-gui-hua/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="When？什么时候开始写的？"><a href="#When？什么时候开始写的？" class="headerlink" title="When？什么时候开始写的？"></a>When？什么时候开始写的？</h2><p>第一次写博客是 2020 年了，开始是做一些平时的学习记录，在微信公众号上，陆续写了两三篇记录Java的学习过程。但是最后还是没有坚持下去，主要还是因为微信公众号体验太差了，写起文章来很难受，文字和背景很不好调整，有时候有点东西想写，一想到还得先登录、组织文字、排版、发布、审核，相当麻烦。另一个原因是，定制主题自由度也太差。</p><p>第二次就是 2021 年暑假了，当时自己在学习算法，有时候想学习一下别人的算法思路，想记录一下代码，方便后续查看，而代码在聊天框里是一串极丑的文字，搞成PDF又不方便查看，最后是在牛客平台上记录这些代码，到最后自己也忘了哪些代码是自己保存的，完全没有复习查看的作用。那时候也会在知乎记录自己的知识。</p><p>2022年有很多要做的事情，实习、发论文、秋招，要补充很多知识，这些知识需要记录、存档，而自己却一直没有物色到一个自己满意的记录工具，当时看到别人的个人博客很好看，有各种主题，如果会点前端知识，还能自己魔改，会让自己记录知识和体会的意愿增强不少，因此逐渐有了搭建自己个人博客的想法。</p><p>等到自己的Java基础知识基本扎实，有一两个项目的经历之后，开始着手准备自己的博客了，2022年十月搭建了具有前后端的个人博客和论坛，但是这种界面对于自己来说还是美感不足。在这期间，也通过内网穿透的方式，让其他设备也能访问到我的博客了，成就感直接加满。后面，还得申请自己的域名，方便访问，内网穿透经常失效，加载也很慢。</p><p>后面，需要把各个平台的文章同步起来，提高曝光度，成就感满满！</p><h2 id="Why？为什么会想起来写博客？"><a href="#Why？为什么会想起来写博客？" class="headerlink" title="Why？为什么会想起来写博客？"></a>Why？为什么会想起来写博客？</h2><p>其实刚开始写博客，主要还是为了记录自己平时学到的一些东西，以后可能还能翻出来复习复习。但是现在看来，基本不会再去翻以前写的东西了。</p><p>另一个目的，也是我写博客最主要的目的，还是想分享我知道的一些东西，能够让更多的人因此受益。虽然有句话叫做：“不以盈利为目的的博客最后都死亡了”。因为如果不能因此获得任何的收入的话，极少有人有这个毅力坚持更新博客。虽然我也想因此获利，但是暂时我并不想因此改变了初衷，去写一些刻意迎合大众的水文，从而获得粉丝。</p><h2 id="What？都写一些什么主题的博客？"><a href="#What？都写一些什么主题的博客？" class="headerlink" title="What？都写一些什么主题的博客？"></a>What？都写一些什么主题的博客？</h2><p>主要都是与我相关的一些计算机相关知识。最主要的就是深度学习和后端知识，但是因为我是做故障诊断的，这个方向受众比较小，如果纯粹写这个方向的内容的话，看的人可能会很少。而如果写深度学习和增量学习的入门普及或者综合一点热门一点的方向的话，如后端技术栈知识的话，看得人应该会很多。但是这样又有一个弊端，非常的浪费我时间，因为过于基础的知识对我的提升微乎其微，只适合以后我面试前看看补补基础。而主要我现在重心还在发论文，继续搞学术，所以只能写一些结合我最近所学知识的文章。除此之外，也会写一些自己的感悟。在数据眼花缭乱的时代，对社会事件的整理也能让自己更清晰的认识自己。</p><p>偶尔，我还会分享一些计算机基础知识，比如怎么搭博客（这是我阅读量最高的一篇博客了）、好用的软件、常用的一些软件的安装配置等等。其实讲道理，我是不愿意写这一类文章的，因为非常的费时费力，需要自己动手模拟一遍，确保能够正确完成才能写进文章。不然就会像很多网上的教程那样，抄来抄去一堆错误，根本没有自己动手实践过。但是这种文章其实对很多人帮助还挺大的，大家也乐意去看，如果你在知乎发的话，你会发现这类文章收藏量都挺高的</p><p>那么其他火的博客都写些什么呢？我觉得当代人闲暇时候、上厕所刷手机的时候，那些碎片时间是没办法好好学习一些知识的，最爱看的还是有趣的故事，例如 99 行代码做出冰雪奇缘特效、程序员脱发、程序员单身狗啦之类的。这些故事背后的技术可能是很深奥的，但是大多数人并不会去关心，只是会看完惊叹一句“卧槽”而已。其他的吸引人的内容还有资料下载、课程学习（当然基本都是广告）等等。不过我个人目前并不想写这些东西，首先这些新闻类的文章很多地方都有了，写来写去就那么些东西，同质化严重。而资料下载确实是个不错的主意，可以分享好东西给大家，但是我个人最近也没有太多值得珍藏的好资料，况且大多数网上都有现成的，我不赞同为了增加粉丝而不放出链接，把资料放在公众号后台的行为。</p><p>总之，不忘初心，粉丝什么的随缘吧。我非常佛系，即使没人看我也会日常更新，就当记日记不是吗？</p><h2 id="Who？写出来的博客都是给谁看的？"><a href="#Who？写出来的博客都是给谁看的？" class="headerlink" title="Who？写出来的博客都是给谁看的？"></a>Who？写出来的博客都是给谁看的？</h2><p>大多数看我博客的都是计算机相关的的同学。就拿我在知乎专栏的粉丝来看，大多数人是来看我的评论，而少部分人是看到了那篇博客搭建教程来的。</p><h2 id="Where？都在什么平台写博客呢？"><a href="#Where？都在什么平台写博客呢？" class="headerlink" title="Where？都在什么平台写博客呢？"></a>Where？都在什么平台写博客呢？</h2><p>这个其实上面都说过了，我现在文章主要更新在个人博客、知乎、微信公众号和 CSDN 上面，我简要说一些这些平台的优缺点吧。</p><p>个人博客可以个性化定制主题，想怎么好看就怎么好看，还不用发文章审核，想发什么就发什么。但是缺点就是发文章麻烦一点的，步骤略多，并且搜索引擎收录很慢的。</p><p>知乎专栏是我比较喜欢的一个平台，主要是它支持markdown，还可以把公式变成矢量图片，还是挺不错的。但是发知乎文章要注意千万别带着营销、引流等内容，不然容易被人举报被删除甚至禁言。</p><p>微信公众号是我最近才开始运营的，相对而言，它的编辑界面是最不友好的一个，只支持富文本编辑，连markdown都没有。但是也有解决方法，比如我现在用<a href="https://mdnice.com/" target="_blank" rel="noopener">mdnice.com</a>这个网站，把markdown转换成微信公众号的富文本格式，还是非常好用的。公众号还有个缺点，太封闭了，很难宣传出去，刚开始只能亲朋好友关注关注，但是如果你真的做大了知名度，还是可以借助微信的优势，赚得不少广告钱的。</p><p>CSDN因为几年前被永久封过号，然后现在不知道为什么又被解封了，所以用的不是特别多，主要都是通过知乎专栏自动同步文章过去的。CSDN 好处就是流量大，很多人都在上面搜东西，百度搜出来也基本都是 CSDN ，但是排版是真的真的烂，不过现在好多了，也支持 markdown 了。但是还是谈不上喜欢，广告什么的都太多了，除非迫不得已，我一般不去 CSDN 看技术文章，我一般都是个人博客或者知乎看论文解读之类的。</p><h2 id="How？按照什么流程来写博客？"><a href="#How？按照什么流程来写博客？" class="headerlink" title="How？按照什么流程来写博客？"></a>How？按照什么流程来写博客？</h2><p>其实同时维护好几个平台还是挺累的，你得找到一个最佳的顺序来发布文章，这样才能事半功倍。我一般都是先在个人博客上写好 markdown 文章，然后发布完之后，打开<a href="https://mdnice.com/" target="_blank" rel="noopener">mdnice.com</a>在线编辑网站，把 markdown 粘贴进去，转成微信公众号和知乎专栏的格式，最后分别发布在两个地方就行了。 CSDN 就不用管了，它会每天自动同步知乎专栏的文章的，倒是为我省了不少事。markdown 写作也挺轻松的，完全不用管排版之类的问题，安安心心写内容就行了。</p><p>微信公众号现在设置的是每天早上 8:05 推送，其实稍微晚一点比较好，这样别人的都推送完了，你的就会置顶在最上面。而知乎专栏和个人博客我就随性发布了，想什么时候发就什么时候发，经常会前一天就写好内容，早早的发布出去了。</p><p>我个人现在来看，写一篇博客最累的是敲公式和找图片，当然像我这篇就一个公式和图都没有，是最最轻松的了。我这个人有强迫症，公式一定要手打 LaTeX 公式，然后转成矢量图才行，这样看着又清楚又舒服。遇到复杂的矩阵公式，能把我敲的头晕。这也是我为什么不喜欢 CSDN 的一个原因，上面很多文章公式全是截图，看的我头都大了。</p><h2 id="How-much？要花多少时间和金钱来运营维护？"><a href="#How-much？要花多少时间和金钱来运营维护？" class="headerlink" title="How much？要花多少时间和金钱来运营维护？"></a>How much？要花多少时间和金钱来运营维护？</h2><p>写博客挺花时间的，特别是现在还在为发论文而忙活的时候，可能论文截稿前那段时间甚至我会停更好久哈哈。不过现在放假了，还算比较闲，有功夫搞搞这些。我个人是倾向于白天还是老老实实学习吧，晚上把部分的游戏时间抽出来写会儿文章，更新一波。这样也不算太浪费时间，毕竟就算不写，时间也都用来打游戏了，游戏输了还坏了心情。</p><p>那什么时候做 LeetCode 呢？我一般都是白天吃饭时，或者走在路上时，手机 app 上随机选一道题，然后吃个饭的时间就能想出个解法，回到实验室后敲一顿代码通过了就行了。这样看来也节约了不少时间嘛，还能和室友一起讨论讨论，帮他提高一波算法能力。</p><p>因为写文章这上面花时间比较多，写出好的文章、不水文章的话花的时间更多，所以很容易坚持不下去。而又要迎合大众的口味，众口难调嘛，又要坚持自己的初心，尽量写对自己提升大的内容，还是比较难以平衡的。特别是粉丝特别少，没有什么人看的时候，你会很想放弃。</p><p>但是，总会有人在你坚持不下去的时候，给你鼓励的目光，支持你继续走下去的。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这篇心得体会的框架，很多体会都是从<a href="https://godweiyang.com/" target="_blank" rel="noopener">韦阳的博客</a>来的，我是在他的感悟里修改，添加了自己的体会，甚至包括这个博客的搭建过程，感谢大佬的分享，我也争取多分享干货。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java集合框架</title>
      <link href="/2021/12/27/qi-ta-huo-zhe-jiao-du-li-ling-yu/gong-zhong-hao-tu-pian-ku/gong-zhong-hao-wen-jian-ku/ji-he-kuang-jia/"/>
      <url>/2021/12/27/qi-ta-huo-zhe-jiao-du-li-ling-yu/gong-zhong-hao-tu-pian-ku/gong-zhong-hao-wen-jian-ku/ji-he-kuang-jia/</url>
      
        <content type="html"><![CDATA[<h1 id="集合框架"><a href="#集合框架" class="headerlink" title="集合框架"></a>集合框架</h1><p><img src="/images/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.png" alt="集合框架"></p><h2 id="1-Collection"><a href="#1-Collection" class="headerlink" title="1. Collection"></a>1. Collection</h2><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><ul><li><p>ArrayList</p><ul><li>排列有序，可重复</li><li>底层使用数组</li><li>改查速度快，增删慢，getter()和setter()方法快</li><li>线程不安全</li><li>当容量不够时，ArrayList是当前容量*1.5+1</li></ul></li><li><p>Vector</p><ul><li>排列有序，可重复</li><li>底层使用数组</li><li>速度快，增删慢</li><li>线程安全，效率低</li><li>当容量不够时，Vector默认扩展一倍容量</li></ul></li><li><p>LinkedList</p><ul><li>排列有序，可重复</li><li>底层使用双向循环列表数据结构</li><li>查询速度慢，增删快，add()和remove()方法快</li><li>线程不安全</li></ul></li></ul><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><ul><li><p>HashSet</p><ul><li>排列无序，不可重复</li><li>底层使用Hash表实现</li><li>存取速度快</li><li>内部是HashMap</li></ul></li><li><p>TreeSet</p><ul><li>排列无序，不可重复</li><li>底层使用二叉树实现</li><li>排序存储</li><li>内部是TreeMap的SortedSet</li></ul></li><li><p>LinkedHashSet</p><ul><li>采用hash表存储，并用双向链表记录插入顺序</li><li>内部是LinkedHashMap</li></ul></li></ul><h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><ul><li>在两端出入的List，所以也可以用数组或链表来实现</li></ul><h2 id="2-Map"><a href="#2-Map" class="headerlink" title="2. Map"></a>2. Map</h2><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><ul><li>键不可重复，值可重复</li><li>底层哈希表</li><li>线程不安全</li><li>允许key值为null,value也可以为null</li></ul><h3 id="hashtable"><a href="#hashtable" class="headerlink" title="hashtable"></a>hashtable</h3><ul><li>键不可重复，值可重复</li><li>底层哈希表</li><li>线程安全</li><li>key,value值都不允许为null</li></ul><h3 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h3><ul><li>键不可重复，值可重复</li><li>底层二叉树</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue的初体验| 搭建一个简单的前后端分离项目</title>
      <link href="/2021/09/11/1-xiang-mu/java-xiang-mu/jiang-nan-yi-dian-yu-jian-dan-de-vue-qian-hou-duan-fen-chi-xiang-mu/project-java/"/>
      <url>/2021/09/11/1-xiang-mu/java-xiang-mu/jiang-nan-yi-dian-yu-jian-dan-de-vue-qian-hou-duan-fen-chi-xiang-mu/project-java/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><h2 id="本项目用于搭建一个简单的前后端分离项目Demo，用于向用户展示从后端拿到的数据，并实现数据的增加和删除。"><a href="#本项目用于搭建一个简单的前后端分离项目Demo，用于向用户展示从后端拿到的数据，并实现数据的增加和删除。" class="headerlink" title="本项目用于搭建一个简单的前后端分离项目Demo，用于向用户展示从后端拿到的数据，并实现数据的增加和删除。"></a>本项目用于搭建一个简单的前后端分离项目Demo，用于向用户展示从后端拿到的数据，并实现数据的增加和删除。</h2><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><p>Vue<br>Element UI<br>Echarts</p><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p>Springboot<br>Mybatis plus</p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>Mysql/H2</p><h4 id="前后端跨域"><a href="#前后端跨域" class="headerlink" title="前后端跨域"></a>前后端跨域</h4><p>axios</p><h3 id="基础环境搭建和调试"><a href="#基础环境搭建和调试" class="headerlink" title="基础环境搭建和调试"></a>基础环境搭建和调试</h3><ol><li><p>Maven:Maven是一个项目版本管理工具，Maven能够很方便的帮我们管理项目报告，生成站点，管理JAR文件，等等。本项目使用Maven版本为apache-maven-3.8.2 。安装配置可按<a href="https://zhuanlan.zhihu.com/p/258540479" target="_blank" rel="noopener">maven安装和配置</a>提供的方法实现，其中最重要的是修改镜像源为阿里镜像源和建立本地仓库。</p><blockquote><p>1)在IDEA配置Maven时发现一个问题，每次创建一个新项目时，都要重新配置Maven路径，否则会使用默认Maven,出现各种调试问题。这是因为我们一般在File–》Setting–》Build,Execution,Deployment–》Build Tools–》Maven 里配置，而这里是设置项，每次新建项目时，项目配置采用的默认项，这就是为什么每次新建Maven项目，都要重新配置Maven的原因。为了不要每次都要配置Maven,我们可以在File–》Other Settings–》Default Settings》Build,Execution,Deployment–》Build Tools–》Maven 里配置，这样就不用每次新建项目都要配置Maven了。<br>2) 在使用Maven创建Spring Boot项目时，Maven仓库(repository)里的spring-boot文件夹里，一直无法将下载下来的包导进该文件夹里，导致一直报错说Plugin ‘org.springframework.boot:spring-boot-maven-plugin:’ not found或者其他配置文件找不到。我们可以在File–》 Settings–》Build,Execution,Deployment–》Build Tools–》Maven–》Importing 里配置，勾选上Automatically download 后面的Sources和Documentation,这样就能将所需配置文件自动下载到spring-boot文件夹里。如果还是有问题可以在pom.xml文件里加上Maven版本号。</p></blockquote></li><li><p>Vue和前端插件<br>Vue.js是一款流行的JavaScript前端框架，旨在更好地组织与简化Web开发。Vue所关注的核心是MVC模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互。Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。  </p><blockquote><p>本项目Vue基于node.js安装，用淘宝镜像npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org，node.js安装配置可按[node安装教程](https://zhuanlan.zhihu.com/p/77594251)提供的方法实现，安装后添加环境变量即可。" target="_blank" rel="noopener">https://registry.npm.taobao.org，node.js安装配置可按[node安装教程](https://zhuanlan.zhihu.com/p/77594251)提供的方法实现，安装后添加环境变量即可。</a><br>在cmd输入vue ui即可进入vue图形界面，在图形界面可创建工程；router是路由，vuex是不同页面的交互，需勾选上，创建以后会在浏览器弹窗显示新创建的工程。</p></blockquote></li><li><p>ECharts用于图表的绘制；Element UI用于结果的展示；axios用于前后端的交互<br>vue图形界面点击插件可下载这后两个插件，axios可在IDEA下载；（终端或plugins)cpnm install <a href="mailto:echarts@4.9.0" target="_blank" rel="noopener">echarts@4.9.0</a> –save,cpnm和npm的区别是cnpm是淘宝镜像。</p></li><li><p>IDEA对vue的处理<br>创建完vue工程，并下载好ECharts、Element UI、axios插件后，可在IDEA里打开创建的工程。在src文件夹下，views里有vue文件，在IDEA里开发vue,还需要再IDEA里下载vue,File–》 Settings–》Plugins–》 搜索安装即可。测试创建的vue工程，可在IDEA终端输入npm run serve，如果是1.0版本，用的是npm run dev命令启动vue项目，点击生成的网址就可以进入项目。</p></li></ol><blockquote><p>在使用vue的时候，重新打开vue项目的时候，输入指令npm run serve启动项目的时候,报错<br>m ERR! code ENOENT<br>npm ERR! syscall open<br>npm ERR! path E:\Web学习\idea\vue\package.json<br>npm ERR! errno -4058<br>npm ERR! enoent ENOENT: no such file or directory, open ‘E:\Web学习\idea\vue\package.json’<br>npm ERR! enoent This is related to npm not being able to find a file.<br>npm ERR! enoent<br>npm ERR! A complete log of this run can be found in:<br>npm ERR! C:\Users\Lenovo\AppData\Roaming\npm-cache_logs\2020-11-18T08_47_57_691Z-debug.log</p><blockquote><p>这是需要注意：命令npm run serve在同级目录下才可以。</p></blockquote></blockquote><h3 id="以上就完成了，开发这个项目vue项目的软件和插件的下载，以及IDEA里面环境的配置了，下面就开始正式搭建吧！！"><a href="#以上就完成了，开发这个项目vue项目的软件和插件的下载，以及IDEA里面环境的配置了，下面就开始正式搭建吧！！" class="headerlink" title="以上就完成了，开发这个项目vue项目的软件和插件的下载，以及IDEA里面环境的配置了，下面就开始正式搭建吧！！"></a>以上就完成了，开发这个项目vue项目的软件和插件的下载，以及IDEA里面环境的配置了，下面就开始正式搭建吧！！</h3><h2 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h2><h2 id="ECharts"><a href="#ECharts" class="headerlink" title="ECharts"></a>ECharts</h2><p>ECharts用于图表的绘制，可在其基础上加自己的东西。在创建的views文件夹下，替换About文件代码为如下，可展示一个简单条形图。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"myChart"</span> <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"{width: '800px', height: '600px'}"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>  export <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token operator">:</span> <span class="token string">'Echarts'</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 基于准备好的dom，初始化echarts实例  </span>let myChart <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'myChart'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 绘制图表  </span>myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  title<span class="token operator">:</span> <span class="token punctuation">{</span>  text<span class="token operator">:</span> <span class="token string">'水果销量统计'</span><span class="token punctuation">,</span>  left<span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span>  top<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>  textStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">'#555555'</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  tooltip<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  xAxis<span class="token operator">:</span> <span class="token punctuation">{</span>  data<span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token string">"苹果"</span><span class="token punctuation">,</span>  <span class="token string">"香蕉"</span><span class="token punctuation">,</span>  <span class="token string">"橘子"</span><span class="token punctuation">,</span>  <span class="token string">"火龙果"</span><span class="token punctuation">,</span>  <span class="token string">"葡萄"</span><span class="token punctuation">,</span>  <span class="token string">"西瓜"</span>  <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  yAxis<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  series<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>  name<span class="token operator">:</span> <span class="token string">'销量'</span><span class="token punctuation">,</span>  type<span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">333</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"red"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">133</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"#c4ebad"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"#c4ebad"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">222</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"#6be6c1"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">491</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"#3fb1e3"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>  value<span class="token operator">:</span> <span class="token number">1223</span><span class="token punctuation">,</span>  itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>  color<span class="token operator">:</span> <span class="token string">"#c4ebad"</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>“myChart” :style=”{width: ‘800px’, height: ‘600px’}” 是展示窗口，myChart.setOption里是需要展示的内容，浏览器显示效果如下：<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C1.jpeg" alt><br>myChart.setOption内可以更换不同的图表内容，可从Echarts官网上直接下载代码，<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="noopener">Echarts官网</a></p><h2 id="Element"><a href="#Element" class="headerlink" title="Element"></a>Element</h2><p>数据添加和管理用的是<a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">Element UI框架</a>，本项目我们用于展示，选择的是table组件，选择有编辑操作的表。将代码直接复制。<br>在IDEA中新建体个Vue文件，名为Table,增加router（配路由），将新建vue文件中的代码换成刚才复制粘贴过来的代码，即可访问。效果入下：<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C2.jpeg" alt></p><h2 id="后端部分"><a href="#后端部分" class="headerlink" title="后端部分"></a>后端部分</h2><p>接下来我们需要把后端（后台）的数据查出来，传到前端，然后我们把数据解析显示，就可以看到页面的显示效果。</p><h3 id="创建后端工程"><a href="#创建后端工程" class="headerlink" title="创建后端工程"></a>创建后端工程</h3><p>创建新工程New Project–》 选择Spring Boot工程Spring Initializr–》选择group id，名字Artifact,java版本选择11，包名去掉文件名字–》Dependencies选择Maven的一些依赖，Lombok,Spring Web,MySQL Driver–》确定<br>打开新工程以后我们还需要补充一些依赖，打开pom.xml文件（如果报红说缺文件，按环境配置的方法修改），补充的依赖文件在以下链接可找到（本电脑）E:\javaProject\springboot+vue\Spring Boot+Vue手册.md.依赖文件插入到pom.xml的dependencies中，导入成功后就可以写代码了。</p><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><h4 id="1-使用MyBatis-Plus自动生成相关类及接口"><a href="#1-使用MyBatis-Plus自动生成相关类及接口" class="headerlink" title="1.使用MyBatis Plus自动生成相关类及接口"></a>1.使用MyBatis Plus自动生成相关类及接口</h4><p>正常的MVC模式，需要去写controller,service,reporsity,实体类Entity,等等。使用MyBatis Plus可以自动生成代码。不光可以生成实体类Entity的代码,controller,service,Mapper。可以把增删改查的基本接口都可以创建出来。<br>代码生成器的代码在手册可找到，创建一个类，把代码复制进去，运行即可产生所需要的文件夹和类文件。<br>代码如下所示:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>southwind<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>DbType<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>AutoGenerator<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>DataSourceConfig<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>GlobalConfig<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>PackageConfig<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>StrategyConfig<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>NamingStrategy<span class="token punctuation">;</span>  <span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">GenerateTest</span> <span class="token punctuation">{</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//创建generator对象  </span>AutoGenerator autoGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//数据源  </span>DataSourceConfig dataSourceConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dataSourceConfig<span class="token punctuation">.</span><span class="token function">setDbType</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>MYSQL<span class="token punctuation">)</span><span class="token punctuation">;</span>  dataSourceConfig<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dataSourceConfig<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dataSourceConfig<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dataSourceConfig<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  autoGenerator<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dataSourceConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//全局配置  </span>GlobalConfig globalConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  globalConfig<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/src/main/java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  globalConfig<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  globalConfig<span class="token punctuation">.</span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  globalConfig<span class="token punctuation">.</span><span class="token function">setServiceName</span><span class="token punctuation">(</span><span class="token string">"%sService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  autoGenerator<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//包信息  </span>PackageConfig packageConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">"com.jlcc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">"entity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">"mapper"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setService</span><span class="token punctuation">(</span><span class="token string">"service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setServiceImpl</span><span class="token punctuation">(</span><span class="token string">"service.impl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  packageConfig<span class="token punctuation">.</span><span class="token function">setController</span><span class="token punctuation">(</span><span class="token string">"controller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  autoGenerator<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>packageConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//策略配置  </span>StrategyConfig strategyConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  strategyConfig<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token string">"fruit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  strategyConfig<span class="token punctuation">.</span><span class="token function">setNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>  strategyConfig<span class="token punctuation">.</span><span class="token function">setColumnNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>  strategyConfig<span class="token punctuation">.</span><span class="token function">setEntityLombokModel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  autoGenerator<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>strategyConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//运行  </span>autoGenerator<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这是一个非常典型的面向对象的操作，首先创建Generator对象；<br>其次要建立数据源，需要和数据库建立连接，连接到数据库后，可以根据数据表，生成对应的实体类，controller,service,Mapper等。这些配置就是和已有的数据库建立连接，配置好以后，装到Generator对象即可；<br>第三是全局配置，全局配置是指生成代码放置的位置，(“user.dir”)是指当前项目的绝对路径，”/src/main/java”是指文件放置在本项目中的目录。”admin”是指作者，代码生成以后的注释上会显示。false不打开生成文件的电脑盘中的文件夹路径。”%sService”是声明service层接口的写法，默认接口名前会加一个I,加上%s通配符则不会；<br>第四是配置包的信息，生成文件是需要放到包里，所有生成包放置到”/src/main/java/com.jlcc”父包里；<br>第五是策略配置，策略配置也是和数据库相关的东西，连的数据库是test，数据库里的表是fruit,NamingStrategy.underline_to_camel是为了映射表名和Java类名的一个操作，因为数据库文件命名方式和Java命名方式不一样，表名可能有下划线，而Java没有，当要把数据库名映射到Java类式，如下划线，需要转化为Java的驼峰式命名。setEntityLombokModel是指会自动加Lombok注解。<br>最后直接运行即可产生各类及包。</p></blockquote><h4 id="2-生成的包和代码的解读"><a href="#2-生成的包和代码的解读" class="headerlink" title="2. 生成的包和代码的解读"></a>2. 生成的包和代码的解读</h4><p>1)mapper，实际上是reponse层的接口，实现对数据的增删改查。在具体写法上，该接口继承于BaseMapper接口，父接口提供了增删改查等方法。（选中父类，按Ctrl和鼠标左键可查看）<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C3.jpeg" alt><br>2)service层，同样继承于Iservice的接口，父接口提供了增删改查等方法。<br>3)controller层当中，由于是前后端分离，将注解@Controller改成@RestController,不需要视图，直接返回数据就可以。先把Service层里面生成的文件注入Controller层类文件中，之后写一个把说有数据返回的方法，用List集合，加泛型，注解是GetMapping。方法可实现查询，如图所示：<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C4.jpeg" alt><br>这里注意，我们使用Mybaits,需要在service层的Application类里加注解，@MapperScan(“com.包名.mapper”），把Mapper包注入，才能生成代理(Spring Boot整合MyBatis的操作）。</p><h4 id="3-数据连接库（建立后台接口）"><a href="#3-数据连接库（建立后台接口）" class="headerlink" title="3.数据连接库（建立后台接口）"></a>3.数据连接库（建立后台接口）</h4><p>此时启动Application文件发现并不能跑起来。报错找不到url,是因为我们现在使用的是Mybatis,而Mybatis的使用需要连接数据库，因此必须知道数据源（连哪个数据库），配数据源。之前在生成代码的时候配置的数据源是用于生成包和代码的，而此时工程使用的数据源需要重新配置数据源，需要在yml文件里面配，在resources文件夹下的application文件下（注意，配置工程数据源，把文件后缀改为yml)，配置代码在以下链接可找到（本电脑）E:\javaProject\springboot+vue\Spring Boot+Vue手册.md.复制黏贴到修改为yml后缀的文件里即可。代码如下：</p><pre class="line-numbers language-java"><code class="language-java">spring<span class="token operator">:</span>  datasource<span class="token operator">:</span>  url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>test  username<span class="token operator">:</span> root  password<span class="token operator">:</span> <span class="token number">123456</span>  driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver  mybatis<span class="token operator">-</span>plus<span class="token operator">:</span>  configuration<span class="token operator">:</span>  log<span class="token operator">-</span>impl<span class="token operator">:</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>StdOutImpl  mapper<span class="token operator">-</span>locations<span class="token operator">:</span> classpath<span class="token operator">:</span>com<span class="token operator">/</span>jlcc<span class="token operator">/</span>mapper<span class="token operator">/</span>xml<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml  server<span class="token operator">:</span>  port<span class="token operator">:</span> <span class="token number">8181</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>配置log-impl: org.apache.ibatis.logging.stdout.StdOutImpl是为了打印sql语句<br>配置log-impl: mapper-locations: classpath:com/jlcc/mapper/xml/*.xml是为了把xml文件扫描进来<br>配置port: 8181，改端口为8181</p></blockquote><h4 id="配齐文件以后再次启动工程（左下角绿色右向三角形），启动成功可发现端口信息等都打印出来，我们可以在浏览器直接访问8181端口。展示的是fruit表的数据信息，需要格式化显示，可下载谷歌插件JSONView"><a href="#配齐文件以后再次启动工程（左下角绿色右向三角形），启动成功可发现端口信息等都打印出来，我们可以在浏览器直接访问8181端口。展示的是fruit表的数据信息，需要格式化显示，可下载谷歌插件JSONView" class="headerlink" title="配齐文件以后再次启动工程（左下角绿色右向三角形），启动成功可发现端口信息等都打印出来，我们可以在浏览器直接访问8181端口。展示的是fruit表的数据信息，需要格式化显示，可下载谷歌插件JSONView"></a>配齐文件以后再次启动工程（左下角绿色右向三角形），启动成功可发现端口信息等都打印出来，我们可以在浏览器直接访问8181端口。展示的是fruit表的数据信息，需要格式化显示，可下载谷歌插件JSONView</h4><h4 id="4-前端和后端的对接"><a href="#4-前端和后端的对接" class="headerlink" title="4.前端和后端的对接"></a>4.前端和后端的对接</h4><p>此时我们前后台的接口（8080和8181）都有了，此时需要前端和后端对接。此时我们前端使用的还是从Echarts和Element ui上找的假数据，而我们要做的就是修改数据，让前端连接到后台，获取真实的数据，填充到前端。</p><h4 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h4><p>前端调后台，由于两者的端口（8080和8181）不同，不能直接调用。<br>首先在Table.vue(显示的前端操作表)上初始化方法当中跨域，使用axios插件；如下代码中，标蓝的为添加的跨域：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>script<span class="token operator">></span>  export <span class="token keyword">default</span> <span class="token punctuation">{</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token function">handleClick</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8181/fruit/list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>get方法获取后端的路径，即调后端接口，然后再回调，在then中写匿名函数response，response为响应的对象，console显示出对象，看看长啥样。在浏览器运行Table.vue，打开console(F12)可看到如下信息,右边显示的错误即为跨域问题。<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C5.jpeg" alt><br><strong>跨域问题是双方的问题，可从前端和后端入手解决，这里用后端解决</strong>。因为后台用的是SpringBoot,只需要加一个配置类就可以，配置代码还是在以下链接可找到（本电脑）E:\javaProject\springboot+vue\Spring Boot+Vue手册.md.在com.jlcc下新建类configuration.CrosConfiguration，其会在com.jlcc子包configuration下新建名为CrosConfiguration的新类，将代码复制过来,代码如下所示:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>jlcc<span class="token punctuation">.</span>configuration<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>CorsRegistry<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurer<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Configuration</span>  <span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">CrosConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span>CorsRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>  registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">allowedOriginPatterns</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"HEAD"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"PUT"</span><span class="token punctuation">,</span> <span class="token string">"DELETE"</span><span class="token punctuation">,</span> <span class="token string">"OPTIONS"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">allowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">maxAge</span><span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>allowedOriginPatterns(“*”)是指现在的请求都可以访问，无论什么域名都可以，用通配符*表示。<br>重新启动，会看到能在控制台（console）显示出后端的数据，如图：<br><img src="https://cdn.jsdelivr.net/gh/jlcxxzj/jlcpichub/img/vue%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C6.jpeg" alt></p><h5 id="前端显示后端数据"><a href="#前端显示后端数据" class="headerlink" title="前端显示后端数据"></a>前端显示后端数据</h5><p>前端获取到后端数据以后，我们只需要完成对象的赋值，即把拿到的数据赋给Table.nue文件中的tableData就可以了，data一更新，前端的显示就动态的更新了。在刚才查看console中前后端是否连接用console.log查看，此时跨域成功可以不要：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>script<span class="token operator">></span>  export <span class="token keyword">default</span> <span class="token punctuation">{</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token function">handleClick</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8181/fruit/list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并修改为以下信息：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>script<span class="token operator">></span>  export <span class="token keyword">default</span> <span class="token punctuation">{</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token function">handleClick</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  let _this <span class="token operator">=</span> <span class="token keyword">this</span>  axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8181/fruit/list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  _this<span class="token punctuation">.</span>tableData <span class="token operator">=</span> response<span class="token punctuation">.</span>data  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>let _this = this这么命名是因为在axios.get里面直接用this指的是回调函数response回的this，而表示vue对象Table.vue了，在外面把_this定义出来意思是使用的是全局的this，而不是回调response里的this。这样就可以动态获取后台数据并动态更新显示了。</p><p>根据显示我们回发现，只有名字栏被显示，这是因为我们只把name关键字和prop对应上了，其他的没有对应上，需要把prop中内容改为数据表关键字，这样就能显示了。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table  <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span>  border  style<span class="token operator">=</span><span class="token string">"width: 100%"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed  prop<span class="token operator">=</span><span class="token string">"date"</span>  label<span class="token operator">=</span><span class="token string">"日期"</span>  width<span class="token operator">=</span><span class="token string">"150"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"name"</span>  label<span class="token operator">=</span><span class="token string">"姓名"</span>  width<span class="token operator">=</span><span class="token string">"120"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"province"</span>  label<span class="token operator">=</span><span class="token string">"省份"</span>  width<span class="token operator">=</span><span class="token string">"120"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"city"</span>  label<span class="token operator">=</span><span class="token string">"市区"</span>  width<span class="token operator">=</span><span class="token string">"120"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"address"</span>  label<span class="token operator">=</span><span class="token string">"地址"</span>  width<span class="token operator">=</span><span class="token string">"300"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"zip"</span>  label<span class="token operator">=</span><span class="token string">"邮编"</span>  width<span class="token operator">=</span><span class="token string">"120"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed<span class="token operator">=</span><span class="token string">"right"</span>  label<span class="token operator">=</span><span class="token string">"操作"</span>  width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改为如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table  <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span>  border  style<span class="token operator">=</span><span class="token string">"width: 100%"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed  prop<span class="token operator">=</span><span class="token string">"id"</span>  label<span class="token operator">=</span><span class="token string">"水果ID"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"name"</span>  label<span class="token operator">=</span><span class="token string">"水果名称"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"sale"</span>  label<span class="token operator">=</span><span class="token string">"水果销量"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"icon"</span>  label<span class="token operator">=</span><span class="token string">"图片"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed<span class="token operator">=</span><span class="token string">"right"</span>  label<span class="token operator">=</span><span class="token string">"操作"</span>  width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这时会发现，图片里放的时url的值（图片地址），而不是要展示的图片，此时我们需要在图片显示栏加即可，如下所示：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table  <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span>  border  style<span class="token operator">=</span><span class="token string">"width: 100%"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed  prop<span class="token operator">=</span><span class="token string">"id"</span>  label<span class="token operator">=</span><span class="token string">"水果ID"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"name"</span>  label<span class="token operator">=</span><span class="token string">"水果名称"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"sale"</span>  label<span class="token operator">=</span><span class="token string">"水果销量"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  prop<span class="token operator">=</span><span class="token string">"icon"</span>  label<span class="token operator">=</span><span class="token string">"图片"</span>  width<span class="token operator">=</span><span class="token string">"160"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>img <span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"scope.row.icon"</span> style<span class="token operator">=</span><span class="token string">"height: 70px"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column  fixed<span class="token operator">=</span><span class="token string">"right"</span>  label<span class="token operator">=</span><span class="token string">"操作"</span>  width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>slot-scope=&quot;scope&quot;</code>：slot-scope指的是把当前prop的对象传给scope（代号，自己命名）。<br><code>&lt;img :src=&quot;scope.row.icon&quot; style=&quot;height: 70px&quot;/&gt;</code>：scope.row.icon是指把当前对象的icon值取出来（图片的网址），赋给src属性，让img加载，并设置图片高度为70px。<br>这样就能正确显示了，此时Table.vue原有tableData已经不会被加载显示，可以设置为null。</p><h4 id="5-CURD-增删改查）页面数据"><a href="#5-CURD-增删改查）页面数据" class="headerlink" title="5.CURD(增删改查）页面数据"></a>5.CURD(增删改查）页面数据</h4><p>…..继续更新</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 项目 </tag>
            
            <tag> java </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
